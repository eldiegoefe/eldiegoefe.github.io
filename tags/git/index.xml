<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>git - Etiqueta - Certezas Dudosas</title>
        <link>https://eldiegoefe.github.io/tags/git/</link>
        <description>git - Etiqueta - Certezas Dudosas</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>eldiegoefe@gmail.com (Diego Efe)</managingEditor>
            <webMaster>eldiegoefe@gmail.com (Diego Efe)</webMaster><lastBuildDate>Wed, 20 May 2015 10:00:00 &#43;0000</lastBuildDate><atom:link href="https://eldiegoefe.github.io/tags/git/" rel="self" type="application/rss+xml" /><item>
    <title>Actualización de las instrucciones para armar un blog con Pelican y GitHub</title>
    <link>https://eldiegoefe.github.io/actualizaci%C3%B3n-de-las-instrucciones-para-armar-un-blog-con-pelican-y-github/</link>
    <pubDate>Wed, 20 May 2015 10:00:00 &#43;0000</pubDate><author>eldiegoefe@gmail.com (Diego Efe)</author><guid>https://eldiegoefe.github.io/actualizaci%C3%B3n-de-las-instrucciones-para-armar-un-blog-con-pelican-y-github/</guid>
    <description><![CDATA[El sitio oficial de Pelican, con sus intrucciones de instalación y uso es este. Originalmente, este post estuvo basado en las instrucciones de Nicholas Tan Jerome. El post original pueden verlo en este enlace pueden verlo en este enlace
Por un lado vamos a configurar un entorno virtual de Python donde vamos a instalar Pelican, y por otro lado vamos a utilizar un directorio subdividido en un subdirectorio para nuestro blog y dos subdirectorios más para herramientas de Pelican (themes y plugins de Pelican).]]></description>
</item>
<item>
    <title>Tutorial sobre control de versiones (parte 4)</title>
    <link>https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-4/</link>
    <pubDate>Fri, 10 Oct 2014 11:00:00 &#43;0000</pubDate><author>eldiegoefe@gmail.com (Diego Efe)</author><guid>https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-4/</guid>
    <description><![CDATA[Indice del Tutorial Parte 1. Cómo armar un repositorio local Parte 2. Cómo subir el repositorio local al remoto Parte 3. Cómo colaborar en un mismo repositorio remoto Parte 4. Cómo resolver conflictos Para ver las versiones (en inglés) en las cuales se basa este tutorial, podés visitar la página de Software Carpentry
Cuándo aparecen los conflictos El sistema de control de versiones permite que la gente trabaje en paralelo editando sus programas en código fuente.]]></description>
</item>
<item>
    <title>Tutorial sobre control de versiones (parte 3)</title>
    <link>https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-3/</link>
    <pubDate>Thu, 09 Oct 2014 10:00:00 &#43;0000</pubDate><author>eldiegoefe@gmail.com (Diego Efe)</author><guid>https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-3/</guid>
    <description><![CDATA[Indice del Tutorial Parte 1. Cómo armar un repositorio local Parte 2. Cómo subir el repositorio local al remoto Parte 3. Cómo colaborar en un mismo repositorio remoto Parte 4. Cómo resolver conflictos Para ver las versiones (en inglés) en las cuales se basa este tutorial, podés visitar la página de Software Carpentry
Probando el cooperativismo Vamos a practicar cómo se realiza una colaboración a través de un repositorio en Github.]]></description>
</item>
<item>
    <title>Más locura con Git</title>
    <link>https://eldiegoefe.github.io/m%C3%A1s-locura-con-git/</link>
    <pubDate>Wed, 08 Oct 2014 10:00:00 &#43;0000</pubDate><author>eldiegoefe@gmail.com (Diego Efe)</author><guid>https://eldiegoefe.github.io/m%C3%A1s-locura-con-git/</guid>
    <description><![CDATA[Hay un lindo tutorial interactivo para aprender a usar Git este Carpentry, recomendado desde el GitHub de Software Carpentry. Me gustó también el video Git for ages 4 and up (no entendí nada la presentación del expositor, pero el resto sí).
Al sitio interactivo llegué desde Astropy, en particular de la página How to make a code contribution, que parece que vale la pena leer, porque explica el workflow que utilizan, cosa que no había encontrado hasta ahora (que te expliquen cómo es la secuencia de acciones de un trabajo, su lógica, los trucos, puede ahorrar muchos problemas asociados con la inexperiencia).]]></description>
</item>
<item>
    <title>Tutorial sobre control de versiones (parte 2)</title>
    <link>https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-2/</link>
    <pubDate>Wed, 08 Oct 2014 10:00:00 &#43;0000</pubDate><author>eldiegoefe@gmail.com (Diego Efe)</author><guid>https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-2/</guid>
    <description><![CDATA[Indice del Tutorial Parte 1. Cómo armar un repositorio local Parte 2. Cómo subir el repositorio local al remoto Parte 3. Cómo colaborar en un mismo repositorio remoto Parte 4. Cómo resolver conflictos Para ver las versiones (en inglés) en las cuales se basa este tutorial, podés visitar la página de Software Carpentry
Armar un proyecto (repositorio) en GitHub Para subir el repositorio local a GitHub es indispensable tener una cuenta allí (que es gratis, así que a relajarse y disfrutar).]]></description>
</item>
<item>
    <title>Tutorial sobre control de versiones (parte 1)</title>
    <link>https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-1/</link>
    <pubDate>Mon, 06 Oct 2014 10:00:00 &#43;0000</pubDate><author>eldiegoefe@gmail.com (Diego Efe)</author><guid>https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-1/</guid>
    <description><![CDATA[En el sitio de Software Carpentry hay un buen tutorial sobre el uso de sistemas de control de versiones. Estos apuntes son prácticamente la traducción de esas instrucciones.
Indice del Tutorial Parte 1. Cómo armar un repositorio local Parte 2. Cómo subir el repositorio local al remoto Parte 3. Cómo colaborar en un mismo repositorio remoto Parte 4. Cómo resolver conflictos Para ver las versiones (en inglés) en las cuales se basa este tutorial, podés visitar la página de Software Carpentry]]></description>
</item>
<item>
    <title>Sincronizando con Git</title>
    <link>https://eldiegoefe.github.io/sincronizando-con-git/</link>
    <pubDate>Thu, 31 Jul 2014 10:00:00 &#43;0000</pubDate><author>eldiegoefe@gmail.com (Diego Efe)</author><guid>https://eldiegoefe.github.io/sincronizando-con-git/</guid>
    <description><![CDATA[Estuve tratando de escribir este blog desde dos computadoras distintas. Armé el sitio desde una de ellas (una PC de escritorio) siguiendo las instrucciones que puse en otro post y después subí el sitio a github con un pull. Quedan armadas tres ramas (branches) en los repositorios:
source master gh-pages Me cambié de máquina (a una laptop) e hice una copia de lo que había subido clonando el supositorio, digo el repositorio remoto.]]></description>
</item>
<item>
    <title>Blog con Pelican y GitHub</title>
    <link>https://eldiegoefe.github.io/blog-con-pelican-y-github/</link>
    <pubDate>Tue, 22 Apr 2014 10:00:00 &#43;0000</pubDate><author>eldiegoefe@gmail.com (Diego Efe)</author><guid>https://eldiegoefe.github.io/blog-con-pelican-y-github/</guid>
    <description><![CDATA[Actualización Pueden ver una actualización de estas instrucciones en este nuevo post
Instrucciones El sitio con las intrucciones sobre Pelican es este. Casi todo el contenido siguiente está basado en las instrucciones de Nicholas Tan Jerome. Para instalar Pelican se puede usar &quot;pip&quot;, más adelante hay más detalles, pero como referencia veloz basta decir que se puede hacer sencillamente (en la rama &quot;source&quot; y desde el ENV que se creará más adelante):]]></description>
</item>
<item>
    <title>Usando control de versiones</title>
    <link>https://eldiegoefe.github.io/usando-control-de-versiones/</link>
    <pubDate>Sun, 09 Feb 2014 10:00:00 &#43;0000</pubDate><author>eldiegoefe@gmail.com (Diego Efe)</author><guid>https://eldiegoefe.github.io/usando-control-de-versiones/</guid>
    <description><![CDATA[(Editado: empecé a traducir un buen tutorial de Git y lo pueden ver en este nuevo post
El año pasado conocí algo que ya se había cruzado en mi camino y no me había dado cuenta. Una necesidad lo requería: miles de versiones del mismo archivo con el nombre evolucionando con rastros de racionalidad pero en definitiva impidiendo saber si, tras dos o tres días de ausencia, me encontraba trabajando sobre la última versión o si la que decía &quot;ultima final para imprimir final b&quot; era realmente la que debía utilizar.]]></description>
</item>
</channel>
</rss>
