<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Certezas Dudosas - tecnicismos</title><link href="https://eldiegoefe.github.io/" rel="alternate"></link><link href="https://eldiegoefe.github.io/feeds/tecnicismos.atom.xml" rel="self"></link><id>https://eldiegoefe.github.io/</id><updated>2018-04-19T10:00:00+02:00</updated><subtitle>todo lo liquido se desvanece en el estomago</subtitle><entry><title>Instalacion de PyQt</title><link href="https://eldiegoefe.github.io/instalacion-de-pyqt.html" rel="alternate"></link><published>2018-04-19T10:00:00+02:00</published><updated>2018-04-19T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2018-04-19:/instalacion-de-pyqt.html</id><summary type="html">&lt;p&gt;Este es un post-ayudamemoria para la instalación de PyQt en un entorno virtual.
Tengo la impresión de que lo escribí ya en el blog pero no lo encuentro ni con
los buscadores más buscados (ag, ack,&amp;nbsp;pt):&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Activar el virtualenv, asumiendo que están instalados pyenv y
pyenv-virtualenvs (también tendría que …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Este es un post-ayudamemoria para la instalación de PyQt en un entorno virtual.
Tengo la impresión de que lo escribí ya en el blog pero no lo encuentro ni con
los buscadores más buscados (ag, ack,&amp;nbsp;pt):&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Activar el virtualenv, asumiendo que están instalados pyenv y
pyenv-virtualenvs (también tendría que agregar el tutorial para usarlos, pero
es demasiado para el propósito del día de hoy, aunque &amp;#8220;hoy&amp;#8221; no tiene sentido
para un texto perdido en la web). Supongamos que el entorno se llama&amp;nbsp;&amp;#8220;lab&amp;#8221;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pyenv activate lab
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Crear un directorio para descargar las fuentes de PyQt y &lt;span class="caps"&gt;SIP&lt;/span&gt;, por ejemplo
dentro del&amp;nbsp;/home/$user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir build
$ cd build
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Bajar las últimas versiones de PyQt y &lt;span class="caps"&gt;SIP&lt;/span&gt; de Sourceforge (luego de hacer la
búsqueda de PyQt ver en la pestaña &amp;#8220;files&amp;#8221;, ahí aparecen tanto PyQt como
&lt;span class="caps"&gt;SIP&lt;/span&gt;). Estos son los enlaces para ir directamente (bajar los archivos .tar.gz
para X11): &lt;a class="reference external" href="http://sourceforge.net/projects/pyqt/files/PyQt4/"&gt;PyQt4&lt;/a&gt; y &lt;a class="reference external" href="http://sourceforge.net/projects/pyqt/files/sip/"&gt;&lt;span class="caps"&gt;SIP&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol class="arabic" start="4"&gt;
&lt;li&gt;&lt;p class="first"&gt;Descomprimir los tar (el nombre del archivo depende de la versión&amp;nbsp;vigente):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ tar zxvf PyQt-x11-gpl-4.11.3.tar.gz
$ tar zxvf sip-4.16.6.tar.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Puede ser necesario instalar algunas dependencias. Para Python&amp;nbsp;2.7:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install python2.7-dev libxext-dev python-qt4 qt4-dev-tools libqt4-dev build-essential
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para&amp;nbsp;Python3:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install python3-dev libxext-dev python-qt4 qt4-dev-tools
libqt4-dev build-essential
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Compilar &lt;span class="caps"&gt;SIP&lt;/span&gt; y verificar que no haya errores (sobre todo en el make install,
si aparecen errores puede ser que requiera ejecutar como administrador: sudo
make&amp;nbsp;install):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cd sip-4.16.6
$ python configure.py
$ make
$ [sudo] make install
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Si aparecen errores porque no se tienen permisos de escritura,
ejecutar la última orden incluyendo el &lt;em&gt;sudo&lt;/em&gt; porque parece que la
instalación si bien se realiza desde el entorno virtual, termina
escribiendo en /usr/include/python2.7 (que en mi instalación
pertenece a &lt;em&gt;root&lt;/em&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Ir al directorio donde se descomprimió PyQt y ejecutar las mismas&amp;nbsp;órdenes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ python configure.py
$ make
$ [sudo] make install
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Podría haber un error en el primer comando, relacionado con la
falta de una instalación de Qt (o con una instalación fallida). Por
eso no hay que saltearse el paso&amp;nbsp;5.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Listo, correr Python y verificar que el módulo se importa sin&amp;nbsp;errores:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;PyQt4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;9. &lt;em&gt;Old comment&lt;/em&gt;: &amp;#8220;Pffff, no funciona ahora&amp;#8230; Después de tanto detalle la
cosa no anda, que garrón (anduvo y después dejó de andar, tiene
demasiados problemas&amp;nbsp;esto).&amp;#8221;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;New comment&lt;/em&gt;: Anduvo todo bien, lo que pasa es que probaba con &amp;#8220;import
pyqt4&amp;#8221; todo en minúscula y entonces daba error. ¡Cuidado entonces con
las instrucciones porque son&amp;nbsp;case-sensitive!&lt;/p&gt;
&lt;ol class="arabic simple" start="10"&gt;
&lt;li&gt;Nota a mi mismo: instalar también pyqtgraph, pyusb (con &lt;span class="caps"&gt;PIP&lt;/span&gt;).&lt;/li&gt;
&lt;/ol&gt;
</content><category term="tecnicismos"></category><category term="python"></category><category term="pyqtgraph"></category><category term="pyqt"></category><category term="qt"></category><category term="sip"></category><category term="software"></category></entry><entry><title>Instalación y configuración de Emacs</title><link href="https://eldiegoefe.github.io/instalacion-y-configuracion-de-emacs.html" rel="alternate"></link><published>2017-12-01T10:00:00+01:00</published><updated>2017-12-01T10:00:00+01:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2017-12-01:/instalacion-y-configuracion-de-emacs.html</id><summary type="html">&lt;p&gt;Estos son los pasos que sigo cuando instalo Emacs y Spacemacs, junto con el
archivo de configuración que guardo en un repositorio&amp;nbsp;privado.&lt;/p&gt;
&lt;div class="section" id="paso-1-modos-de-instalacion"&gt;
&lt;h2&gt;Paso 1: Modos de&amp;nbsp;instalación&lt;/h2&gt;
&lt;div class="section" id="opcion-a-repositorio-con-la-ultima-version-de-emacs"&gt;
&lt;h3&gt;Opción A: repositorio con la última versión de&amp;nbsp;Emacs&lt;/h3&gt;
&lt;p&gt;Esta es la manera más facil de instalación, para un un sistema descendiente …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Estos son los pasos que sigo cuando instalo Emacs y Spacemacs, junto con el
archivo de configuración que guardo en un repositorio&amp;nbsp;privado.&lt;/p&gt;
&lt;div class="section" id="paso-1-modos-de-instalacion"&gt;
&lt;h2&gt;Paso 1: Modos de&amp;nbsp;instalación&lt;/h2&gt;
&lt;div class="section" id="opcion-a-repositorio-con-la-ultima-version-de-emacs"&gt;
&lt;h3&gt;Opción A: repositorio con la última versión de&amp;nbsp;Emacs&lt;/h3&gt;
&lt;p&gt;Esta es la manera más facil de instalación, para un un sistema descendiente de
Debian (Ubuntu, Mint,&amp;nbsp;etc).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo add-apt-repository ppa:ubuntu-elisp/ppa
$ sudo apt-get update
$ sudo apt-get install emacs-snapshot emacs-snapshot-el
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="opcion-b-compilacion-desde-un-terminal"&gt;
&lt;h3&gt;Opción B: compilación desde un&amp;nbsp;terminal&lt;/h3&gt;
&lt;p&gt;Bajar la versión a instalar desde &lt;a class="reference external" href="http://ftp.gnu.org/gnu/emacs/"&gt;http://ftp.gnu.org/gnu/emacs/&lt;/a&gt; son dos archivos
.tar.gz y .tar.gz.sig (o sino .tar.xz y .tar.xz.sig). Tiene la ventaja de
optimizar el programa de acuerdo a la máquina específica en la que va a&amp;nbsp;correr.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ tar -xf emacs-??.?.tar.gz            &lt;span class="p"&gt;;&lt;/span&gt; descomprimir el archivo
$ &lt;span class="nb"&gt;cd&lt;/span&gt; emacs-??.?                        &lt;span class="p"&gt;;&lt;/span&gt; entrar al directorio
$ sudo apt-get install build-essential &lt;span class="p"&gt;;&lt;/span&gt; instalar dependencias
$ sudo apt-get build-dep emacs24       &lt;span class="p"&gt;;&lt;/span&gt; instalar dependencias
$ ./configure       &lt;span class="p"&gt;;&lt;/span&gt; preparar para compilar
$ make              &lt;span class="p"&gt;;&lt;/span&gt; compilar
$ sudo make install &lt;span class="p"&gt;;&lt;/span&gt; instalar
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr class="docutils" /&gt;
&lt;div class="section" id="paso-2-instalar-spacemacs"&gt;
&lt;h2&gt;Paso 2: Instalar&amp;nbsp;Spacemacs&lt;/h2&gt;
&lt;p&gt;Las instrucciones son muy fáciles y están en el &lt;a class="reference external" href="https://github.com/syl20bnr/spacemacs"&gt;github de spacemacs&lt;/a&gt;. Hay que borrar (o guardar en otro
lado) el directorio ~/.emacs.d/ y luego clonar spacemacs allí con la siguiente&amp;nbsp;orden:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Spacemacs se instalará recién la próxima vez que se inicie&amp;nbsp;Emacs.&lt;/p&gt;
&lt;/div&gt;
&lt;hr class="docutils" /&gt;
&lt;div class="section" id="paso-3-clonar-archivo-de-configuracion"&gt;
&lt;h2&gt;Paso 3: Clonar archivo de&amp;nbsp;configuración&lt;/h2&gt;
&lt;p&gt;En un repositorio de Bitbucket tengo guardados los archivos de configuración de
distintos programas o sistemas. Principalmente las del sistema operativo y de
Emacs. Les recomiendo hacer lo mismo, para no tener que reconfigurar el sistema
de vuelta tras cada&amp;nbsp;reinstalación.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone https://bitbucket.org/mi-usuario/mis-configs
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Luego hay que colocar symlinks desde los lugares en los que estos archivos de
configuración deberían ser encontrados por el sistema, hacia los archivos en
cuestión dentro del directorio&amp;nbsp;~/mis-configs.&lt;/p&gt;
&lt;p&gt;La fórmula es: ln -s /path/to/file&amp;nbsp;/path/to/symlink&lt;/p&gt;
&lt;p&gt;Por&amp;nbsp;ejemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ln -s ~/.spacemacs ~/.mis-configs/.spacemacs
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;hr class="docutils" /&gt;
&lt;div class="section" id="paso-4-iniciar-emacs"&gt;
&lt;h2&gt;Paso 4: Iniciar&amp;nbsp;Emacs&lt;/h2&gt;
&lt;p&gt;Se va a actualizar spacemacs de acuerdo a las configuraciones que recuperamos
del repositorio. Quizás haya que salir y volver a entrar a Emacs varias veces
hasta que la instalación se complete&amp;nbsp;exitosamente.&lt;/p&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="emacs"></category></entry><entry><title>Bienvenidos a Scheme</title><link href="https://eldiegoefe.github.io/bienvenidos-a-scheme.html" rel="alternate"></link><published>2017-11-28T10:00:00+01:00</published><updated>2017-11-28T10:00:00+01:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2017-11-28:/bienvenidos-a-scheme.html</id><summary type="html">&lt;p&gt;Nuevamente un vórtice del espacio-tiempo perturbó el campo magnético terrestre y
esta vez no solamente escaparon de prisión los más peligrosos rufianes de Ciudad
Gótica, sino que en vez de retomar el estudio de Clojure, el dialecto de Lisp
que me cautivó en 2014, viajé hasta otro universo computacional y …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nuevamente un vórtice del espacio-tiempo perturbó el campo magnético terrestre y
esta vez no solamente escaparon de prisión los más peligrosos rufianes de Ciudad
Gótica, sino que en vez de retomar el estudio de Clojure, el dialecto de Lisp
que me cautivó en 2014, viajé hasta otro universo computacional y ahora estoy a
toda máquina leyendo sobre Scheme, que es otro dialecto del lenguaje diseñado
para simular la inteligencia humana, creado por John McCarthy en la década
del&amp;nbsp;50.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://c1.staticflickr.com/5/4541/38650993086_6356f41de4_o.jpg"&gt;&lt;img alt="John McCarthy" src="https://c1.staticflickr.com/5/4541/38650993086_6356f41de4_o.jpg" style="width: 100.0%;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Salvo que seas un hongo, o que hayas sido fascinado por la retórica kirchnerista
y/o la capacidad de gestión del macrismo con la consiguiente pérdida correlativa
de capacidades cognitivas, aprender sobre programación en Lisp te provoca una
masiva liberación de norepinefrina y serotonina, un insoportable deseo de
visitar Las Toninas y de comer pan dulce con muchas pasas de uva como el que
venden en la granjita de al lado de&amp;nbsp;casa.&lt;/p&gt;
&lt;p&gt;Scheme es un dialecto muy utilizado en ámbitos educativos. Se que es más pequeño
y sencillo que Common Lisp, y no se qué diferencias tiene con Clojure y Racket y
otros herederos del LISt Processor (de ahí el nombre del lenguaje McCartista).
El tema es que los cursos introductorios de &amp;#8220;Computer Science&amp;#8221; en las
universidades más prestigiosas del mundo (Berkeley, &lt;span class="caps"&gt;MIT&lt;/span&gt;, La Matanza, Stanford,
etc) lo utilizan o lo utilizaban hasta hace muy poco. De hecho, justamente
llegué a Scheme buscando bibliografía para estudiar programación y Lisp. Me
encontré en la web varios libros y cursos&amp;nbsp;recomendados:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;el curso &lt;span class="caps"&gt;CS&lt;/span&gt; 61A dictado en Berkeley por Brian&amp;nbsp;Harvey.&lt;/li&gt;
&lt;li&gt;el libro &amp;#8220;&lt;a class="reference external" href="https://mitpress.mit.edu/sicp/full-text/book/book.html"&gt;Structure and Interpretation of Computer Programs&lt;/a&gt;&amp;#8221; (comunmente
llamado &lt;span class="caps"&gt;SICP&lt;/span&gt;) de Harold Abelson, Gerald Jay Sussman y Julie Sussman. &lt;span class="caps"&gt;GJ&lt;/span&gt;
Sussman fue uno de los dos diseñadores originales de Scheme, junto a su
discípulo Guy L. Steele Jr (que diseñó y documentó también otros lenguajes).
Mientras ellos elaboran nuevos lenguajes uno apenas puede lidiar con el
ordenamiento de las estanterías del&amp;nbsp;lavadero.&lt;/li&gt;
&lt;li&gt;el libro &amp;#8220;Scheme and the Art of Programming&amp;#8221; de George Springer y Daniel&amp;nbsp;Friedman&lt;/li&gt;
&lt;li&gt;el libro &amp;#8220;&lt;a class="reference external" href="https://people.eecs.berkeley.edu/~bh/ss-toc2.html"&gt;Simply Scheme&lt;/a&gt;&amp;#8221; de Brian Harvey y Matthew Wright. Debajo pueden
ver la tapa de la primera&amp;nbsp;edición.&lt;/li&gt;
&lt;li&gt;la serie de libros &amp;#8220;The Little Schemer&amp;#8221;, &amp;#8220;The Reasoned Schemer&amp;#8221;, &amp;#8220;The Seasoned
Schemer&amp;#8221; de Daniel Friedman, Matthias Felleisen, William Byrd y Oleg&amp;nbsp;Kiselyov.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Las clases del &lt;a class="reference external" href="https://archive.org/details/ucberkeley-webcast-PL6879A8466C44A5D5"&gt;2008&lt;/a&gt; y &lt;a class="reference external" href="http://www.infocobuild.com/education/audio-video-courses/computer-science/cs61a-spring2011-berkeley.html"&gt;2011&lt;/a&gt; del &lt;span class="caps"&gt;CS&lt;/span&gt; 61A dictadas por &lt;a class="reference external" href="https://people.eecs.berkeley.edu/~bh/"&gt;Brian Harvey&lt;/a&gt; pueden
verse online (hagan click en los años &lt;a class="reference external" href="https://archive.org/details/ucberkeley-webcast-PL6879A8466C44A5D5"&gt;2008&lt;/a&gt; y &lt;a class="reference external" href="http://www.infocobuild.com/education/audio-video-courses/computer-science/cs61a-spring2011-berkeley.html"&gt;2011&lt;/a&gt; para llegar). Sus clases
son muy claras y entretenidas. Tanto en estas clases como en la bibliografía el
énfasis está puesto en estudiar / encontrar / desarrollar / identificar los
conceptos con los cuales generar abstracciones para resolver problemas con la
computadora, más que en enseñar la sintaxis de un lenguaje de programación.
También está disponible online &lt;a class="reference external" href="https://cs61a.org"&gt;el curso &lt;span class="caps"&gt;CS&lt;/span&gt; 61A actual&lt;/a&gt; (cuyo lenguaje
principal es Python 3) con acceso a todo el material con el que cuentan los
alumnos (generoso, abrumador, envidiable, es impresionante el interés por
enseñar que tienen esos equipos de profesores y auxiliares). Acá pueden ver la
primera clase del 2008 (desde&amp;nbsp;YouTube).&lt;/p&gt;
&lt;div class="youtube"&gt;&lt;iframe src="https://www.youtube.com/embed/xWZb9U92rgo" width="560" height="315" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;También está online el curso completo &amp;#8220;Structure and Interpretation of Computer
Science&amp;#8221; basado en el libro homónimo, con &lt;a class="reference external" href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-001-structure-and-interpretation-of-computer-programs-spring-2005/video-lectures/"&gt;las clases de 1986 en video&lt;/a&gt; (la
primera edición del libro es de 1985, y la segunda de 1996, esta última es la
que está online y aparece en un link más arriba). Hay que acostumbrarse al hecho
de que sean grabaciones viejas de menor calidad a los tutoriales en 1080p de
YouTube que se ven actualmente, pero el contenido lo&amp;nbsp;merece.&lt;/p&gt;
&lt;p&gt;Se me hizo un lío hasta descubrir por dónde empezar, con tanto material
extraordinario. El &lt;span class="caps"&gt;SICP&lt;/span&gt; es el libro clásico que todo el mundo recomienda en los
foros, pero no es sencillo. Por suerte descubrí que el libro de Harvey-Wright se
propone como precuela (lo dicen en el prólogo) y es recomendable leerlo antes,
como preparación para el de&amp;nbsp;Abelson-Sussman.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Simply Scheme" src="https://c1.staticflickr.com/5/4563/38677380062_73929181b2_o.jpg" style="width: 50.0%;" /&gt;
&lt;/div&gt;
&lt;p&gt;También está buenísimo &amp;#8220;The Little Schemer&amp;#8221; que lo tenía guardado desde hace
mucho. Apenas voy por la mitad, pero ya mismo puedo recomendarlo porque me
parece muy apropiado para entender, por ejemplo, la recursividad y cómo usarla,
algo central en &lt;span class="caps"&gt;LISP&lt;/span&gt;. El texto está organizado con la estructura de &lt;a class="reference external" href="https://es.wikipedia.org/wiki/Enseñanza_programada"&gt;enseñanza
programada&lt;/a&gt;. En esta modalidad (que conocí en una serie de libros que tenía mi
hermano, &amp;#8220;&lt;a class="reference external" href="https://www.amazon.com/Curso-programado-cálculo-Sucesiones-infinitas/dp/8429150552"&gt;Curso Programado de Cálculo&lt;/a&gt;&amp;#8221; de Editorial Reverté, que usé en la
secundaria cuando quise prepararme para la universidad) la información se
presenta secuencialmente en pequeños párrafos que contienen problemas o frases
para resolver y completar. En la misma hoja están las soluciones a los problemas
y las palabras faltantes. El lector trata de responder y completar los espacios
en blanco mientras tapa las respuestas, de manera que cuando termina puede
comparar sus resultados con las soluciones correctas. Será conductista pero es
muy entretenido, la presentación va avanzando en pasos muy pequeños y al menos a
mi me genera un estímulo muy agradable ir descubriendo la coincidencia o
cercanía de las respuestas propias a las indicadas por el autor. Estaría bueno
que haya más libros con esta&amp;nbsp;modalidad.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://c1.staticflickr.com/5/4531/38677094272_e1e5c22557_h.jpg"&gt;&lt;img alt="the little schemer" src="https://c1.staticflickr.com/5/4531/38677094272_d56db10a21_b.jpg" style="width: 100.0%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Una página del libro de enseñanza&amp;nbsp;programada&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Por suerte todos estos libros están disponibles gratuitamente o se consiguen con
algún torrent, porque por un lado no están disponibles en Argentina, y sus
precios (en &lt;a class="reference external" href="https://www.bookdepository.com"&gt;BookDepository&lt;/a&gt;, que no cobra el costo de envío, Amazon no los
envía a nuestro país) son altísimos. &lt;span class="caps"&gt;SICP&lt;/span&gt; cuesta casi 1000 &lt;span class="caps"&gt;ARS&lt;/span&gt;, Simply Scheme
más de 1300 &lt;span class="caps"&gt;ARS&lt;/span&gt;, The Little Schemer casi 700 &lt;span class="caps"&gt;ARS&lt;/span&gt;,&amp;nbsp;etc.&lt;/p&gt;
&lt;p&gt;En un próximo post voy a explicar cómo uso Scheme desde el shell o desde Emacs
para probar los pequeños programas que los libros tienen de ejemplo o los que
surgen de los problemas que&amp;nbsp;proponen.&lt;/p&gt;
</content><category term="tecnicismos"></category><category term="scheme"></category><category term="lisp"></category><category term="clojure"></category><category term="programacion"></category></entry><entry><title>Peso de los directorios en Linux</title><link href="https://eldiegoefe.github.io/peso-de-los-directorios-en-linux.html" rel="alternate"></link><published>2017-09-03T10:00:00+02:00</published><updated>2017-09-03T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2017-09-03:/peso-de-los-directorios-en-linux.html</id><summary type="html">&lt;p&gt;Se me está por llenar el disco rígido externo, donde tengo fotos, películas,
documentos y demás. Un terabyte de porquerías, pero nada que quiera borrar. ¿O
sí? Ir directorio por directorio es tedioso y puede volverse una tarea
abrumadora si aparecen muchos subdirectorios anidados con incierto contenido
dentro de los …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Se me está por llenar el disco rígido externo, donde tengo fotos, películas,
documentos y demás. Un terabyte de porquerías, pero nada que quiera borrar. ¿O
sí? Ir directorio por directorio es tedioso y puede volverse una tarea
abrumadora si aparecen muchos subdirectorios anidados con incierto contenido
dentro de los&amp;nbsp;mismos.&lt;/p&gt;
&lt;p&gt;Se puede usar el comando &lt;em&gt;du&lt;/em&gt; para obtener el tamaño de los directorios y
encadenarlo con un &lt;em&gt;sort&lt;/em&gt; para que el resultado aparezca ordenado por el tamaño
de los&amp;nbsp;mismos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ du -sh * | sort -hr

368G Vídeos
178G blogs
41G  Descargas
5,1G VirtualBox VMs
4,2G Documentos
2,2G Imágenes
1,5G sistemas-operativos
611M calibre
219M opt
143M programas
4,4M bin
3,2M org
1,9M mis-proyectos
1,1M mis-configs
744K ordenar
452K temp
8,0K usr
4,0K Público
4,0K Plantillas
4,0K Música
4,0K Escritorio
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pero en StackExchange por supuesto que está la pregunta &lt;a class="reference external" href="https://unix.stackexchange.com/questions/185764/how-do-i-get-the-size-of-a-directory-on-the-command-line"&gt;How do I get the size
of a directory on the command line?&lt;/a&gt; y entre las respuestas alguien sugería
usar &lt;em&gt;ncdu&lt;/em&gt;, que es una versión con interfaz gráfica, y que además permite
navegar por los directorios, lo cual facilita encontrar aquellos que ocupan
mucho&amp;nbsp;espacio.&lt;/p&gt;
&lt;p&gt;En Debian, Ubuntu, Mint y semejantes se instala sencillamente&amp;nbsp;con:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install ncdu
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Al ejecutarse, el programa lee todos los directorios a partir del directorio
local (desde el cual se está ejecutando), y al finalizar la lectura presenta una
pantalla como la que aparece debajo (click sobre ella para verla más grande).
Con la tecla &lt;em&gt;?&lt;/em&gt; aparece una ayuda que indica las teclas que permiten la
navegación, seleccionar diferentes criterios de ordenamiento (por nombre, por
tamaño, etc), elegir el modo en que se presentan los porcentajes y también se
pueden borrar directorios (con la tecla &lt;em&gt;d&lt;/em&gt;).&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://c1.staticflickr.com/5/4352/36200585553_532f72d9d6_o.png"&gt;&lt;img alt="pantalla de ncdu" class="align-center" src="https://c1.staticflickr.com/5/4352/36200585553_aaf8edc5de_b.jpg" style="width: 100.0%;" /&gt;&lt;/a&gt;
</content><category term="tecnicismos"></category><category term="linux"></category></entry><entry><title>Backup con RSync</title><link href="https://eldiegoefe.github.io/backup-con-rsync.html" rel="alternate"></link><published>2017-06-21T10:00:00+02:00</published><updated>2017-06-21T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2017-06-21:/backup-con-rsync.html</id><summary type="html">&lt;p&gt;RSync es un programa que permite copiar archivos, pero a diferencia de un
copiado común, compara los archivos de origen y destino y sólo realiza la
transferencia de la diferencia entre ambos: si son iguales no transfiere nada,
si es un archivo de texto y se agregó sólo un caracter …&lt;/p&gt;</summary><content type="html">&lt;p&gt;RSync es un programa que permite copiar archivos, pero a diferencia de un
copiado común, compara los archivos de origen y destino y sólo realiza la
transferencia de la diferencia entre ambos: si son iguales no transfiere nada,
si es un archivo de texto y se agregó sólo un caracter, RSync envía unicamente
ese caracter y reconstruye el archivo en el destino para que ambas copias sean
exactamente iguales. De este modo el procedimiento es más eficiente, en
particular si se copian archivos grandes. La copia se puede realizar entre
cualquier directorio de origen y destino, ya sea que se encuentren en un mismo
disco rígido, en diferentes discos en una misma computadora o también entre
una máquina local y una remota (o&amp;nbsp;viceversa).&lt;/p&gt;
&lt;p&gt;Poder copiar de este modo es óptimo para realizar backups de nuestros datos.
Como se pueden copiar directorios recursivamente entonces es muy facil, por
ejemplo, mantener una copia actualizada de una colección de fotos, que
generalmente tiene muchos subdirectorios para almacenar imágenes ordenadas por
fecha o por temática. Es RSync el que compara el contenido de cada
subdirectorio, y por ejemplo si le cambiamos el contraste a una foto, lo detecta
y actualiza en la copia de destino. Nos ahorra tener que identificar cuál es el
archivo que procesamos, y todo con una sola linea de comandos, que ya&amp;nbsp;veremos&amp;#8230;&lt;/p&gt;
&lt;p&gt;Primero tenemos que saber la ubicación de los archivos que queremos copiar y el
camino hacia el lugar donde haremos la copia. Para esta tarea podemos usar el
comando df, que muestra el espacio libre en cada sistema de archivos que se
encuentra montado en el sistema y también informa el punto de montaje. El
modificador &lt;em&gt;-h&lt;/em&gt; (la forma corta de &lt;em&gt;&amp;#8212;human-readable&lt;/em&gt;) ofrece el resultado en
potencias de&amp;nbsp;1024.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; df -h

&lt;span class="go"&gt;S.ficheros     Tamaño Usados  Disp Uso% Montado en&lt;/span&gt;
&lt;span class="go"&gt;udev             3,9G      0  3,9G   0% /dev&lt;/span&gt;
&lt;span class="go"&gt;tmpfs            784M   9,7M  775M   2% /run&lt;/span&gt;
&lt;span class="go"&gt;/dev/sda4         49G    23G   24G  50% /&lt;/span&gt;
&lt;span class="go"&gt;tmpfs            3,9G   237M  3,6G   7% /dev/shm&lt;/span&gt;
&lt;span class="go"&gt;tmpfs            5,0M   4,0K  5,0M   1% /run/lock&lt;/span&gt;
&lt;span class="go"&gt;tmpfs            3,9G      0  3,9G   0% /sys/fs/cgroup&lt;/span&gt;
&lt;span class="go"&gt;/dev/sda2        1,3G   500M  705M  42% /boot&lt;/span&gt;
&lt;span class="go"&gt;/dev/sda5        853G   402G  408G  50% /home&lt;/span&gt;
&lt;span class="go"&gt;cgmfs            100K      0  100K   0% /run/cgmanager/fs&lt;/span&gt;
&lt;span class="go"&gt;tmpfs            784M    16K  784M   1% /run/user/1001&lt;/span&gt;
&lt;span class="go"&gt;/dev/sdc1        932G   912G   21G  98% /media/diego/biblioteca&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;En el ejemplo pueden ver mi directorio de origen (que son archivos ubicados
en /home) y el destino será algún subdirectorio en el disco rígido externo, que
se encuentra montado en /media/diego/biblioteca (me está quedando poco&amp;nbsp;espacio&amp;#8230;).&lt;/p&gt;
&lt;p&gt;También se puede utilizar el comando &lt;em&gt;lsblk&lt;/em&gt; para obtener información sobre los
discos&amp;nbsp;montados:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ lsblk

NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda      8:0    0 931,5G  0 disk
├─sda1   8:1    0    20M  0 part
├─sda2   8:2    0   1,3G  0 part /boot
├─sda3   8:3    0  15,3G  0 part [SWAP]
├─sda4   8:4    0    49G  0 part /
└─sda5   8:5    0 865,9G  0 part /home
sdb      8:16   0 119,2G  0 disk
├─sdb1   8:17   0   100M  0 part
├─sdb2   8:18   0 118,7G  0 part
└─sdb3   8:19   0   450M  0 part
sdc      8:32   0 931,5G  0 disk
└─sdc1   8:33   0 931,5G  0 part /media/diego/biblioteca
sdd      8:48   0 931,5G  0 disk
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Generalmente el comando RSync se ejecuta con estos&amp;nbsp;modificadores:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ rsync -avh --progress --delete /desde /hacia
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Donde:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;a&lt;/strong&gt;: archive, es un modificador que se usa generalmente. Es una abreviatura para
no tener que poner todos estos otros modificadores -rlptgoD. Sirve para
asegurar que en la transferencia se preserven los symbolic links,
dispositivos, atributos, permisos, ownerships,&amp;nbsp;etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;v&lt;/strong&gt;:&amp;nbsp;verbose&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;h&lt;/strong&gt;: human&amp;nbsp;readable.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;progress&lt;/strong&gt;: muestra el progreso de la&amp;nbsp;transferencia.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;delete&lt;/strong&gt;: borra los archivos en destino que no están en el&amp;nbsp;origen.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/desde&lt;/strong&gt;: directorio de&amp;nbsp;origen&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/hacia&lt;/strong&gt;: directorio de&amp;nbsp;destino&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Leyendo el manual de RSync encontramos dos modos distintos de copiar un
directorio hacia un destino, siendo la diferencia el uso de un &lt;em&gt;trailing slash&lt;/em&gt;
(el símbolo&amp;nbsp;/):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rsync -av /origen/foo /destino
rsync -av /origen/foo/ /destino/foo
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;En el primer caso se copia el directorio foo dentro del directorio destino dest.
En cambio con el trailing slash indicamos que lo que se copia es el contenido
del directorio foo, y entonces para mantener la estructura en el destino,
debemos copiarlo dentro de un directorio foo (no directamente en&amp;nbsp;dest).&lt;/p&gt;
&lt;p&gt;Para copiar todas mis fotos, lo que tengo que hacer es crear (por única vez) un
directorio para tal efecto en el disco&amp;nbsp;externo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir /media/diego/biblioteca/mantener-backup/fotos-diego
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para efectuar la copia de las fotos que tengo ubicadas dentro de
/home/diego/fotos, el comando&amp;nbsp;será:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ rsync -avh --progress --delete ~/fotos/ /media/diego/biblioteca/mantener-backup/fotos-diego
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Otro ejemplo es la copia que hago de mi colección de libros organizados con&amp;nbsp;Calibre:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ rsync -avh --progress --delete ~/calibre/ /media/diego/biblioteca/espejo-del-rigido/calibre
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;De un rígido externo a otro (porque hay que hacer backup del backup de vez en&amp;nbsp;cuando):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ rsync -avh --progress --delete /media/diego/biblioteca/mantener-backup/ /media/diego/backup/mantener-backup
$ rsync -avh --progress --delete /media/diego/biblioteca/fotos-videos/ /media/diego/backup/fotos-videos
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;La primera vez que se ejecute rsync, cuando el destino está vacío, consumirá más
tiempo porque debe copiar todos los archivos. Sin embargo, en ejecuciones
posteriores se compararán los directorios de origen y destino, y sólo se copiará
aquello que haya cambiado (o se borrarán aquellos archivos en el directorio de
destino que se hayan eliminado del directorio de origen). Este modo de hacer
backup me cambió la&amp;nbsp;vida.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;A continuación, un ejemplo modificado de &lt;a class="reference external" href="https://superuser.com/questions/576687/how-to-print-files-that-would-have-been-changed-using-rsync"&gt;StackExchange&lt;/a&gt;: sirve para verificar
con un &amp;#8220;dry-run&amp;#8221; cuáles serán los cambios que se realizarán, sin que se
materialicen. Para efectuar realmente los cambios hay que borrar &amp;#8220;&amp;#8212;dry-run&amp;#8221; y
ejecutar de nuevo la&amp;nbsp;orden.&lt;/p&gt;
&lt;p&gt;El &amp;#8220;delete-after&amp;#8221; realiza el borrado de los archivos en el destino (aquellos que
no están en el origen) recién después de que se haya completado la copia. El
directorio de origen y el del final están probados para un caso particular en mi
instalación de Manjaro (18/11/2020), así que cada uno tendrá que modificarlo de
acuerdo a sus&amp;nbsp;ubicaciones.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ rsync -avhi --dry-run --progress --delete-after ~/Calibre/
/run/media/diego/biblioteca/espejo-del-rigido/calibre/general/ | egrep -v
&amp;quot;sending incremental file list&amp;quot; | egrep -v &amp;quot;^\
&lt;/pre&gt;&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="rsync"></category><category term="backup"></category><category term="linux"></category></entry><entry><title>FreeCAD</title><link href="https://eldiegoefe.github.io/freecad.html" rel="alternate"></link><published>2016-11-25T10:00:00+01:00</published><updated>2016-11-25T10:00:00+01:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2016-11-25:/freecad.html</id><summary type="html">&lt;p&gt;Para proyectar diseños en madera los carpinteros de YouTube suelen usar
SketchUp, que es un software de Google que sólo funciona en Windows y Mac.
Busqué algún programa que pueda usar con el mismo fin pero en Linux, y encontré
FreeCAD. Estoy siguiendo un buen tutorial en castellano en &lt;a class="reference external" href="https://www.youtube.com/user/obijuancube"&gt;el …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Para proyectar diseños en madera los carpinteros de YouTube suelen usar
SketchUp, que es un software de Google que sólo funciona en Windows y Mac.
Busqué algún programa que pueda usar con el mismo fin pero en Linux, y encontré
FreeCAD. Estoy siguiendo un buen tutorial en castellano en &lt;a class="reference external" href="https://www.youtube.com/user/obijuancube"&gt;el canal de Juan
Gonzalez Gomez&lt;/a&gt;, aca pueden ver el primer video de la&amp;nbsp;serie:&lt;/p&gt;
&lt;div class="youtube"&gt;&lt;iframe src="https://www.youtube.com/embed/2_DbFzFV9D4" width="560" height="315" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;Algunos apuntes&amp;nbsp;iniciales:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Luego de iniciar un nuevo proyecto seleccionar el &lt;em&gt;espacio de trabajo&lt;/em&gt;&amp;nbsp;Part.&lt;/li&gt;
&lt;li&gt;Hay distintos &lt;em&gt;estilos de navegación&lt;/em&gt; que se seleccionan con el menú
contextual que se activa en cualquier región del espacio de trabajo activo.
Por ejemplo tiene un modo &lt;em&gt;Blender&lt;/em&gt; (resultará familiar a los usuarios de ese
software de edición de&amp;nbsp;video).&lt;/li&gt;
&lt;li&gt;Se puede visualizar el origen y ejes de coordenadas desde el menú &lt;em&gt;View /
Toggle Axis Cross&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;La creación de cubos, esferas y otras formas primitivas se produce mediante
los iconos&amp;nbsp;amarillos.&lt;/li&gt;
&lt;li&gt;Cada elemento tiene un par de pestañas asociadas: en &lt;em&gt;View&lt;/em&gt; se pueden cambiar,
por ejemplo, los colores y tipos de visualización, y en &lt;em&gt;Data&lt;/em&gt; las dimensiones y
posición de los&amp;nbsp;objetos.&lt;/li&gt;
&lt;li&gt;Se puede hacer una selección individual haciendo click sobre cada objeto en el
dibujo o sobre el listado de objetos del proyecto. Se pueden seleccionar
conjuntos de objetos con los modificadores &lt;span class="caps"&gt;CTRL&lt;/span&gt; y&amp;nbsp;Shift.&lt;/li&gt;
&lt;li&gt;La posición de los objetos (y otras propiedades) se puede modificar tipeando
el nuevo número en el display correspondiente o sino activando el display y
moviendo la rueda del&amp;nbsp;mouse.&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;SPC&lt;/span&gt;: muestra u oculta (transparenta) el objeto&amp;nbsp;activo.&lt;/li&gt;
&lt;li&gt;En los primeros videos de la serie que recomiendo al principio se ve cómo
construir formas complejas a partir de uniones o restas de formas&amp;nbsp;primitivas.&lt;/li&gt;
&lt;li&gt;También se pueden clonar formas usando una simetría polar (alrededor de un
eje) u ortogonal (como un arreglo matricial en una dimensión, en dos o en&amp;nbsp;tres).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;No estoy seguro de que FreeCAD sea un buen sustituto para SketchUp, pero igual
aprender a usarlo es bastante&amp;nbsp;entretenido.&lt;/p&gt;
&lt;div class="section" id="un-ejemplo-sencillo"&gt;
&lt;h2&gt;Un ejemplo&amp;nbsp;sencillo&lt;/h2&gt;
&lt;p&gt;Les muestro una vista lateral superior del &lt;em&gt;cono de tránsito&lt;/em&gt; propuesto como
tarea del video 15 (&lt;a class="reference external" href="https://www.youtube.com/watch?v=eqh_KMsePPU"&gt;usando conos&lt;/a&gt;):&lt;/p&gt;
&lt;img alt="vista lateral superior" class="align-center" src="https://c2.staticflickr.com/6/5788/31240860785_a73f203cd1_o.png" style="width: 50.0%;" /&gt;
&lt;p&gt;La construcción se logra uniendo un cono con un rectángulo al que se le aplica
un redondeado en sus bordes. Esta unión representa la pieza completamente
rellena. Luego se duplica el cono y se ajustan sus dimensiones para que
atraviese toda la pieza por dentro, y al hacer el recorte quede el cono
ya no maciso sino con el agujero que lo atraviesa. El proceso es
muy&amp;nbsp;rápido.&lt;/p&gt;
&lt;img alt="vista lateral inferior" class="align-center" src="https://c2.staticflickr.com/6/5781/31240860835_d7c2729849_o.png" style="width: 50.0%;" /&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="freecad"></category></entry><entry><title>Uso de MBED desde la linea de comandos (CLI)</title><link href="https://eldiegoefe.github.io/uso-de-mbed-desde-la-linea-de-comandos-cli.html" rel="alternate"></link><published>2016-11-04T10:00:00+01:00</published><updated>2016-11-04T10:00:00+01:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2016-11-04:/uso-de-mbed-desde-la-linea-de-comandos-cli.html</id><summary type="html">&lt;p&gt;Empecé a probar el uso de la plataforma &lt;span class="caps"&gt;MBED&lt;/span&gt; con la placa &lt;span class="caps"&gt;FRDM&lt;/span&gt;-&lt;span class="caps"&gt;K64F&lt;/span&gt;. Hasta ahora
usaba &lt;a class="reference external" href="https://developer.mbed.org/"&gt;la versión online del compilador&lt;/a&gt; con una &lt;span class="caps"&gt;FRDM&lt;/span&gt;-&lt;span class="caps"&gt;KL25Z&lt;/span&gt;, que es una placa
anterior y de menores prestaciones, pero igualmente muy popular (de las primeras
en funcionar con &lt;span class="caps"&gt;MBED&lt;/span&gt;). El problema del compilador …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Empecé a probar el uso de la plataforma &lt;span class="caps"&gt;MBED&lt;/span&gt; con la placa &lt;span class="caps"&gt;FRDM&lt;/span&gt;-&lt;span class="caps"&gt;K64F&lt;/span&gt;. Hasta ahora
usaba &lt;a class="reference external" href="https://developer.mbed.org/"&gt;la versión online del compilador&lt;/a&gt; con una &lt;span class="caps"&gt;FRDM&lt;/span&gt;-&lt;span class="caps"&gt;KL25Z&lt;/span&gt;, que es una placa
anterior y de menores prestaciones, pero igualmente muy popular (de las primeras
en funcionar con &lt;span class="caps"&gt;MBED&lt;/span&gt;). El problema del compilador online no es que haya que
estar conectado a la web (lo vengo usando desde hace mucho y nunca tuve
problemas de acceso) sino sus limitadas prestaciones como editor de texto. Por
ejemplo, no encontré manera de comentar y des-comentar múltiples lineas de
código simultaneamente, algo que necesito hacer con frecuencia. Por esto mismo
prefiero el editor que uso para el resto de mis actividades: Emacs, y esto lo
puedo hacer con el nuevo compilador&amp;nbsp;offline.&lt;/p&gt;
&lt;p&gt;Las instrucciones para usar el compilador desde la linea de comandos (mbed-cli)
las extraje del video que está más abajo y de la documentación. Sin embargo lo
resumo en esta entrada para tener el paso-a-paso como referencia rápida. Por
esto mismo, hay mucha información que no está incluida en este post y que pueden
encontrar en la &lt;a class="reference external" href="https://docs.mbed.com/docs/mbed-os-handbook/en/5.1/dev_tools/cli/"&gt;documentación de mbed-cli&lt;/a&gt; (como por ejemplo las instrucciones
de&amp;nbsp;instalación).&lt;/p&gt;
&lt;div class="youtube"&gt;&lt;iframe src="https://www.youtube.com/embed/PI1Kq9RSN_Y" width="560" height="315" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;div class="section" id="inicializar-un-nuevo-programa"&gt;
&lt;h2&gt;Inicializar un nuevo&amp;nbsp;programa&lt;/h2&gt;
&lt;p&gt;Al inicializar un nuevo programa se crea un directorio con el nombre que le
asignamos. Este directorio aparece como hijo de nuestro directorio actual, así
que antes de ejecutar el comando hay que posicionarse en la ubicación&amp;nbsp;deseada.&lt;/p&gt;
&lt;div class="section" id="para-mbed-os-5"&gt;
&lt;h3&gt;Para &lt;span class="caps"&gt;MBED&lt;/span&gt; &lt;span class="caps"&gt;OS&lt;/span&gt;&amp;nbsp;5&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; mbed new nombre-programa
&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; nombre-programa
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="para-mbed-os-2"&gt;
&lt;h3&gt;Para &lt;span class="caps"&gt;MBED&lt;/span&gt; &lt;span class="caps"&gt;OS&lt;/span&gt;&amp;nbsp;2&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; mbed new nombre-programa --mbedlib
&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; nombre-programa
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="mostrar-las-librerias-instaladas"&gt;
&lt;h2&gt;Mostrar las librerías&amp;nbsp;instaladas&lt;/h2&gt;
&lt;p&gt;Al inicializarse un programa, como mínimo se importan las librerías de &lt;span class="caps"&gt;MBED&lt;/span&gt;, ya
sean las del &lt;span class="caps"&gt;OS&lt;/span&gt; 5 o del &lt;span class="caps"&gt;OS&lt;/span&gt; 2 (son diferentes entre sí). Para&amp;nbsp;verlas:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; mbed ls -a
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="seleccion-de-placa-y-toolchain"&gt;
&lt;h2&gt;Selección de placa y&amp;nbsp;toolchain&lt;/h2&gt;
&lt;p&gt;Hay que conectar la placa &lt;span class="caps"&gt;MBED&lt;/span&gt; mediante su conector &lt;span class="caps"&gt;USB&lt;/span&gt; &lt;strong&gt;OpenSDA&lt;/strong&gt; (el que se
usa para programarla) y ejecutar el siguiente comando, que nos dará información
que necesitaremos para seleccionar placa y&amp;nbsp;toolchain:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; mbed detect

&lt;span class="go"&gt;[mbed] Detected K64F, port /dev/ttyACM0, mounted /media/diego/MBED&lt;/span&gt;
&lt;span class="go"&gt;[mbed] Supported toolchains for K64F&lt;/span&gt;
&lt;span class="go"&gt;+--------+-----------+-----------+-----------+-----------+-----------+&lt;/span&gt;
&lt;span class="go"&gt;| Target | mbed OS 2 | mbed OS 5 |    ARM    |  GCC_ARM  |    IAR    |&lt;/span&gt;
&lt;span class="go"&gt;+--------+-----------+-----------+-----------+-----------+-----------+&lt;/span&gt;
&lt;span class="go"&gt;| K64F   | Supported | Supported | Supported | Supported | Supported |&lt;/span&gt;
&lt;span class="go"&gt;+--------+-----------+-----------+-----------+-----------+-----------+&lt;/span&gt;
&lt;span class="go"&gt;Supported targets: 1&lt;/span&gt;
&lt;span class="go"&gt;Supported toolchains: 3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;El sistema indica que encontró la &lt;span class="caps"&gt;K64F&lt;/span&gt; y cuáles son los &lt;em&gt;toolchains&lt;/em&gt; que
disponemos para trabajar con ella. &lt;strong&gt;Si conecto la placa &lt;span class="caps"&gt;KL25Z&lt;/span&gt; el sistema no la
detecta, parece que el sistema sólo es compatible con las placas más nuevas&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Para seleccionar la placa de destino donde correrá nuestro&amp;nbsp;programa:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; mbed target K64F
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para elegir el toolchain GCC_ARM&amp;nbsp;usamos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; mbed toolchain GCC_ARM
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Si pedimos el estado actual de la configuración veremos lo siguiente (si la
ejecución del comando &lt;em&gt;mbed new&lt;/em&gt; se realizó desde&amp;nbsp;/home/diego/mis-proyectos):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; mbed config --list

&lt;span class="go"&gt;[mbed] Global config:&lt;/span&gt;
&lt;span class="go"&gt;No global configuration is set&lt;/span&gt;

&lt;span class="go"&gt;[mbed] Local config (/home/diego/mis-proyectos/nombre-programa):&lt;/span&gt;
&lt;span class="go"&gt;TOOLCHAIN=GCC_ARM&lt;/span&gt;
&lt;span class="go"&gt;TARGET=K64F&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="creacion-de-programa"&gt;
&lt;h2&gt;Creación de&amp;nbsp;programa&lt;/h2&gt;
&lt;p&gt;En el directorio raíz del proyecto es necesario crear un archivo llamado
&lt;em&gt;main.cpp&lt;/em&gt; que contendrá el programa escrito en C++. Por ejemplo, este programa
enciende y apaga un &lt;span class="caps"&gt;LED&lt;/span&gt; de la placa (usando &lt;span class="caps"&gt;OS&lt;/span&gt;&amp;nbsp;2):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;mbed.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="n"&gt;DigitalOut&lt;/span&gt; &lt;span class="nf"&gt;rojo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LED1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;togglearLed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DigitalOut&lt;/span&gt; &lt;span class="n"&gt;led&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;led&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;led&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// togglearLed&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;togglearLed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rojo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;togglearLed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rojo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="compilacion-y-ejecucion-del-programa"&gt;
&lt;h2&gt;Compilación y ejecución del&amp;nbsp;programa&lt;/h2&gt;
&lt;p&gt;La compilación se realiza con el siguiente&amp;nbsp;comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; mbed compile
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Luego hay que copiar el archivo generado por el compilador en la placa &lt;span class="caps"&gt;MBED&lt;/span&gt;&lt;/strong&gt;.
Este archivo (cuyo nombre corresponde al utilizado durante la inicialización del
proyecto: &amp;#8220;nombre-programa&amp;#8221; y cuya extensión es .bin) se encuentra dentro del
directorio &lt;span class="caps"&gt;BUILD&lt;/span&gt;/&lt;span class="caps"&gt;K64F&lt;/span&gt;/GCC_ARM. Obviamente este path corresponde a la placa y al
toolchain elegidos en un paso anterior. La placa &lt;span class="caps"&gt;MBED&lt;/span&gt; aparece como un disco en
el navegador de archivos. En Linux Mint 18 este disco está montado en
/media/diego/&lt;span class="caps"&gt;MBED&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Luego hay que esperar que se produzca la transferencia del archivo .bin hacia la
placa &lt;span class="caps"&gt;MBED&lt;/span&gt; (parpadea un &lt;span class="caps"&gt;LED&lt;/span&gt; verde que está junto al conector &lt;span class="caps"&gt;USB&lt;/span&gt; de la placa) y
tras algunos segundos (siempre se abre un nuevo navegador de archivos, como
cuando conectamos un pendrive, en la ubicación del &lt;span class="caps"&gt;MBED&lt;/span&gt;) podemos resetear la
placa para que se inicie la ejecución de nuestro programa. Si cargamos el
programa que está copiado en el paso anterior veremos parpadear el led rojo a
una frecuencia de 0.5&amp;nbsp;Hz.&lt;/p&gt;
&lt;p&gt;Si modificamos el programa en main.cpp hay que volver a compilarlo, copiar el
nombre-programa.bin hacia la placa &lt;span class="caps"&gt;MBED&lt;/span&gt;, esperar que se complete la
transferencia y resetearla. Este es el bucle que repetiremos hasta lograr que
nuestro programa funcione de la manera&amp;nbsp;deseada.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resumen"&gt;
&lt;h2&gt;Resumen&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; mbed new nombre-programa &lt;span class="o"&gt;(&lt;/span&gt;--mbedlib&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; nombre-programa
&lt;span class="gp"&gt;$&lt;/span&gt; mbed ls -a
&lt;span class="gp"&gt;$&lt;/span&gt; mbed detect
&lt;span class="gp"&gt;$&lt;/span&gt; mbed target K64F
&lt;span class="gp"&gt;$&lt;/span&gt; mbed toolchain GCC_ARM
&lt;span class="gp"&gt;$&lt;/span&gt; mbed config --list
&lt;span class="gp"&gt;$&lt;/span&gt; mbed compile
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finalmente copiar el archivo .bin al &lt;span class="caps"&gt;MBED&lt;/span&gt;, esperar que finalice la transferencia
y resetear la&amp;nbsp;placa.&lt;/p&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="mbed"></category><category term="c++"></category><category term="emacs"></category><category term="electronica"></category><category term="tutorial"></category></entry><entry><title>Panel frontal del software</title><link href="https://eldiegoefe.github.io/panel-frontal-del-software.html" rel="alternate"></link><published>2016-09-01T10:00:00+02:00</published><updated>2016-09-01T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2016-09-01:/panel-frontal-del-software.html</id><summary type="html">&lt;p&gt;Una vez más me encuentro ante el desafío de armar un panel para un programa de
análisis de datos, hecho en Python. Lo ideal sería trabajar con lineas de
comandos y no tener que estar lidiando con menúes, botones y areas de
graficación, pero sería impractico para los usuarios a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Una vez más me encuentro ante el desafío de armar un panel para un programa de
análisis de datos, hecho en Python. Lo ideal sería trabajar con lineas de
comandos y no tener que estar lidiando con menúes, botones y areas de
graficación, pero sería impractico para los usuarios a quienes está destinado el
programa. Así que nuevamente tengo que rastrear cómo se arma una pantalla con
todas estas&amp;nbsp;cosas.&lt;/p&gt;
&lt;p&gt;Como ya usé con anterioridad Qt, PyQt y PyQtGraph voy a continuar eligiéndolos,
aunque se que existen opciones. Con Qt Designer armo el panel frontal con los
elementos básicos: un espacio para ingresar texto (más adelante será un selector
de archivos) y dos gráficas que contendrán histogramas. Esto último es lo más
arduo, porque siempre me olvido del procedimiento (y por eso armo este artículo,
que tiene mucho extraido de &lt;a class="reference external" href="http://www.pyqtgraph.org/documentation/how_to_use.html"&gt;How to use PyQtGraph&lt;/a&gt;).&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Crear un widget QGraphicsView (“Graphics View” en la categoría “Display&amp;nbsp;Widgets”).&lt;/li&gt;
&lt;li&gt;Click derecho sobre el QGraphicsView. Seleccionar “Promote&amp;nbsp;To&amp;#8230;”.&lt;/li&gt;
&lt;li&gt;En “Promoted class name” teclear el nombre de la clase a utilizar (por lo
general es “PlotWidget”, pero también podría ser “GraphicsLayoutWidget”,&amp;nbsp;etc).&lt;/li&gt;
&lt;li&gt;En “Header file” escribir “pyqtgraph” (sin ninguna&amp;nbsp;extensión).&lt;/li&gt;
&lt;li&gt;Click en “Add” y luego click en&amp;nbsp;“Promote”.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Al grabar desde Qt Designer tendremos un archivo con extensión &amp;#8220;.ui&amp;#8221;. Para
convertirlo y poder usarlo en Python es preciso utilizar el conversor llamado&amp;nbsp;pyuic4:&lt;/p&gt;
&lt;p&gt;pyuic4 -x panel.ui -o&amp;nbsp;panel.py&lt;/p&gt;
&lt;p&gt;Si no lo tenían instalado y están en un descendiente de Debian o&amp;nbsp;Ubuntu:&lt;/p&gt;
&lt;p&gt;sudo apt-get install&amp;nbsp;pyqt4-dev-tools&lt;/p&gt;
&lt;p&gt;A continuación se puede ver un ejemplo de un programa en Python que utiliza el
panel que fuimos creado. La clase creada al armar el panel se llama, por
defecto, Ui_MainWindow. En el ejemplo la llamé Ui_VentanaPrincipal. El panel
del ejemplo tiene un boton, una etiqueta y un&amp;nbsp;PlotWidget.&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PyQt4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;panel&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Ui_VentanaPrincipal&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Window&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QMainWindow&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QMainWindow&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ui&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Ui_VentanaPrincipal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setupUi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pushButton_actualizar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;borrarEtiqueta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;borrarEtiqueta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lbl_etiqueta&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;escribirEtiqueta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;texto&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lbl_etiqueta&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;texto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setearLimitesPlot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;miCuadricula&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setRange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xRange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;yRange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;graficar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;miCuadricula&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

    &lt;span class="c1"&gt;## initializing Qt (only once per application)&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtGui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;## inicializa un objeto (window) que contendra todos los widgets, y lo muestra&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Window&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setearLimitesPlot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;datos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graficar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lbl_etiqueta&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hola&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;## se puede referenciar al plot desde aqui, de este modo:&lt;/span&gt;
    &lt;span class="c1"&gt;## p = window.ui.miCuadricula&lt;/span&gt;
    &lt;span class="c1"&gt;## p.setRange(xRange=[-500, 500], yRange=[-500, 500])&lt;/span&gt;

    &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;escribirEtiqueta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Etiqueta modificada&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;## Start the Qt event loop: app.exec()&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec_&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;
</content><category term="tecnicismos"></category><category term="python"></category><category term="pyqtgraph"></category><category term="pyqt"></category><category term="qt"></category><category term="software"></category></entry><entry><title>Más sobre agenda en org-mode</title><link href="https://eldiegoefe.github.io/mas-sobre-agenda-en-org-mode.html" rel="alternate"></link><published>2016-01-07T10:00:00+01:00</published><updated>2016-01-07T10:00:00+01:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2016-01-07:/mas-sobre-agenda-en-org-mode.html</id><summary type="html">&lt;p&gt;Para el uso de la agenda en org-mode, voy a listar las cosas que uso
con frecuencia. Además, &lt;a class="reference external" href="http://orgmode.org/orgcard.txt"&gt;en este link&lt;/a&gt; hay un resumen de comandos de org-mode
muy&amp;nbsp;completo.&lt;/p&gt;
&lt;div class="section" id="insercion"&gt;
&lt;h2&gt;Inserción&lt;/h2&gt;
&lt;p&gt;Atajos de teclado &amp;#8220;convencionales&amp;#8221; de org-mode (funcionan con&amp;nbsp;Spacemacs).&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;capturar una nota en el inbox: C-c&amp;nbsp;c&lt;/li&gt;
&lt;li&gt;links: C-c …&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Para el uso de la agenda en org-mode, voy a listar las cosas que uso
con frecuencia. Además, &lt;a class="reference external" href="http://orgmode.org/orgcard.txt"&gt;en este link&lt;/a&gt; hay un resumen de comandos de org-mode
muy&amp;nbsp;completo.&lt;/p&gt;
&lt;div class="section" id="insercion"&gt;
&lt;h2&gt;Inserción&lt;/h2&gt;
&lt;p&gt;Atajos de teclado &amp;#8220;convencionales&amp;#8221; de org-mode (funcionan con&amp;nbsp;Spacemacs).&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;capturar una nota en el inbox: C-c&amp;nbsp;c&lt;/li&gt;
&lt;li&gt;links: C-c&amp;nbsp;C-l&lt;/li&gt;
&lt;li&gt;etiqueta de To-Do (empezado, hibernando, completado, etc): C-c&amp;nbsp;C-t&lt;/li&gt;
&lt;li&gt;schedule: C-c&amp;nbsp;C-s&lt;/li&gt;
&lt;li&gt;deadline: C-c&amp;nbsp;C-d&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para&amp;nbsp;agregar:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Refile: cómo llevar las notas del inbox a su destino&amp;nbsp;final.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="generacion-de-enlaces"&gt;
&lt;h2&gt;Generación de&amp;nbsp;enlaces&lt;/h2&gt;
&lt;p&gt;Atajos de teclado sólo de&amp;nbsp;Spacemacs.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;buscar dentro de los archivos org (org-occur): &lt;span class="caps"&gt;SPC&lt;/span&gt; a o&amp;nbsp;/&lt;/li&gt;
&lt;li&gt;org-store-link: &lt;span class="caps"&gt;SPC&lt;/span&gt; a o&amp;nbsp;l&lt;/li&gt;
&lt;li&gt;org-insert-link: , i&amp;nbsp;l&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="emacs"></category><category term="org-mode"></category><category term="agenda"></category></entry><entry><title>Diccionario de funciones</title><link href="https://eldiegoefe.github.io/diccionario-de-funciones.html" rel="alternate"></link><published>2015-12-11T10:00:00+01:00</published><updated>2015-12-11T10:00:00+01:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2015-12-11:/diccionario-de-funciones.html</id><summary type="html">&lt;p&gt;Mientras escribo un programa para manipular imágenes de un microscopio, tuve que
ver cómo ejecutar una función distinta, de acuerdo a cierto parámetro. Más
concretamente, para procesar las imágenes en algunos casos se necesita un
kernel, que es una matriz llena de unos y ceros organizados de acuerdo a la …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Mientras escribo un programa para manipular imágenes de un microscopio, tuve que
ver cómo ejecutar una función distinta, de acuerdo a cierto parámetro. Más
concretamente, para procesar las imágenes en algunos casos se necesita un
kernel, que es una matriz llena de unos y ceros organizados de acuerdo a la
selección de dos parámetros: forma y tamaño. Por ejemplo, un &amp;#8220;disco&amp;#8221; de radio 3
se vería&amp;nbsp;así:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[[0 0 0 1 0 0 0]
 [0 1 1 1 1 1 0]
 [0 1 1 1 1 1 0]
 [1 1 1 1 1 1 1]
 [0 1 1 1 1 1 0]
 [0 1 1 1 1 1 0]
 [0 0 0 1 0 0 0]]
&lt;/pre&gt;
&lt;p&gt;Y una matriz &amp;#8220;cuadrada&amp;#8221; de lado 3,&amp;nbsp;así:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[[1 1 1]
 [1 1 1]
 [1 1 1]]
&lt;/pre&gt;
&lt;p&gt;Una forma de escribirlo sería usando un &amp;#8220;if&amp;#8221; para cada posibilidad, pero si las
variantes son muchas entonces queda poco elegante. Por suerte encontré una
alternativa, que se parece al &amp;#8220;case&amp;#8221; de otros lenguajes, pero con mucho más
&lt;em&gt;punch&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;tiposPosibles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cuadrado&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;square&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;disco&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;disk&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;armarKernel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tipo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cuadrado&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tam&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;kernel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tiposPosibles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tipo&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;tam&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;En el ejemplo, tiposPosibles es un diccionario. Cuando tipo = &amp;#8220;cuadrado&amp;#8221;, y tam
= 4, la linea equivale a: kernel = square(4).&amp;nbsp;¡Maravilloso!&lt;/p&gt;
</content><category term="tecnicismos"></category><category term="python"></category><category term="diccionarios"></category><category term="funciones"></category></entry><entry><title>Python en Emacs y otros atajos</title><link href="https://eldiegoefe.github.io/python-en-emacs-y-otros-atajos.html" rel="alternate"></link><published>2015-09-24T10:00:00+02:00</published><updated>2015-09-24T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2015-09-24:/python-en-emacs-y-otros-atajos.html</id><summary type="html">&lt;div class="section" id="spacemacs"&gt;
&lt;h2&gt;Spacemacs&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Anaconda-mode: Emacs tiene muchas herramientas para facilitar la programación
en Python. En Spacemacs se puede activar &lt;a class="reference external" href="https://github.com/proofit404/anaconda-mode"&gt;anaconda-mode&lt;/a&gt;, que activa una
serie de paquetes útiles. Por ejemplo &amp;#8220;eldoc&amp;#8221; que ofrece información en el
modeline sobre la función que se está tipeando (muestra los nombres de sus
argumentos). Cosas de Anaconda …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="spacemacs"&gt;
&lt;h2&gt;Spacemacs&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Anaconda-mode: Emacs tiene muchas herramientas para facilitar la programación
en Python. En Spacemacs se puede activar &lt;a class="reference external" href="https://github.com/proofit404/anaconda-mode"&gt;anaconda-mode&lt;/a&gt;, que activa una
serie de paquetes útiles. Por ejemplo &amp;#8220;eldoc&amp;#8221; que ofrece información en el
modeline sobre la función que se está tipeando (muestra los nombres de sus
argumentos). Cosas de Anaconda para&amp;nbsp;usar:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;anaconda-mode-complete&amp;nbsp;(C-M-i)&lt;/li&gt;
&lt;li&gt;anaconda-mode-find-definitions (&lt;span class="caps"&gt;SPC&lt;/span&gt; m g g): busca el origen del símbolo
bajo el punto. Por ejemplo: si se trata de una función, abre el archivo
donde está definida y ubica el punto sobre el encabezado de la&amp;nbsp;misma.&lt;/li&gt;
&lt;li&gt;anaconda-mode-find-assignments&lt;/li&gt;
&lt;li&gt;anaconda-mode-find-references&lt;/li&gt;
&lt;li&gt;anaconda-mode-go-back&lt;/li&gt;
&lt;li&gt;anaconda-mode-show-doc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Entornos virtuales: se puede activar un entorno virtual donde correr el
programa que se está desarrollando con &lt;span class="caps"&gt;SPC&lt;/span&gt; m V (pyvenv-workon, pero en este
caso no aparecen correctamente todas las opciones, al menos no veo los
entornos que instalé con pyenv), o también con &lt;span class="caps"&gt;SPC&lt;/span&gt; m v s (pyenv-mode-set, en
este caso sí se ven los entornos de&amp;nbsp;pyenv).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Shell con entorno virtual: para acceder a un shell con el mismo entorno
virtual que se activó (en el punto anterior) hay que hacer &lt;span class="caps"&gt;SPC&lt;/span&gt; a s m&amp;nbsp;(shell-pop-multiterm).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Comentarios: para comentar el bloque de lineas seleccionadas se utiliza &lt;span class="caps"&gt;SPC&lt;/span&gt; c
l (evilnc-comment-or-uncomment-lines). También se puede probar con &lt;span class="caps"&gt;SPC&lt;/span&gt; ;&amp;nbsp;(evilnc-comment-operator).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Para ejecutar programas que contienen el llamado a la función principal con
un bloque del siguiente&amp;nbsp;modo:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;hay que pulsar C-u C-c C-c (y en Spacemacs: &lt;span class="caps"&gt;SPC&lt;/span&gt; u C-c C-c). Previamente hay
que haber elegido el entorno virtual correcto (ver el punto 2). De este modo
funcionan los programas incluso si tienen panel construido con PyQt. Más info
en la pregunta que hice yo mismo: &lt;a class="reference external" href="http://emacs.stackexchange.com/questions/13357/how-to-execute-a-python-program-with-a-gui-from-emacs"&gt;How to execute a python program (with a
&lt;span class="caps"&gt;GUI&lt;/span&gt;) from Emacs?&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="yasnippets"&gt;
&lt;h2&gt;Yasnippets&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;span class="caps"&gt;SPC&lt;/span&gt; i s (spacemacs/helm-yas). Si no están aún cargados, carga los snippets y
ofrece un menú tipo helm para seleccionarlos. Luego quedan habilitados para
usar el trigger (la abreviatura) seguido de &lt;span class="caps"&gt;TAB&lt;/span&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt="yasnippets con helm" class="align-center" src="https://c1.staticflickr.com/1/657/21855757933_5ff671a447_b.jpg" style="width: 100.0%;" /&gt;
&lt;/div&gt;
&lt;div class="section" id="tabulacion"&gt;
&lt;h2&gt;Tabulación&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;C-x &lt;span class="caps"&gt;TAB&lt;/span&gt; (indent-rigidly). Selecciono las lineas, uso C-x &lt;span class="caps"&gt;TAB&lt;/span&gt; y luego las
flechas hacia los lados para aumentar o disminuir la indentación manteniendo
la disposición&amp;nbsp;actual.&lt;/li&gt;
&lt;li&gt;También se puede tabular para respetar las necesidades del lenguaje,
seleccionando una región y pulsando C-M-\ (indent-region). Aún cuando no haya
ninguna indentación previa en esta región, cada linea se acomoda al lugar que
debe ir. Igual hay que chequear porque el comando no puede adivinar, y hay
veces que un mismo bloque puede ir con distintas indentaciones&amp;nbsp;correctas.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;Spacemacs&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Para insertar texto desde el modo &amp;#8220;normal&amp;#8221; (o &amp;#8220;comando&amp;#8221;) se usa la letra p o
P (la inserción es antes o después de la ubicación actual del cursor). Para
pegar desde el modo &amp;#8220;insert&amp;#8221;:&amp;nbsp;C-y.&lt;/li&gt;
&lt;li&gt;Se comentan (y des-comentan) lineas seleccionándolas y presionando &lt;span class="caps"&gt;SPC&lt;/span&gt; c l&amp;nbsp;(comment-or-uncomment-line).&lt;/li&gt;
&lt;li&gt;Se borra la ventana actual con &lt;span class="caps"&gt;SPC&lt;/span&gt; w d. Obviamente sólo es posible cuando hay
más de una ventana abierta (recordar que las ventanas en Emacs son las
subdivisiones de la pantalla ocupadas por un&amp;nbsp;buffer).&lt;/li&gt;
&lt;li&gt;Para navegar directorios se usan las combinaciones C-j y C-l para moverse
desde un directorio hacia otro que esté un nivel por encima o un nivel por&amp;nbsp;debajo.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="python"></category><category term="emacs"></category><category term="keybindings"></category><category term="spacemacs"></category></entry><entry><title>Búsquedas con isearch en Emacs</title><link href="https://eldiegoefe.github.io/busquedas-con-isearch-en-emacs.html" rel="alternate"></link><published>2015-05-27T10:00:00+02:00</published><updated>2015-05-27T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2015-05-27:/busquedas-con-isearch-en-emacs.html</id><summary type="html">&lt;p&gt;Es una tarea habitual al editar texto el buscar caracteres o palabras.
Una de las opciones que ofrece Emacs es la función de búsqueda
incremental, que tiene varias formas de&amp;nbsp;inicio.&lt;/p&gt;
&lt;table border="1" class="colwidths-given docutils"&gt;
&lt;colgroup&gt;
&lt;col width="33%" /&gt;
&lt;col width="11%" /&gt;
&lt;col width="11%" /&gt;
&lt;col width="44%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Comando&lt;/th&gt;
&lt;th class="head"&gt;Por defecto&lt;/th&gt;
&lt;th class="head"&gt;Ergoemacs&lt;/th&gt;
&lt;th class="head"&gt;Descripción&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;isearch-forward&lt;/td&gt;
&lt;td&gt;C-s&lt;/td&gt;
&lt;td&gt;C-f&lt;/td&gt;
&lt;td&gt;solicita los caracteres a buscar&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;isearch-forward-symbol-at-point&lt;/td&gt;
&lt;td&gt;M-s .&lt;/td&gt;
&lt;td&gt;F8 .&lt;/td&gt;
&lt;td&gt;busca el símbolo …&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</summary><content type="html">&lt;p&gt;Es una tarea habitual al editar texto el buscar caracteres o palabras.
Una de las opciones que ofrece Emacs es la función de búsqueda
incremental, que tiene varias formas de&amp;nbsp;inicio.&lt;/p&gt;
&lt;table border="1" class="colwidths-given docutils"&gt;
&lt;colgroup&gt;
&lt;col width="33%" /&gt;
&lt;col width="11%" /&gt;
&lt;col width="11%" /&gt;
&lt;col width="44%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Comando&lt;/th&gt;
&lt;th class="head"&gt;Por defecto&lt;/th&gt;
&lt;th class="head"&gt;Ergoemacs&lt;/th&gt;
&lt;th class="head"&gt;Descripción&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;isearch-forward&lt;/td&gt;
&lt;td&gt;C-s&lt;/td&gt;
&lt;td&gt;C-f&lt;/td&gt;
&lt;td&gt;solicita los caracteres a buscar&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;isearch-forward-symbol-at-point&lt;/td&gt;
&lt;td&gt;M-s .&lt;/td&gt;
&lt;td&gt;F8 .&lt;/td&gt;
&lt;td&gt;busca el símbolo bajo el cursor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;isearch-forward-word&lt;/td&gt;
&lt;td&gt;M-s w&lt;/td&gt;
&lt;td&gt;F8 w&lt;/td&gt;
&lt;td&gt;busca palabras&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;isearch-forward-symbol&lt;/td&gt;
&lt;td&gt;M-s _&lt;/td&gt;
&lt;td&gt;F8 _&lt;/td&gt;
&lt;td&gt;busca símbolos (símbolos según Emacs)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Al ejecutar uno de estos comandos se entra dentro de un modo en el
cual se puede repetir la misma búsqueda o modificarla (en el
minibuffer aparece información relativa a este modo, por ejemplo tras
ejecutar &lt;em&gt;isearch-forward&lt;/em&gt; aparece &lt;em&gt;I-search:&lt;/em&gt; para que el usuario
ingrese las letras que desea&amp;nbsp;buscar).&lt;/p&gt;
&lt;p&gt;Se dispone de un gran número de opciones y atajos de teclado, válidos
mientras se mantiene este modo de búsqueda. Entre los más&amp;nbsp;habituales:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;span class="caps"&gt;RET&lt;/span&gt; (Enter): sale del modo de búsqueda, el cursor queda en la última
locación&amp;nbsp;encontrada&lt;/li&gt;
&lt;li&gt;C-g: interrumpe el modo, el cursor vuelve a la posición&amp;nbsp;inicial&lt;/li&gt;
&lt;li&gt;C-f: repite la misma búsqueda hacia&amp;nbsp;adelante&lt;/li&gt;
&lt;li&gt;C-r: repite la misma búsqueda hacia&amp;nbsp;atrás&lt;/li&gt;
&lt;li&gt;M-s c: conmuta la sensibilidad a&amp;nbsp;mayúsculas&lt;/li&gt;
&lt;li&gt;M-s w: conmuta al modo de búsqueda de palabra&amp;nbsp;completa&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hay muchas más opciones que se pueden consultar ejecutando &lt;em&gt;M-x
describe-function isearch-forward&lt;/em&gt; o directamente &lt;em&gt;C-h f
isearch-forward&lt;/em&gt;.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://farm8.staticflickr.com/7748/18166889492_494f6bafc2_o.png"&gt;&lt;img alt="pantalla con i-search activado" src="https://farm8.staticflickr.com/7748/18166889492_5daac19817_b.jpg" style="width: 100.0%;" /&gt;&lt;/a&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="emacs"></category><category term="isearch"></category><category term="busquedas"></category></entry><entry><title>Actualización de las instrucciones para armar un blog con Pelican y GitHub</title><link href="https://eldiegoefe.github.io/actualizacion-de-las-instrucciones-para-armar-un-blog-con-pelican-y-github.html" rel="alternate"></link><published>2015-05-20T10:00:00+02:00</published><updated>2015-05-20T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2015-05-20:/actualizacion-de-las-instrucciones-para-armar-un-blog-con-pelican-y-github.html</id><summary type="html">&lt;p&gt;El sitio oficial de Pelican, con sus intrucciones de instalación y uso
&lt;a class="reference external" href="http://pelican.readthedocs.org/"&gt;es este&lt;/a&gt;. Originalmente, este post estuvo basado en las
instrucciones de &lt;a class="reference external" href="http://ntanjerome.org/blog/how-to-setup-github-user-page-with-pelican/"&gt;Nicholas Tan Jerome&lt;/a&gt;. El post original &lt;a class="reference external" href="https://eldiegoefe.github.io/blog-con-pelican-y-github.html"&gt;pueden
verlo en este&amp;nbsp;enlace&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Por un lado vamos a configurar un entorno virtual de Python donde
vamos a instalar Pelican …&lt;/p&gt;</summary><content type="html">&lt;p&gt;El sitio oficial de Pelican, con sus intrucciones de instalación y uso
&lt;a class="reference external" href="http://pelican.readthedocs.org/"&gt;es este&lt;/a&gt;. Originalmente, este post estuvo basado en las
instrucciones de &lt;a class="reference external" href="http://ntanjerome.org/blog/how-to-setup-github-user-page-with-pelican/"&gt;Nicholas Tan Jerome&lt;/a&gt;. El post original &lt;a class="reference external" href="https://eldiegoefe.github.io/blog-con-pelican-y-github.html"&gt;pueden
verlo en este&amp;nbsp;enlace&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Por un lado vamos a configurar un entorno virtual de Python donde
vamos a instalar Pelican, y por otro lado vamos a utilizar un
directorio subdividido en un subdirectorio para nuestro blog y dos
subdirectorios más para herramientas de Pelican (themes y plugins de
Pelican). Supongo que &lt;span class="caps"&gt;GIT&lt;/span&gt; ya está instalado en el&amp;nbsp;sistema.&lt;/p&gt;
&lt;div class="section" id="instalacion-de-pelican-en-un-entorno-virtual"&gt;
&lt;h2&gt;Instalación de Pelican en un entorno&amp;nbsp;virtual&lt;/h2&gt;
&lt;p&gt;Vamos a utilizar virtualenvwrapper para este propósito (tengo
pendiente escribir el tutorial correspondiente). Creamos un entorno
llamado &lt;em&gt;blogs&lt;/em&gt; y dentro de él instalamos Pelican y también otras
herramientas que utilizaremos&amp;nbsp;posteriormente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; mkvirtualenv blogs
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pip install pelican
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pip install beautifulsoup4
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pip install pelican-youtube
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pip install ghp-import
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pip install typogrify
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="estructura-de-directorios"&gt;
&lt;h2&gt;Estructura de&amp;nbsp;directorios&lt;/h2&gt;
&lt;p&gt;Vamos a utilizar un directorio que va a contener tanto nuestro blog
como otros subdirectorios con algunas herramientas de Pelican. La
organización será la&amp;nbsp;siguiente:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;misBlogs/&lt;ol class="arabic"&gt;
&lt;li&gt;eldiegoefe.github.io/&lt;/li&gt;
&lt;li&gt;pelican-themes/&lt;/li&gt;
&lt;li&gt;pelican-plugins/&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para ello debemos ejecutar las siguientes instrucciones (supongo que
el entorno virtual sigue activado, lo cual se refleja en el&amp;nbsp;prompt):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; mkdir ~/misBlogs
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; ~/misBlogs
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git clone --recursive https://github.com/getpelican/pelican-themes
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git clone --recursive https://github.com/getpelican/pelican-plugins
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Aún falta crear el directorio para los archivos del blog. Para ello
creamos un repositorio vacío en GitHub. Este sitio ofrece la dirección
nombreUsuario.github.io justamente para alojar blogs personales. Asumo
que ya sabés crear el repositorio (en mi caso el nombre del
repositorio debe ser: eldiegoefe.github.io) y que &lt;span class="caps"&gt;GIT&lt;/span&gt; no te resulta
completamente ajeno, de lo contrario este tutorial parecerá sánscrito
avanzado. El repositorio recientemente creado debe clonarse en el
directorio que fijamos anteriormente, si seguimos de la secuencia de
comandos anteriores sólo debemos&amp;nbsp;tipear:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git clone https://github.com/nombreUsuario/nombreUsuario.github.io
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;En el archivo .gitignore (dentro del directorio
~/misBlogs/nombreUsuario.github.io) se deben colocar todos los
archivos que no se desea incluir en el control de versiones. Por
ejemplo, mi .gitignore se ve así (ya que descarta distintos tipos de
archivos de&amp;nbsp;backup):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
*~
*#
*.pid
.#*
&lt;/pre&gt;
&lt;p&gt;Por otra parte, al inicializar el repositorio ya quedó creada la rama
&lt;strong&gt;master&lt;/strong&gt; pero vamos a crear también otras dos ramas llamadas
&lt;strong&gt;source&lt;/strong&gt; y &lt;strong&gt;gh-pages&lt;/strong&gt;. La rama &lt;strong&gt;source&lt;/strong&gt; contendrá los archivos
de configuración de Pelican para nuestro sitio, los archivos de texto
con el contenido de cada post que vayamos escribiendo, etc. La rama
&lt;em&gt;gh-pages&lt;/em&gt; es necesaria para el procedimiento de generación del sitio
estático. Creamos entonces ambas ramas y cambiamos hacia &lt;strong&gt;source&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; nombreUsuario.github.io
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git branch gh-pages
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git branch &lt;span class="nb"&gt;source&lt;/span&gt;
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git checkout &lt;span class="nb"&gt;source&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ejecucion-inicial-de-pelican"&gt;
&lt;h2&gt;Ejecución inicial de&amp;nbsp;Pelican&lt;/h2&gt;
&lt;p&gt;Dentro de la recientemente creada rama &lt;em&gt;source&lt;/em&gt;, dentro del directorio
del sitio (nombreUsuario.github.io) se debe ejecutar por única vez la
orden &lt;strong&gt;pelican-quickstart&lt;/strong&gt; para que se generen los archivos de
configurción de Pelican (va el guión entre las dos&amp;nbsp;palabras):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Tras ese comando, y tras contestar todas las preguntas que aparecen,
no solamente se guarda la configuración deseada (en los archivos
&lt;em&gt;pelicanconfig.py&lt;/em&gt; y &lt;em&gt;publishconf.py&lt;/em&gt;), sino que se generan todos los
archivos que Pelican necesita (incluso dos directorios nuevos: content
y output). Una de las preguntas, sobre el site url debe contestarse
con: &lt;a class="reference external" href="http://nombreUsuario.github.io"&gt;http://nombreUsuario.github.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;El contenido de pelicanconf.py tras responder a las preguntas de
pelican-quickstart y además editar manualmente el archivo para
completar los datos, queda&amp;nbsp;así:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;El Diego Efe&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Certezas Dudosas&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://nombreUsuario.github.io&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;America/Argentina/Buenos_Aires&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;es&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# Feed generation is usually not desired when developing&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;TRANSLATION_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;

&lt;span class="c1"&gt;# Blogroll&lt;/span&gt;
&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Pelican&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://getpelican.com/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Python.org&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://python.org/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Jinja2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://jinja.pocoo.org/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;You can modify those links in your config file&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c1"&gt;# Social widget&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Twitter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://twitter.com/nombreUsuario&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Github&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/nombreUsuario&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Facebook&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://www.facebook.com/nombreUsuario&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Google+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://plus.google.com/+DiegoEfe&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="c1"&gt;# Uncomment following line if you want document-relative URLs when developing&lt;/span&gt;
&lt;span class="c1"&gt;#RELATIVE_URLS = True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Y el contenido de publishconf.py queda&amp;nbsp;así:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="c1"&gt;# This file is only used if you use `make publish` or&lt;/span&gt;
&lt;span class="c1"&gt;# explicitly specify it as your config file.&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;curdir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pelicanconf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://nombreUsuario.github.io&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;RELATIVE_URLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;

&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;feeds/all.atom.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;feeds/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;.atom.xml&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DELETE_OUTPUT_DIRECTORY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;

&lt;span class="c1"&gt;# Following items are often useful when publishing&lt;/span&gt;

&lt;span class="c1"&gt;#DISQUS_SITENAME = &amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;#GOOGLE_ANALYTICS = &amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="escribir-el-primer-post"&gt;
&lt;h2&gt;Escribir el primer&amp;nbsp;post&lt;/h2&gt;
&lt;p&gt;Las entradas de nuestro nuevo blog se escriben como un archivo de
texto plano con el formato de Markdown o restructuredText, y se deben
guardar con la extensión correspondiente (.md o .rst) dentro del
directorio content. De este modo, cuando emita el comando para generar
el sitio habrá un contenido (sino el blog queda&amp;nbsp;vacío).&lt;/p&gt;
&lt;p&gt;Por ejemplo, podemos guardar el archivo &lt;em&gt;2015-05-20-prueba.rst&lt;/em&gt; con el
siguiente&amp;nbsp;contenido:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
:title: Primera prueba
:date: 2015-05-20 10:00
:category: ejemplos
:tags: ejemplo, tutorial, pruebas, blog
:author: El Diego Efe
:excerpt: Solo una prueba

Mi titulo
=========

Hola. Este es mi primer post. Chau.
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="generacion-del-blog"&gt;
&lt;h2&gt;Generación del&amp;nbsp;blog&lt;/h2&gt;
&lt;p&gt;Ahora que el blog ya está configurado y tiene un contenido vamos a
generar el sitio y chequear cómo se ve. La generación (que procesa
todos los archivos del directorio &lt;em&gt;content&lt;/em&gt;, produce los archivos
&lt;em&gt;html&lt;/em&gt; y los aloja en el directorio &lt;em&gt;output&lt;/em&gt;) se logra con &lt;strong&gt;make
html&lt;/strong&gt; y luego se ejecuta un servidor local con &lt;strong&gt;make serve&lt;/strong&gt; que
permite visitar el blog en la dirección &lt;a class="reference external" href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; make html
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; make serve
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;En la primera corrida puede haber problemas de formato, sin embargo
tras subir el sitio al repositorio externo, se corrobora que la página
carga bien. El servidor se detiene tecleando Ctrl-C Ctrl-C en el&amp;nbsp;terminal.&lt;/p&gt;
&lt;div class="section" id="regeneracion-del-sitio-ante-ediciones-sucesivas"&gt;
&lt;h3&gt;Regeneración del sitio ante ediciones&amp;nbsp;sucesivas&lt;/h3&gt;
&lt;p&gt;En vez de usar &lt;em&gt;make html&lt;/em&gt; y &lt;em&gt;make serve&lt;/em&gt;, que se vuelve tedioso si
uno realiza muchas modificaciones en sus posteos es utilizar &lt;em&gt;make
regenerate&lt;/em&gt; en vez de &lt;em&gt;make html&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Con &lt;em&gt;make regenerate&lt;/em&gt;, cualquier edición de los posts (ya sea el
agregado de nuevos archivos &lt;em&gt;.md&lt;/em&gt; o &lt;em&gt;.rst&lt;/em&gt;, tanto como la modificación
de los existentes) se refleja inmediatamente en cómo se ve el sitio
desde el servidor&amp;nbsp;local.&lt;/p&gt;
&lt;p&gt;Para usarlo se requiere prestar atención. Activar el entorno virtual &lt;em&gt;blogs&lt;/em&gt; en
dos terminales distintos. A continuación lo muestro con el uso de pyenv, aunque
no haya explicado nada antes sobre esta alternativa de manejo de virtualenvs.
Vayamos al grano, en un terminal ejecutar&amp;nbsp;esto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pyenv activate blogs
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; ~/blogs/eldiegoefe.github.io/
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; make regenerate
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;En otro terminal, hacer lo&amp;nbsp;propio:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pyenv activate blogs
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; ~/blogs/eldiegoefe.github.io/
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; make serve
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;De este modo el sitio se regenera ante cualquier edición de su
contenido, y permanece accesible en &lt;a class="reference external" href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt; (no hay que
olvidar que el navegador debe recargar las páginas editadas para ver
los cambios). Tengan presente que si hay algún error, el &lt;em&gt;regenerate&lt;/em&gt; finaliza
indicando cuál fue el problema (lo muestra en el terminal) y por más que
actualicemos la página en el navegador no veremos cambios. Habrá que corregir
los errores de las páginas que estemos modificando y luego volver a ejecutar
el &lt;em&gt;make regenerate&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="subir-el-sitio-al-repositorio-remoto"&gt;
&lt;h2&gt;Subir el sitio al repositorio&amp;nbsp;remoto&lt;/h2&gt;
&lt;p&gt;Una vez que estamos conformes con el contenido vamos a agregar todo al
branch &lt;strong&gt;source&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git add .
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git commit -m &lt;span class="s2"&gt;&amp;quot;Commit inicial de la rama source&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;De este modo nuestros archivos ya quedaron almacenados en la rama
&lt;strong&gt;source&lt;/strong&gt; de nuestro repositorio local. Pero lo que se verá al
acceder al blog, es lo que esté en la rama &lt;strong&gt;master&lt;/strong&gt;, así que hay que
copiar allí las páginas html de la carpeta output. Nicholas propone
usar un script llamado ghp-import para facilitar esa tarea (que ya
instalamos en la parte inicial de este tutorial). Este script exporta
el contenido de la carpeta que se menciona en la linea de comandos (al
ejecutarlo) hacia la rama &amp;#8220;gh-pages&amp;#8221; (que también ya creamos
anteriormente, porque somos gente muy prevenida&amp;#8230;). Finalmente se
debe hacer un merge desde la rama &lt;strong&gt;master&lt;/strong&gt; con la rama &lt;strong&gt;gh-pages&lt;/strong&gt;
y subir todo al repositorio externo. Estos son los pasos&amp;nbsp;mencionados:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ghp-import output
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git checkout master
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git merge gh-pages
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git push --all
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hay que esperar un rato hasta que el sitio esté accesible (sólo la
primera vez, las siguientes actualizaciones que se hagan permiten
acceder al nuevo contenido&amp;nbsp;inmediatamente).&lt;/p&gt;
&lt;p&gt;GitHub pregunta el nombre de usuario y la contraseña al hacer el push
al repositorio online. La página para acceder al blog es
&lt;a class="reference external" href="http://nombreUsuario.github.io"&gt;http://nombreUsuario.github.io&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="agregado-de-posts"&gt;
&lt;h2&gt;Agregado de&amp;nbsp;posts&lt;/h2&gt;
&lt;p&gt;En sesiones posteriores, los nuevos posts se escriben con
restructuredText (o Markdown) y se deben guardar en el directorio
&lt;em&gt;content&lt;/em&gt;, en la rama &lt;strong&gt;source&lt;/strong&gt;. Tampoco hay que olvidarse de activar
el entorno virtual correcto para que funcione Pelican y las órdenes
como &lt;em&gt;make html&lt;/em&gt; y &lt;em&gt;make serve&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;source&lt;/span&gt; /usr/local/bin/virtualenvwrapper.sh
&lt;span class="gp"&gt;$&lt;/span&gt; workon blogs
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; ~/misBlogs/nombreUsuario.github.io/
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git checkout &lt;span class="nb"&gt;source&lt;/span&gt;
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; content
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Con las órdenes anteriores se activó el entorno virtual, nos
aseguramos de estar en la rama &lt;strong&gt;source&lt;/strong&gt; y llegamos al directorio
&lt;em&gt;content&lt;/em&gt; que es donde debemos almacenar los archivos de contenido
(&lt;em&gt;.rst&lt;/em&gt; o &lt;em&gt;.md&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;Generamos el blog y arrancamos el servidor local&amp;nbsp;con:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; make html
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; make serve
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Visitamos el blog con nuestro navegador en la dirección
&lt;a class="reference external" href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Si no estamos conformes detenemos el servidor local desde el terminal
con Ctrl-c Ctrl-c y luego de editar los cambios volvemos a ejecutar
&lt;em&gt;make html&lt;/em&gt; y &lt;em&gt;make serve&lt;/em&gt; (o utilizamos la alternativa de &lt;em&gt;make
regenerate&lt;/em&gt; y &lt;em&gt;make serve&lt;/em&gt; en dos terminales distintos, como expliqué
antes). Una vez que estemos conformes con el contenido tenemos que
ejecutar las siguientes órdenes para subir el blog al repositorio&amp;nbsp;externo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git add .
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git commit -m &lt;span class="s2"&gt;&amp;quot;mensaje del commit&amp;quot;&lt;/span&gt;
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ghp-import output
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git checkout master
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git merge -X theirs gh-pages
&lt;span class="gp gp-VirtualEnv"&gt;(blogs)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git push --all
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="atencion-navegacion-offline"&gt;
&lt;h2&gt;Atención: navegación&amp;nbsp;offline&lt;/h2&gt;
&lt;p&gt;Para que la navegación offline sea posible se debe editar el archivo
pelicanconf.py y comentar/descomentar la linea &lt;em&gt;RELATIVE_URLS = True&lt;/em&gt;.
Si la linea está habilitada (sin la marca de comentario &lt;em&gt;#&lt;/em&gt;) entonces
se puede navegar sin contratiempos en el servidor local
(&lt;a class="reference external" href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;), de lo contrario los enlaces nos llevarán
fuera del servidor local y se cargarán las páginas alojadas en el
repositorio&amp;nbsp;remoto.&lt;/p&gt;
&lt;p&gt;Pero si usamos esta opción de las direcciones (url) relativas, para
que después no haya inconvenientes en el sitio externo
(&lt;a class="reference external" href="http://nombreUsuario.github.io"&gt;http://nombreUsuario.github.io&lt;/a&gt;), se debe deshabilitar esta opción
antes de subir el&amp;nbsp;sitio.&lt;/p&gt;
&lt;p&gt;En otras palabras, no hay que olvidar de generar el sitio con &lt;em&gt;make
html&lt;/em&gt; o &lt;em&gt;make regenerate&lt;/em&gt; con la linea &lt;em&gt;RELATIVE_URLS = True&lt;/em&gt;
deshabilitada, antes de subir nuestro blog al repositorio remoto. De
lo contrario, herramientas como Disqus (que se utiliza para gestionar
comentarios en cada entrada) tendrán dificultades de&amp;nbsp;funcionamiento.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="problemas-con-github"&gt;
&lt;h2&gt;Problemas con&amp;nbsp;GitHub&lt;/h2&gt;
&lt;p&gt;Puede suceder que tras esperar media hora, luego de subir el sitio,
siga dando un mensaje de error (404) al intentar visitarlo en su
dirección final. Aparentemente esto puede evitarse si la subida se
realiza mediante &lt;span class="caps"&gt;SSH&lt;/span&gt; en vez de hacerlo mediante &lt;span class="caps"&gt;HTTP&lt;/span&gt;. Esto lo advertí
en las instrucciones de &lt;a class="reference external" href="http://xlson.com/2010/11/09/getting-started-with-github-pages.html"&gt;Leonard Axelsson&lt;/a&gt;. Las instrucciones para
generar las llaves &lt;span class="caps"&gt;SSH&lt;/span&gt; (&lt;span class="caps"&gt;SSH&lt;/span&gt; keys) están en &lt;a class="reference external" href="https://help.github.com/articles/generating-ssh-keys/"&gt;esta ayuda de GitHub&lt;/a&gt;,
mientras que el cambio propiamente dicho se explica en &lt;a class="reference external" href="https://help.github.com/articles/changing-a-remote-s-url/"&gt;Changing a
remote&amp;#8217;s &lt;span class="caps"&gt;URL&lt;/span&gt;&lt;/a&gt;, también en&amp;nbsp;GitHub.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="problemas-con-youtube"&gt;
&lt;h2&gt;Problemas con&amp;nbsp;Youtube&lt;/h2&gt;
&lt;p&gt;El plugin &lt;strong&gt;pelican-youtube&lt;/strong&gt; puede generar errores al correr un &lt;em&gt;make html&lt;/em&gt;. En
ese caso verificar si además de estar instalado con pip, no figura entre los
plugins de la carpeta &lt;em&gt;?/pelican-plugins&lt;/em&gt;, en cuyo caso una solución posible es
borrarlo de este último sitio (y cada vez que actualicemos ese repositorio de&amp;nbsp;plugins)&lt;/p&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="tutorial"></category><category term="blog"></category><category term="git"></category><category term="pelican"></category></entry><entry><title>Sugerencia respecto de los tutoriales de Emacs</title><link href="https://eldiegoefe.github.io/sugerencia-respecto-de-los-tutoriales-de-emacs.html" rel="alternate"></link><published>2015-05-18T10:00:00+02:00</published><updated>2015-05-18T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2015-05-18:/sugerencia-respecto-de-los-tutoriales-de-emacs.html</id><summary type="html">&lt;p&gt;To read this entry in english: &lt;a class="reference external" href="https://eldiegoefe.github.io/suggestion-about-emacs-tutorials.html"&gt;click&amp;nbsp;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Leo bastantes blogs sobre Emacs desde que empecé el viaje de aprender
a usarlo. Hay tutoriales buenísimos para principiantes y también
páginas destinadas a usuarios más avanzados. Sin embargo, en la
mayoría de los sitios se repite una costumbre que desestima una …&lt;/p&gt;</summary><content type="html">&lt;p&gt;To read this entry in english: &lt;a class="reference external" href="https://eldiegoefe.github.io/suggestion-about-emacs-tutorials.html"&gt;click&amp;nbsp;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Leo bastantes blogs sobre Emacs desde que empecé el viaje de aprender
a usarlo. Hay tutoriales buenísimos para principiantes y también
páginas destinadas a usuarios más avanzados. Sin embargo, en la
mayoría de los sitios se repite una costumbre que desestima una de las
ventajas que tiene el Todopoderoso Editor (su capacidad de
personalización): las instrucciones para hacer tal o cual cosa suelen
aparecer con sus atajos de teclado por defecto, como si fuese
invariable que abrir un archivo (visitarlo) se haga con C-x C-f, o
como si los únicos keybindings para ir a los extremos de la linea
donde se ubica el cursor sean C-a y C-e, o como si realizar búsquedas
incrementales requiera indefectiblemente teclear C-s. En mi caso, las
combinaciones de tecla para estas funciones, entre muchas otras, están
personalizadas, sin que muchas veces funcionen los atajos por defecto
(por ejemplo abro los archivos con C-o, muevo el cursor a los extremos
con M-h y S-M-h, y activo las &amp;#8220;búsquedas incrementales&amp;#8221; con&amp;nbsp;C-f).&lt;/p&gt;
&lt;p&gt;Mi sugerencia a toda la comunidad de educadores de Emacs es que en vez
de referirse a las combinaciones de tecla, en sus tutoriales y
comentarios coloquen siempre los nombres de las funcionen que sugieren
utilizar. Por ejemplo, en vez de escribir C-s deberían hablar de
isearch-forward, o en vez de C-a sería mejor indicar el comando
move-beginning-of-line. De esta manera, uno puede seguir las
instrucciones paso a paso utilizando execute-extended-command (que
generalmente se ejecuta con M-x, aunque en mi instalación eso sucede
con&amp;nbsp;M-a).&lt;/p&gt;
&lt;p&gt;Si uno necesita saber cuál es la combinación de teclas asociada a una
función (a la función que promueve el tutorial) puede ejecutar
describe-function para tener un resumen de la misma y ver sus&amp;nbsp;keybindings.&lt;/p&gt;
</content><category term="tecnicismos"></category><category term="emacs"></category></entry><entry><title>Suggestion about Emacs tutorials</title><link href="https://eldiegoefe.github.io/suggestion-about-emacs-tutorials.html" rel="alternate"></link><published>2015-05-18T10:00:00+02:00</published><updated>2015-05-18T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2015-05-18:/suggestion-about-emacs-tutorials.html</id><summary type="html">&lt;p&gt;Para leer este texto en español: &lt;a class="reference external" href="https://eldiegoefe.github.io/sugerencia-respecto-de-los-tutoriales-de-emacs.html"&gt;click&amp;nbsp;aca&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I read many Emacs blogs since I started the trip of learning it. There
are great beginner&amp;#8217;s tutorials and also webpages for more advanced
users. However, there&amp;#8217;s a habit I find repeatedly on the majority of
sites which goes against …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Para leer este texto en español: &lt;a class="reference external" href="https://eldiegoefe.github.io/sugerencia-respecto-de-los-tutoriales-de-emacs.html"&gt;click&amp;nbsp;aca&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I read many Emacs blogs since I started the trip of learning it. There
are great beginner&amp;#8217;s tutorials and also webpages for more advanced
users. However, there&amp;#8217;s a habit I find repeatedly on the majority of
sites which goes against one of the Almighty Editor advantages:
instructions usually refer to default keybindings, like it was
invariant that you visit files only with C-x C-f, or like the only
admited shortcuts to the beginning and ending of the current line
where C-a and C-e, or if the incremental search inevitable required to
type C-s. In my case, keybindings for all these functions and many
others are personalized, and the default ones are disabled (I visit
files with C-o, move the point to the beginning or end of the line
with M-h and S-M-h, and activate incremental searches with&amp;nbsp;C-f).&lt;/p&gt;
&lt;p&gt;My advice to all the Emacs educator&amp;#8217;s community is to refer and cite
the suggested function names in tutorials and comments, instead of
using their default keybindings. For example, you should talk about
isearch-forward instead of writing C-s; it is better to write the
whole move-beginning-of-line function name instead of only refering to
C-a. This way, it is possible to follow step by step instructions
using execute-extended-command (generally executed with M-x, although
in my setup that happens with&amp;nbsp;M-a).&lt;/p&gt;
&lt;p&gt;Then, if you need to know the keybinding to a function, just execute
describe-function to get its abstract and see its&amp;nbsp;keybindings.&lt;/p&gt;
</content><category term="tecnicismos"></category><category term="emacs"></category></entry><entry><title>Agenda en Emacs y OrgMode</title><link href="https://eldiegoefe.github.io/agenda-en-emacs-y-orgmode.html" rel="alternate"></link><published>2014-12-29T10:00:00+01:00</published><updated>2016-01-06T00:00:00+01:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-12-29:/agenda-en-emacs-y-orgmode.html</id><summary type="html">&lt;div class="section" id="configuracion"&gt;
&lt;h2&gt;Configuracion&lt;/h2&gt;
&lt;p&gt;En el archivo de configuracion de Emacs hay que incluir varios elementos para
poder usar la agenda&amp;nbsp;adecuadamente.&lt;/p&gt;
&lt;p&gt;Se pueden seleccionar individualmente los archivos que forman parte de la&amp;nbsp;agenda:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-agenda-files&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/mis-archivos-org/apuntes-varios.org&amp;quot;&lt;/span&gt;
                             &lt;span class="s"&gt;&amp;quot;~/mis-archivos-org/acomodar.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O sino utilizar un directorio&amp;nbsp;completo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-agenda-files&lt;/span&gt; &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;~/mis-archivos-org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Se …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="configuracion"&gt;
&lt;h2&gt;Configuracion&lt;/h2&gt;
&lt;p&gt;En el archivo de configuracion de Emacs hay que incluir varios elementos para
poder usar la agenda&amp;nbsp;adecuadamente.&lt;/p&gt;
&lt;p&gt;Se pueden seleccionar individualmente los archivos que forman parte de la&amp;nbsp;agenda:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-agenda-files&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/mis-archivos-org/apuntes-varios.org&amp;quot;&lt;/span&gt;
                             &lt;span class="s"&gt;&amp;quot;~/mis-archivos-org/acomodar.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O sino utilizar un directorio&amp;nbsp;completo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-agenda-files&lt;/span&gt; &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;~/mis-archivos-org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Se puede utilizar un archivo en particular para ir anotando al vuelo las ideas
que se nos ocurren. Este archivo lo podremos abrir con &lt;em&gt;org-capture&lt;/em&gt; (C-c c).
Esto nos permite volcar lo que tenemos en la cabeza y dejar para después su
clasificación, de manera de no perder la idea e interrumpir nuestro flujo de
trabajo lo menos posible. La nota se cierra con C-c C-c y se vuelve al mismo
buffer donde estabamos al iniciar la&amp;nbsp;captura.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-default-notes-file&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/mis-archivos-org/inbox.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para abrir el inbox.org desde cualquier buffer se puede asignar un&amp;nbsp;atajo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;;; asigna &amp;quot;C-c o&amp;quot; para abrir mi inbox.org sin tener que buscarlo&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;global-set-key&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;kbd&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;C-c o&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;find-file&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/org/inbox.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Estos son otros comandos de configuración de org-mode que tengo seteados. Salvo
el primero, el resto puede entenderse por&amp;nbsp;inspección:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-agenda-include-diary&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-deadline-warning-days&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;;; Palabras clave para los TODO&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-todo-keywords&lt;/span&gt;
      &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nc"&gt;sequence&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;TODO(t)&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;NEXT(n)&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ESPERANDO(w@)&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;HIBERNANDO(h@)&amp;quot;&lt;/span&gt;
                  &lt;span class="s"&gt;&amp;quot;|&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;CANCELADO(c@)&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;COMPLETADO(f@)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="c1"&gt;;; Colores de los TODO&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-todo-keyword-faces&lt;/span&gt;
      &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;TODO&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:foreground&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;deep sky blue&amp;quot;&lt;/span&gt; &lt;span class="ss"&gt;:background&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;dim gray&amp;quot;&lt;/span&gt; &lt;span class="ss"&gt;:weight&lt;/span&gt; &lt;span class="nv"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NEXT&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:foreground&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tomato&amp;quot;&lt;/span&gt; &lt;span class="ss"&gt;:background&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;dim gray&amp;quot;&lt;/span&gt; &lt;span class="ss"&gt;:weight&lt;/span&gt; &lt;span class="nv"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="c1"&gt;;; (&amp;quot;ACCIONFUTURA&amp;quot; . &amp;quot;salmon&amp;quot;)&lt;/span&gt;
        &lt;span class="c1"&gt;;; (&amp;quot;AVANCEPARCIAL&amp;quot; . &amp;quot;medium spring green&amp;quot;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ESPERANDO&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:foreground&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt; &lt;span class="ss"&gt;:background&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;dim gray&amp;quot;&lt;/span&gt; &lt;span class="ss"&gt;:weight&lt;/span&gt; &lt;span class="nv"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;HIBERNANDO&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:foreground&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;salmon&amp;quot;&lt;/span&gt; &lt;span class="ss"&gt;:background&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;dim gray&amp;quot;&lt;/span&gt; &lt;span class="ss"&gt;:weight&lt;/span&gt; &lt;span class="nv"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;CANCELADO&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;yellow&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;COMPLETADO&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

 &lt;span class="c1"&gt;;; Tags&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-tag-persistent-alist&lt;/span&gt;
      &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@casa&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;?1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@laburo&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;?2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tiempolibre&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;?3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;compras&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;?6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;nota&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;?7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;creat&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;?8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;prj&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;?9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;someday&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;?0&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="c1"&gt;;; Colores de los tags&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-tag-faces&lt;/span&gt;
      &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@casa&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:foreground&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;firebrick&amp;quot;&lt;/span&gt; &lt;span class="ss"&gt;:weight&lt;/span&gt; &lt;span class="nv"&gt;bold&lt;/span&gt; &lt;span class="ss"&gt;:inherit&lt;/span&gt; &lt;span class="nv"&gt;s-variable-pitch&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@laburo&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;light sea green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tiempolibre&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;deep sky blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;compras&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;spring green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;oblig&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;light coral&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;creat&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;olive drab&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;prj&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;cornflower blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;someday&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;orchid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Estas son las plantillas correspondientes a los distintos tipos de notas
configuradas para guardarse en archivos como inbox.org, diario-personal, etc.
Cada nota puede tener una estructura particular, en algunos casos importa
colocar una fecha, una etiqueta, un deadline,&amp;nbsp;etc:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;;; Capture templates for: TODO tasks, Notes, appointments, phone calls,&lt;/span&gt;
&lt;span class="c1"&gt;;; meetings, and org-protocol&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-capture-templates&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;quote&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tarea&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/mis-archivos-org/inbox.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
               &lt;span class="s"&gt;&amp;quot;* TODO %^{Brief Description} %^g\n\n%?\n\nAgregado: %T&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;t&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;todo&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/mis-archivos-org/inbox.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
               &lt;span class="s"&gt;&amp;quot;* TODO %?\n%U\n%a\n&amp;quot;&lt;/span&gt; &lt;span class="ss"&gt;:clock-in&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt; &lt;span class="ss"&gt;:clock-resume&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;n&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;nota&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/mis-archivos-org/inbox.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
               &lt;span class="s"&gt;&amp;quot;* %? :NOTE:\nAgregado: %T\n\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;j&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;journal&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;file+datetree&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/mis-archivos-org/diario-personal.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
               &lt;span class="s"&gt;&amp;quot;* %?\n%T\n&amp;quot;&lt;/span&gt; &lt;span class="ss"&gt;:clock-in&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt; &lt;span class="ss"&gt;:clock-resume&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;l&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;laboratorio&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;file+datetree&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/mis-archivos-org/laboratorio-diario.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
               &lt;span class="s"&gt;&amp;quot;* %?\n%t\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;e&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ejercicios&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;file+datetree&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/mis-archivos-org/cosas-saludables.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
               &lt;span class="s"&gt;&amp;quot;* %?\n%T\n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;r&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;respond&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/mis-archivos-org/inbox.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
               &lt;span class="s"&gt;&amp;quot;* NEXT Respond to %:from on %:subject\nSCHEDULED: %t\n%U\n%a\n&amp;quot;&lt;/span&gt; &lt;span class="ss"&gt;:clock-in&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt; &lt;span class="ss"&gt;:clock-resume&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt; &lt;span class="ss"&gt;:immediate-finish&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="c1"&gt;;; b: modificado de http://members.optusnet.com.au/~charles57/GTD/gtd_workflow.html&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;w&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;org-protocol&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/mis-archivos-org/inbox.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
               &lt;span class="s"&gt;&amp;quot;* TODO Review %c\n%U\n&amp;quot;&lt;/span&gt; &lt;span class="ss"&gt;:immediate-finish&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;m&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Meeting&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/mis-archivos-org/inbox.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
               &lt;span class="s"&gt;&amp;quot;* MEETING with %? :MEETING:\n%U&amp;quot;&lt;/span&gt; &lt;span class="ss"&gt;:clock-in&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt; &lt;span class="ss"&gt;:clock-resume&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;p&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Phone call&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/mis-archivos-org/inbox.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
               &lt;span class="s"&gt;&amp;quot;* PHONE %? :PHONE:\n%U&amp;quot;&lt;/span&gt; &lt;span class="ss"&gt;:clock-in&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt; &lt;span class="ss"&gt;:clock-resume&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;h&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Habit&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;entry&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;~/mis-archivos-org/inbox.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finalmente, para acceder a la agenda hay que invocar el comando &lt;em&gt;org-agenda&lt;/em&gt; o
configurar una combinación de teclas para su ejecución, habitualmente se usa C-c&amp;nbsp;a:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;global-set-key&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;\C-ca&amp;quot;&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;org-agenda&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Allí aparece un menú con las distintas opciones de visualización. A continuación
se describen las opciones (es un resumen de la sección &lt;a class="reference external" href="http://orgmode.org/manual/Built_002din-agenda-views.html#Built_002din-agenda-views"&gt;Built in agenda views&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="vista-1"&gt;
&lt;h3&gt;Vista&amp;nbsp;1&lt;/h3&gt;
&lt;p&gt;org-agenda-list (C-c a a): muestra la vista de agenda para el número de días
fijado por la variable org-agenda-span (que puede contener un número o uno de
los valores siguientes: day, week, month, year). Por defecto esta variable está
elegida en &amp;#8220;week&amp;#8221; (mostrará una semana). Si se invoca el comando con un prefijo
numérico se incluyen esa cantidad de días. Por ejemplo con C-u 3 0 C-c a a se
mostrará una agenda para los siguientes 30 días. Para agendas semanales, se
empieza por defecto en el lunes&amp;nbsp;previo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="vista-2"&gt;
&lt;h3&gt;Vista&amp;nbsp;2&lt;/h3&gt;
&lt;p&gt;org-todo-list (C-c a t): es la lista global de &amp;#8220;&lt;span class="caps"&gt;TODO&lt;/span&gt;&amp;#8221;s, muestra en un solo lugar
todos los items marcados como pendientes (&lt;span class="caps"&gt;TODO&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;org-todo-list (C-c a T): es una variación que pregunta por una keyword y lista
entonces todos los items marcados con esa keyword (por ejemplo: &lt;span class="caps"&gt;CANCELADO&lt;/span&gt; o
&lt;span class="caps"&gt;COMPLETADO&lt;/span&gt;, etc). Se pueden incluir varias keywords usando el caracter &amp;#8220;|&amp;#8221; (que
es un &lt;span class="caps"&gt;OR&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;Para acortar la lista de TODOs hay dos&amp;nbsp;modos:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;sacar de la lista aquellos TODOs que estén marcados como schedule y deadline,
para lo cual hay que configurar las variables
org-agenda-todo-ignore-scheduled, org-agenda-todo-ignore-deadlines,
org-agenda-todo-ignore-timestamp y/o&amp;nbsp;org-agenda-todo-ignore-with-date.&lt;/li&gt;
&lt;li&gt;los items &lt;span class="caps"&gt;TODO&lt;/span&gt; pueden tener subniveles con las distintas subtareas. En estos
casos puede ser suficiente listar sólo los niveles de mayor importancia y
omitir los subniveles. Para ello hay que configurar las variable&amp;nbsp;org-agenda-todo-list-sublevels.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="vista-3"&gt;
&lt;h3&gt;Vista&amp;nbsp;3&lt;/h3&gt;
&lt;p&gt;org-tags-view (C-c a m): muestra una lista de acuerdo a etiquetas (tags) o
propiedades, que se seleccionan de una&amp;nbsp;lista.&lt;/p&gt;
&lt;p&gt;org-tags-view (C-c a M): es parecido, pero además requiere que la etiqueta sea
un &lt;span class="caps"&gt;TODO&lt;/span&gt; (y que este &lt;span class="caps"&gt;TODO&lt;/span&gt; no haya sido &lt;span class="caps"&gt;COMPLETADO&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;Hay muchos detalles sobre la construcción de criterios de búsqueda más complejos
en &lt;a class="reference external" href="http://orgmode.org/manual/Matching-tags-and-properties.html#Matching-tags-and-properties"&gt;este link del manual&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="vista-4"&gt;
&lt;h3&gt;Vista&amp;nbsp;4&lt;/h3&gt;
&lt;p&gt;org-timeline (C-c a L): resume todos los items marcados con fecha,
principalmente usado para dar un panorama de los eventos de un&amp;nbsp;proyecto.&lt;/p&gt;
&lt;p&gt;Si se usa un prefijo (C-u) se muestran todos los TODOs sin completar que también
estén listados debajo del mismo&amp;nbsp;día.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="vista-5"&gt;
&lt;h3&gt;Vista&amp;nbsp;5&lt;/h3&gt;
&lt;p&gt;org-search-view (C-c a s): es una herramienta para búsqueda de texto,
particularmente útil para encontrar notas. Admite búsquedas literales y usando
&amp;#8220;regexp&amp;#8221;. Ver detalles de búsqueda &lt;a class="reference external" href="http://orgmode.org/manual/Search-view.html#Search-view"&gt;en el manual&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="vista-6"&gt;
&lt;h3&gt;Vista&amp;nbsp;6&lt;/h3&gt;
&lt;p&gt;org-agenda-list-stuck-projects (C-c a #): al seguir un sistema como &lt;span class="caps"&gt;GTD&lt;/span&gt; (de
David Allen), hay que revisar regularmente que todos los proyectos se muevan. Un
proyecto estancado es uno que no tiene definidas las &amp;#8220;próximas acciones&amp;#8221;, de
modo que nunca aparecería en la lista de TODOs que produce&amp;nbsp;org-mode.&lt;/p&gt;
&lt;p&gt;Para personalizar el modo de identificar y encontrar proyectos estancados se
utiliza C-c a !. Por defecto supone que todos los proyectos son headlines de
nivel 2, y que no están estancados si tiene al menos una entrada marcada con
alguna de las tres keywords: &lt;span class="caps"&gt;TODO&lt;/span&gt;, &lt;span class="caps"&gt;NEXT&lt;/span&gt;, &lt;span class="caps"&gt;NEXTACTION&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Ver más detalles sobre esta configuración en &lt;a class="reference external" href="http://orgmode.org/manual/Stuck-projects.html#Stuck-projects"&gt;stuck projects&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="emacs"></category><category term="org-mode"></category><category term="agenda"></category><category term="gtd"></category></entry><entry><title>Comandante Emacs (dired-mode)</title><link href="https://eldiegoefe.github.io/comandante-emacs-dired-mode.html" rel="alternate"></link><published>2014-12-26T10:00:00+01:00</published><updated>2014-12-26T10:00:00+01:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-12-26:/comandante-emacs-dired-mode.html</id><summary type="html">&lt;p&gt;Estuve un rato largo (¡horas!) viendo cómo usar el modo &amp;#8220;dired&amp;#8221; que
tiene Emacs para el manejo de archivos, porque quiero usarlo al modo
del viejo Comandante Norton (y sus clones: Total Commander en Window$,
Krusader especialmente para &lt;span class="caps"&gt;KDE&lt;/span&gt;, etc). Es decir: dos paneles que
sirven de inicio y de …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Estuve un rato largo (¡horas!) viendo cómo usar el modo &amp;#8220;dired&amp;#8221; que
tiene Emacs para el manejo de archivos, porque quiero usarlo al modo
del viejo Comandante Norton (y sus clones: Total Commander en Window$,
Krusader especialmente para &lt;span class="caps"&gt;KDE&lt;/span&gt;, etc). Es decir: dos paneles que
sirven de inicio y de destino para poder copiar y mover archivos,
crear directorios, navegarlos,&amp;nbsp;etc.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://live.staticflickr.com/7526/15668751884_91dbcb31e4_o.png"&gt;&lt;img alt="dired pelado (sin dired+)" src="https://live.staticflickr.com/7526/15668751884_b2fa8f9d5b_c.jpg" style="width: 75.0%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Buffer mostrando un directorio con&amp;nbsp;dired-mode&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Lo primero que hice fue instalar un paquete que amplía las opciones
disponibles llamado dired+ (dired plus) y después instalé otra
extensión llamada dired-sort-menu. La información sobre la instalación
de estos paquetes da por supuesto que uno ya tiene experiencia en
Emacs, y a pesar de que yo lo uso hace casi un año y he instalado y
desinstalado muchas extensiones, estuve un rato para darme cuenta de
algo que no figura en &lt;a class="reference external" href="http://www.emacswiki.org/emacs/DiredPlus"&gt;la página de dired+&lt;/a&gt;. En el archivo de
configuración de Emacs (init.el, custom.el o el que estemos
utilizando) es imprescindible agregar la orden&amp;nbsp;siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;dired+&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para correr el modo basta hacer &lt;strong&gt;M-x dired&lt;/strong&gt; (yo creo que con esto se carga ya
con los agregados de dired+, que por ejemplo enriquece los menúes de dired, así
que viendo estos menúes uno puede darse cuenta si está cargada la extensión o
no). El buffer de dired que se abre muestra los nombres de los archivos del
directorio elegido (ver en la figura siguiente), pero parece que por defecto se
activa el ocultamiento de toda otra información. Hay que ejecutar
dired-hide-details-mode para que se vea toda la info del archivo, incluyendo
fecha, permisos,&amp;nbsp;etc.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://farm8.staticflickr.com/7580/16290334112_66dd0af6b1_o.png"&gt;&lt;img alt="dired+ sin detalles" src="https://farm8.staticflickr.com/7580/16290334112_66dd0af6b1_o.png" style="width: 75.0%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Buffer con dired+ suprimiendo detalles de los&amp;nbsp;archivos&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Por ahora no encuentro el modo de colorear distinto a las directorios y a los
archivos con distinta extensión (observación al 11/2020: en Doom Emacs aparecen
cosas con diversos colores, por ejemplo los permisos, las fechas, los tamaños de
los archivos). Intenté con el paquete dired-rainbow y pude colorear distinto los
archivos con diferentes extensiones, pero no se cómo hacer con los directorios
(porque no tienen extensión), así que lo desinstalé. Pero copio debajo el código
de prueba que funcionó, para no&amp;nbsp;perderlo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;dired-rainbow&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;defconst&lt;/span&gt; &lt;span class="nv"&gt;my-dired-media-files-extensions&lt;/span&gt;
  &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;mp3&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;mp4&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;MP3&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;MP4&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;avi&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;mpg&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;flv&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ogg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;Media files.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;dired-rainbow-define&lt;/span&gt; &lt;span class="nv"&gt;html&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;#4e9a06&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;htm&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;html&amp;quot;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;xhtml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;dired-rainbow-define&lt;/span&gt; &lt;span class="nv"&gt;media&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;#ce5c00&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;my-dired-media-files-extensions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Puse &lt;a class="reference external" href="http://emacs.stackexchange.com/questions/5765/how-to-view-files-ordered-by-extension-in-dired"&gt;una pregunta en Emacs Exchange&lt;/a&gt; para ver el modo de ordenar los
archivos por extensión (y poniendo primero los directorios). Me
respondieron al toque, y la solución estaba en instalar un paquete
llamado dired-sort-menu.el (o dired-sort-menu+.el). Luego hay que
agregar también en la configuración el &amp;#8220;require&amp;#8221;&amp;nbsp;correspondiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;dired-sort-menu+&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Al manipular archivos es muy práctico tener dos buffers abiertos como
en la figura siguiente, de modo que al copiar o mover se usan ambos
directorios como origen y destino, sin que haga falta teclear nada. En
este caso el ordenamiento es por nombre, así que se ven mezclados los
archivos (visibles y ocultos) con los&amp;nbsp;directorios.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://farm8.staticflickr.com/7527/16105034929_69b43c99f9_o.png"&gt;&lt;img alt="doble buffer con dired+" src="https://farm8.staticflickr.com/7527/16105034929_742a1aeac2_b.jpg" style="width: 100.0%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Dos buffers coloridos con&amp;nbsp;dired+.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Edición del nombre de archivos y&amp;nbsp;directorios&lt;/p&gt;
&lt;p&gt;El buffer se puede volver editable para habilitar el cambio de nombre de
archivos y directorios, del mismo modo en que se edita un buffer normal de
texto. La función que vuelve editable el buffer es dired-toggle-read-only que
por defecto se ejecuta con C-x C-q y en Doom Emacs directamente con &amp;#8220;i&amp;#8221; (insert
mode). Al correr la función prestar atención al minibuffer porque indica la
manera de salir de este modo de edición, confirmando los cambios (vanilla: C-c
C-c; Doom: Z Z) o cancelándolos (vanilla: C-c C-k; Doom: Z&amp;nbsp;Q).&lt;/p&gt;
&lt;p&gt;Las funciones más comunes y sus atajos de teclado (son case-sensitive)
están en la tabla siguiente, a modo de ejemplo, pero hay muchas más
opciones en los menúes de dired+, que son varios: Dir, Mark, Regexp,
Multiple, Single. En los menúes figuran los atajos, así que mirándolos
es una buena forma de&amp;nbsp;aprender.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="67%" /&gt;
&lt;col width="33%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Función&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Atajo&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Marcar archivo&lt;/td&gt;
&lt;td&gt;m&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Desmarcar archivo&lt;/td&gt;
&lt;td&gt;u&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Marcar por extensión&lt;/td&gt;
&lt;td&gt;*.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Marcar directorios&lt;/td&gt;
&lt;td&gt;*/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Desmarcar todos&lt;/td&gt;
&lt;td&gt;U&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Invertir selección&lt;/td&gt;
&lt;td&gt;t&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Dividir en 2 paneles&lt;/td&gt;
&lt;td&gt;C-w v&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ir al otro panel&lt;/td&gt;
&lt;td&gt;C-w w&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Copiar&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Mover/renombrar&lt;/td&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Full/simple view&lt;/td&gt;
&lt;td&gt;( ó S-8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Entrar directorio&lt;/td&gt;
&lt;td&gt;&lt;span class="caps"&gt;ENTER&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Directorio anterior&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Crear directorio&lt;/td&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Marcar para borrar&lt;/td&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Run acciones marcadas&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Buffer editable&lt;/td&gt;
&lt;td&gt;C-x C-q&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Idem con Doom&lt;/td&gt;
&lt;td&gt;i&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content><category term="tecnicismos"></category><category term="emacs"></category><category term="dired"></category></entry><entry><title>Clojure, nuevo entretenimiento</title><link href="https://eldiegoefe.github.io/clojure-nuevo-entretenimiento.html" rel="alternate"></link><published>2014-11-27T10:00:00+01:00</published><updated>2017-01-08T10:00:00+01:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-11-27:/clojure-nuevo-entretenimiento.html</id><summary type="html">&lt;p&gt;En el mundo Emacs se menciona bastante el lenguaje Clojure, como un
dialecto de Lisp que corre sobre el Java Virtual Machine, lo cual
constituye para mi un dato casi completamente inutil, puesto que
desconozco Java y su &lt;span class="caps"&gt;JVM&lt;/span&gt;. De cualquier manera, mientras continúo
leyendo &lt;span class="caps"&gt;ANSI&lt;/span&gt; Common Lisp, me dieron …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el mundo Emacs se menciona bastante el lenguaje Clojure, como un
dialecto de Lisp que corre sobre el Java Virtual Machine, lo cual
constituye para mi un dato casi completamente inutil, puesto que
desconozco Java y su &lt;span class="caps"&gt;JVM&lt;/span&gt;. De cualquier manera, mientras continúo
leyendo &lt;span class="caps"&gt;ANSI&lt;/span&gt; Common Lisp, me dieron ganas de probar, así que guardo
aquí las instrucciones de instalación para usar Clojure con Emacs en&amp;nbsp;Linux.&lt;/p&gt;
&lt;p&gt;La cuestión no es tan complicada, primero verificamos desde un
terminal que Java está&amp;nbsp;instalado:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; java -version
&lt;span class="go"&gt;java version &amp;quot;1.7.0_65&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;OpenJDK Runtime Environment (IcedTea 2.5.2) (Arch Linux build 7.u65_2.5.2-3-x86_64)&lt;/span&gt;
&lt;span class="go"&gt;OpenJDK 64-Bit Server VM (build 24.65-b04, mixed mode)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como en mi caso obtuve el mensaje precedente, no me tuve que preocupar
de instalar&amp;nbsp;Java.&lt;/p&gt;
&lt;p&gt;Las instrucciones de instalación están en &lt;a class="reference external" href="http://clojure-doc.org/articles/tutorials/emacs.html"&gt;Clojure with Emacs&lt;/a&gt;. En
resumen, lo que hice fue visitar la página de &lt;a class="reference external" href="http://leiningen.org/"&gt;Leiningen&lt;/a&gt; y&amp;nbsp;entonces:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Bajar el script de bash (de nombre &amp;#8220;&lt;em&gt;lein&lt;/em&gt;&amp;#8220;)&lt;/li&gt;
&lt;li&gt;Copiarlo en una carpeta (&lt;em&gt;~/programas/lein/&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Ir a &lt;em&gt;/usr/bin&lt;/em&gt; y crear allí un symlink a lein (con &amp;#8220;&lt;em&gt;sudo ln -s
~/programas/lein/lein&lt;/em&gt;&amp;#8220;). El directorio /usr/bin está en el &lt;span class="caps"&gt;PATH&lt;/span&gt; así
que todo lo que ahí se almacena puede ser encontrado para su
ejecución. El symlink guardado allí apunta al programa en la
dirección donde lo guardamos, así que ahora podremos ejecutar lein
desde cualquier&amp;nbsp;lugar.&lt;/li&gt;
&lt;li&gt;Pero aún falta volver ejecutable el script (con &amp;#8220;&lt;em&gt;chmod a+x lein&lt;/em&gt;&amp;#8220;)&lt;/li&gt;
&lt;li&gt;Finalmente hay que ejecutar lein, lo cual hace que se baje Leiningen
y se instale en el directorio &lt;em&gt;~/.lein&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El directorio creado originalmente (~/programas/lein) debe permanecer
porque allí sigue estando lein, que se ejecutará siempre que se cree
un proyecto (lo que se baja en ~/.lein no lo&amp;nbsp;sustituye).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Agregado&lt;/em&gt;: no hace falta copiar &lt;em&gt;lein&lt;/em&gt; en un directorio como &lt;em&gt;~/programas/lein/&lt;/em&gt; y luego armar un symlink desde &lt;em&gt;/usr/bin&lt;/em&gt;, se puede directamente copiar lein en este último y&amp;nbsp;listo.&lt;/p&gt;
&lt;p&gt;En Emacs instalé &lt;span class="caps"&gt;CIDER&lt;/span&gt;, y además como tengo Prelude habilité en el
archivo prelude-modules.el la linea (require &amp;#8216;prelude-clojure). Así
que si no lo instalaba yo, el mismo Prelude hubiese bajado &lt;span class="caps"&gt;CIDER&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;El tutorial de Clojure with Emacs indica que hay que ejecutar estas
dos órdenes desde un terminal (el resultado es la creación de un
proyecto llamado &lt;em&gt;command-line-args&lt;/em&gt; dentro de un subdirectorio que se
ubica dentro del directorio actual en que se encuentra el&amp;nbsp;terminal):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; lein new command-line-args
&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; command-line-args
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Luego desde Emacs se abre el archivo /command-line-args/project.clj y
se lo edita para agregar al texto que ya tiene, la siguiente linea
(siempre según el&amp;nbsp;tutorial):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ss"&gt;:profiles&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:dev&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:plugins&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="nv"&gt;cider/cider-nrepl&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;0.7.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]]}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hay que cambiar la versión que allí se coloca, puesto que ya no será
la &amp;#8220;0.7.0&amp;#8221;. En el &lt;a class="reference external" href="https://github.com/clojure-emacs/cider-nrepl"&gt;github de cider-nrepl&lt;/a&gt; figura la última versión.
Una vez que hayamos agregado esta linea hay que guardar el archivo y
hacer desde allí mismo &lt;strong&gt;M-x cider-jack-in&lt;/strong&gt;. Si todo va bien se abre
un buffer con el prompt del&amp;nbsp;repl.&lt;/p&gt;
&lt;p&gt;Tuve que dar varias vueltas hasta que esto último funcionó porque
aparecían mensajes de error antes de abrir el buffer o en el mismo
buffer. Lo que sucede es que debe coincidir la versión del cider-nrepl
con la versión de cider instalada. Cuando sustituía &amp;#8220;0.7.0&amp;#8221; por
&amp;#8220;0.8.2&amp;#8221; daba un mensaje diciendo que no encontraba esa versión para
bajar desde los repositorios y cuando intentaba con &amp;#8220;0.8.1&amp;#8221; me&amp;nbsp;decía&lt;/p&gt;
&lt;pre class="literal-block"&gt;
WARNING: CIDERs version (0.8.2-snapshot) does not match cider-nrepl version (0.8.1)
&lt;/pre&gt;
&lt;p&gt;Todo se solucionó cuando en vez de poner &amp;#8220;0.8.2&amp;#8221; escribí
&amp;#8220;0.8.2-&lt;span class="caps"&gt;SNAPSHOT&lt;/span&gt;&amp;#8221; (por eso hay que prestar atención a cuál es la
versión de &lt;span class="caps"&gt;CIDER&lt;/span&gt; que está instalada y copiar el mismo código, el cual
seguramente coincide con la versión que indica el &lt;a class="reference external" href="https://github.com/clojure-emacs/cider-nrepl"&gt;github de
cider-nrepl&lt;/a&gt;). Y &lt;strong&gt;ojo, es todo con mayúsculas&lt;/strong&gt;, no importa cómo
aparezca la versión de &lt;span class="caps"&gt;CIDER&lt;/span&gt;. Y&amp;nbsp;voilá:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;; CIDER 0.8.2alpha (package: 20141126.715) (Java 1.7.0_65, Clojure 1.6.0, nREPL 0.2.6)&lt;/span&gt;
&lt;span class="nv"&gt;user&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para averiguar la versión instalada de&amp;nbsp;cider:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;M-x cider-version
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="un-nuevo-comienzo"&gt;
&lt;h2&gt;Un nuevo&amp;nbsp;comienzo&lt;/h2&gt;
&lt;p&gt;Ahora, con todo listo para usarse, podemos seguir algún tutorial, como
el de &lt;a class="reference external" href="http://www.braveclojure.com/"&gt;Clojure for the brave and true&lt;/a&gt;. El primer capítulo ya nos
permite probar las cosas más básicas, como armar un proyecto nuevo con
&lt;em&gt;lein&lt;/em&gt;, armar el ejecutable java para distribuir, y jugar con el&amp;nbsp;repl.&lt;/p&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="lisp"></category><category term="clojure"></category></entry><entry><title>Pandoc, conversión de org-mode a restructuredtext</title><link href="https://eldiegoefe.github.io/pandoc-conversion-de-org-mode-a-restructuredtext.html" rel="alternate"></link><published>2014-11-08T10:00:00+01:00</published><updated>2014-11-08T10:00:00+01:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-11-08:/pandoc-conversion-de-org-mode-a-restructuredtext.html</id><summary type="html">&lt;p&gt;Pandoc es un software para hacer conversión de archivos de texto entre
distintos lenguajes de markup. Me viene bien probarlo porque me
gustaría escribir mis entradas del blog desde org-mode (que uso con
mucha frecuencia) y obtener el mismo texto en versión
restructuredText, que es el formato en el que …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Pandoc es un software para hacer conversión de archivos de texto entre
distintos lenguajes de markup. Me viene bien probarlo porque me
gustaría escribir mis entradas del blog desde org-mode (que uso con
mucha frecuencia) y obtener el mismo texto en versión
restructuredText, que es el formato en el que escribo el blog (con&amp;nbsp;Pelican).&lt;/p&gt;
&lt;p&gt;La instalación de Pandoc requirió un pequeño ajuste respecto de lo
habitual en Manjaro, ya que el programa no estaba disponible desde los
repositorios que vienen por defecto. Tuve que hacer los ajustes que se
describen en &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/ArchHaskell"&gt;la wiki de Arch&lt;/a&gt;. Estos fueron los 5&amp;nbsp;pasos:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Editar con permisos de administrador el&amp;nbsp;archivo&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;/etc/pacman.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;Agregar esta entrada (en la parte donde se listan los&amp;nbsp;repositorios):&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;[haskell-core]&lt;/span&gt;
&lt;span class="go"&gt;Server = http://xsounds.org/~haskell/core/$arch&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;Agregar claves para confiar en ese&amp;nbsp;repositorio:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt; sudo pacman-key -r 4209170B
&lt;span class="gp"&gt;#&lt;/span&gt; sudo pacman-key --lsign-key 4209170B
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;Actualización de los&amp;nbsp;paquetes&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt; sudo pacman -Syy
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;Instalación propiamente dicha de pandoc (puede ser desde la
aplicación gráfica&amp;nbsp;Octopi).&lt;/li&gt;
&lt;/ol&gt;
</content><category term="tecnicismos"></category><category term="emacs"></category><category term="org-mode"></category><category term="restructuredtext"></category><category term="pandoc"></category><category term="manjaro"></category></entry><entry><title>Mageia y Manjaro</title><link href="https://eldiegoefe.github.io/mageia-y-manjaro.html" rel="alternate"></link><published>2014-10-22T10:00:00+02:00</published><updated>2014-10-22T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-10-22:/mageia-y-manjaro.html</id><summary type="html">&lt;p&gt;Empezó a haber problemas para actualizar el sistema (&lt;a class="reference external" href="https://www.mageia.org/es/"&gt;Mageia&lt;/a&gt;), que
mostraba un mensaje diciendo que había actualizaciones listas para
instalarse, pero no hacía nada al hacer click sobre &lt;em&gt;instalar&lt;/em&gt;. Logré
que se produzca la instalación desde una consola con &lt;strong&gt;sudo urpmi
&amp;#8212;auto-update&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;También dejó de funcionar el programa de configuración …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Empezó a haber problemas para actualizar el sistema (&lt;a class="reference external" href="https://www.mageia.org/es/"&gt;Mageia&lt;/a&gt;), que
mostraba un mensaje diciendo que había actualizaciones listas para
instalarse, pero no hacía nada al hacer click sobre &lt;em&gt;instalar&lt;/em&gt;. Logré
que se produzca la instalación desde una consola con &lt;strong&gt;sudo urpmi
&amp;#8212;auto-update&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;También dejó de funcionar el programa de configuración del sistema al
que se accede desde &lt;em&gt;herramientas/herramientas del sistema/configure su
computador&lt;/em&gt;. Pero en algún momento volvió a andar.&amp;nbsp;:)&lt;/p&gt;
&lt;p&gt;Finalmente tuve problemas para instalar &lt;a class="reference external" href="http://julialang.org/"&gt;Julia&lt;/a&gt;. No había manera de
que compile, y los errores no parecían lógicos. Aproveché para postear
&lt;a class="reference external" href="https://github.com/JuliaLang/julia/issues/8669"&gt;mi primer &amp;#8220;Issue&amp;#8221; en GitHub&lt;/a&gt;, en el repositorio de Julia. Estuvo
bueno porque me respondieron inmediatamente tratando de ayudarme, con
lo cual le perdí un poco el miedo a la experiencia de la&amp;nbsp;interacción.&lt;/p&gt;
&lt;p&gt;Pero el problema persistía y no quería seguir perdiendo tiempo
intentando soluciones que seguían fallando, con síntomas bastante
ilógicos, (y cuando la lógica parece no funcionar mi respuesta
inmediata es tratar de resetear todo). Sumado a eso, tenía previsto
instalar &lt;a class="reference external" href="http://manjaro.org/"&gt;Manjaro&lt;/a&gt; desde que me entusiasmé con él en una máquina
virtual, y por si fuera poco el disco rígido me pedía una
reorganización a gritos, dado que tenía tres cuartas partes
inutilizadas por una distribución de particiones anómala, que
arrastraba desde la época en que tenía &lt;a class="reference external" href="http://fedoraproject.org/es/"&gt;Fedora&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La instalación de Manjaro tuvo algunos inconvenientes porque no tengo
aún muy clara la cuestión del reemplazo de &lt;span class="caps"&gt;BIOS&lt;/span&gt; por &lt;span class="caps"&gt;UEFI&lt;/span&gt;. Ahora ya no
recuerdo tanto, pero el problema que tenía con el instalador gráfico
de Manjaro era que no me dejaba formatear y reparticionar a mi gusto
(no tenía la opción &lt;span class="caps"&gt;UEFI&lt;/span&gt;), lo cual sí pude hacer con el instalador
tipo terminal, que resultó ser bastante amigable. Lo más complicado al
particionar era que el tamaño de las particiones las pedía en
sectores, así que tenía que hacer &amp;#8220;regla de tres&amp;#8221; para obtener el
número de sectores correspondientes a los 50 Gb que quería, con lo que
terminaba tecleando un número de sectores con una cantidad importante
de&amp;nbsp;dígitos.&lt;/p&gt;
&lt;p&gt;Acá pueden ver la pantalla desde la cual escribo, con la nueva
instalación de&amp;nbsp;Manjaro.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://farm9.staticflickr.com/8584/16105314727_dbdb879673_o.png"&gt;&lt;img alt="pantalla con Manjaro" src="https://farm9.staticflickr.com/8584/16105314727_ae59b535dc_b.jpg" style="width: 100%;" /&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Pantalla con&amp;nbsp;Manjaro&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;No abandoné la tarea de instalar con &lt;span class="caps"&gt;UEFI&lt;/span&gt;, a pesar de que me llevó
toda una tarde, porque con este nuevo sistema no hay limitación en el
número de particiones del disco. En cambio en el viejo y estándar &lt;span class="caps"&gt;BIOS&lt;/span&gt;
sólo se pueden hacer 4 primarias, lo cual complica las cosas al querer
tener varias distribuciones de Linux simultáneamente aptas para
bootear la computadora, que es lo que quiero hacer. Ahora llevo una
semana con Manjaro y viene todo perfecto, pero igual en algún momento
voy a continuar con el testeo de distribuciones, así que espero que lo
que haya hecho (dejar varias particiones vacías de 50 Gb) sirva para
esas posteriores&amp;nbsp;instalaciones.&lt;/p&gt;
&lt;p&gt;Finalmente, recomiendo que sean valientes y experimenten con
diferentes distribuciones de Linux, desde Fedora hasta acá todas han
tenido algún problema, pero quizás porque instalo diferentes paquetes
y pruebo cambios de configuración y eso lleva a que ocurran fallos. Un
usuario un poco más conservador que yo seguramente no va a tener
problemas con las distribuciones que les vengo&amp;nbsp;comentando.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://wiki.manjaro.org/index.php?title=UEFI_-_Install_Guide"&gt;Guía de instalación de Manjaro con &lt;span class="caps"&gt;UEFI&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="tecnicismos"></category><category term="mageia"></category><category term="manjaro"></category><category term="particiones"></category><category term="terminal"></category></entry><entry><title>Listas en Python</title><link href="https://eldiegoefe.github.io/listas-en-python.html" rel="alternate"></link><published>2014-10-15T10:00:00+02:00</published><updated>2014-10-15T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-10-15:/listas-en-python.html</id><summary type="html">&lt;p&gt;Apuntes del capítulo 10. Lists, de Think&amp;nbsp;Python.&lt;/p&gt;
&lt;div class="section" id="traversing"&gt;
&lt;h2&gt;Traversing&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;To traverse&lt;/em&gt; es el verbo que se refiere al acceso secuencial de los
elementos de una lista. La siguiente es una forma de &amp;#8220;traversear&amp;#8221; una&amp;nbsp;lista:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;cheese&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cheeses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;cheese&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Si se necesita modificar algún elemento de la lista …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Apuntes del capítulo 10. Lists, de Think&amp;nbsp;Python.&lt;/p&gt;
&lt;div class="section" id="traversing"&gt;
&lt;h2&gt;Traversing&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;To traverse&lt;/em&gt; es el verbo que se refiere al acceso secuencial de los
elementos de una lista. La siguiente es una forma de &amp;#8220;traversear&amp;#8221; una&amp;nbsp;lista:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;cheese&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cheeses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;cheese&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Si se necesita modificar algún elemento de la lista es mejor&amp;nbsp;hacer:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
       &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="agregar-elementos-a-una-lista"&gt;
&lt;h2&gt;Agregar elementos a una&amp;nbsp;lista&lt;/h2&gt;
&lt;p&gt;Se pueden agregar elementos individuales a una lista con &lt;em&gt;append&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;También se pueden agregar elementos con el operador &lt;em&gt;+&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Ambas formas tienen&amp;nbsp;diferencias:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt;
&lt;span class="kc"&gt;None&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;El método &lt;em&gt;append&lt;/em&gt; modifica la lista sobre la cual se aplica pero
tiene salida&amp;nbsp;None.&lt;/p&gt;
&lt;p&gt;El operador &lt;em&gt;+&lt;/em&gt; sí tiene una&amp;nbsp;salida:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Se puede agregar una lista (t2) a otra lista (t1) con &lt;em&gt;extend&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="salidas-de-los-metodos-de-lista"&gt;
&lt;h2&gt;Salidas de los métodos de&amp;nbsp;lista&lt;/h2&gt;
&lt;p&gt;Las salidas de los métodos aplicados a listas son todos &lt;em&gt;void&lt;/em&gt;, es
decir que no dan ningún valor de salida. Por ejemplo el método
&lt;strong&gt;sort&lt;/strong&gt; ordena una lista, modifica esa lista (la muta) pero la salida
es None (aunque la lista efectivamente&amp;nbsp;cambió).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="reduce-fat-fast-or-map-filter-and-reduce"&gt;
&lt;h2&gt;Reduce Fat Fast or Map, Filter and&amp;nbsp;Reduce&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Reduce&lt;/strong&gt;: una operación que combina una secuencia de elementos en un
solo valor (por ejemplo: la suma de todos los elementos). Es un patrón
de procesamiento que &lt;em&gt;traversea&lt;/em&gt; una secuencia y acumula los elementos
en un solo&amp;nbsp;resultado.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Map&lt;/strong&gt;: una operación que aplica una función a cada elemento de una lista
(por ejemplo: poner en mayúscula la inicial de las palabras que forman
una lista). El mapeo es una relación en la cual cada elemento de una
lista corresponde a un elemento en otra lista. Por ejemplo: una lista
es un mapeo de índices a&amp;nbsp;elementos.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Filter&lt;/strong&gt;: una operación que selecciona algunos elementos de una lista,
basándose en algún criterio (por ejemplo: las palabras de una lista cuyas
letras estén todas en mayúsculas). Es un patrón de procesamiento que
&lt;em&gt;traversea&lt;/em&gt; una lista y selecciona los elementos que satisfacen algún
criterio&amp;nbsp;especificado.&lt;/p&gt;
&lt;p&gt;Las operaciones más comunes sobre una lista pueden ser expresadas como
una combinación de map, filter y&amp;nbsp;reduce.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="borrar-elementos-de-una-lista"&gt;
&lt;h2&gt;Borrar elementos de una&amp;nbsp;lista&lt;/h2&gt;
&lt;p&gt;Hay distintos&amp;nbsp;modos:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;pop&lt;/strong&gt;: modifica la&amp;nbsp;lista&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;del&lt;/strong&gt;: cuando no se necesita el elemento&amp;nbsp;borrado&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Obs: pueden usarse slices. del t[1:3] &amp;#8212;-&amp;gt; [2,&amp;nbsp;16]&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;remove&lt;/strong&gt;: cuando no se conoce el índice, pero sí el elemento a&amp;nbsp;borrar&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="python"></category><category term="listas"></category></entry><entry><title>Tutorial sobre control de versiones (parte 4)</title><link href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-4.html" rel="alternate"></link><published>2014-10-10T11:00:00+02:00</published><updated>2014-10-10T11:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-10-10:/tutorial-sobre-control-de-versiones-parte-4.html</id><summary type="html">&lt;div class="section" id="indice-del-tutorial"&gt;
&lt;h2&gt;Indice del&amp;nbsp;Tutorial&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-1.html"&gt;Parte 1&lt;/a&gt;. Cómo armar un repositorio&amp;nbsp;local&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-2.html"&gt;Parte 2&lt;/a&gt;. Cómo subir el repositorio local al&amp;nbsp;remoto&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-3.html"&gt;Parte 3&lt;/a&gt;. Cómo colaborar en un mismo repositorio&amp;nbsp;remoto&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-4.html"&gt;Parte 4&lt;/a&gt;. Cómo resolver&amp;nbsp;conflictos&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para ver las versiones (en inglés) en las cuales se basa este
tutorial, podés visitar &lt;a class="reference external" href="http://software-carpentry.org/v5/novice/git/"&gt;la página …&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="indice-del-tutorial"&gt;
&lt;h2&gt;Indice del&amp;nbsp;Tutorial&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-1.html"&gt;Parte 1&lt;/a&gt;. Cómo armar un repositorio&amp;nbsp;local&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-2.html"&gt;Parte 2&lt;/a&gt;. Cómo subir el repositorio local al&amp;nbsp;remoto&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-3.html"&gt;Parte 3&lt;/a&gt;. Cómo colaborar en un mismo repositorio&amp;nbsp;remoto&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-4.html"&gt;Parte 4&lt;/a&gt;. Cómo resolver&amp;nbsp;conflictos&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para ver las versiones (en inglés) en las cuales se basa este
tutorial, podés visitar &lt;a class="reference external" href="http://software-carpentry.org/v5/novice/git/"&gt;la página de Software&amp;nbsp;Carpentry&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="cuando-aparecen-los-conflictos"&gt;
&lt;h2&gt;Cuándo aparecen los&amp;nbsp;conflictos&lt;/h2&gt;
&lt;p&gt;El sistema de control de versiones permite que la gente trabaje en
paralelo editando sus programas en código fuente. En realidad, se
puede usar para cualquier tipo de archivo con texto plano (me parece
fantástico para informes, relatos, blogs como este,&amp;nbsp;etc).&lt;/p&gt;
&lt;p&gt;Trabajar en paralelo implica que en algún momento dos personas se van
a pisar y van a modificar una misma porción de texto. Esto podría
pasarle incluso a una sola persona: si trabajamos un mismo fragmento
en la computadora de escritorio en casa, en una notebook y también en
una &lt;span class="caps"&gt;PC&lt;/span&gt; en el laburo, podríamos haber hecho diferentes cambios en cada
copia. El control de versiones nos ayuda a manipular esos conflictos
dándonos herramientas para resolver esos cambios&amp;nbsp;superpuestos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="un-conflicto-impostado"&gt;
&lt;h2&gt;Un conflicto&amp;nbsp;impostado&lt;/h2&gt;
&lt;p&gt;Para ver cómo se resuelven estos conflictos vamos a subir al
repositorio &lt;em&gt;emacs&lt;/em&gt; que posee &lt;em&gt;eldiegoefe&lt;/em&gt; el archivo &lt;em&gt;manifiesto.txt&lt;/em&gt;
con el siguiente&amp;nbsp;texto:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Un fantasma recorre Europa: el fantasma del comunismo. Todas las
fuerzas de la vieja Europa se han unido en santa cruzada para acosar a
ese fantasma: el Papa y el zar, Metternich y Guizot, los radicales
franceses y los polizontes alemanes.
&lt;/pre&gt;
&lt;p&gt;A continuación vamos a hacer que los dos usuarios con los que
trabajamos en la &lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-3.html"&gt;parte 3&lt;/a&gt; (&lt;em&gt;eldiegoefe&lt;/em&gt; y &lt;em&gt;bioingenierodiegol&lt;/em&gt;)
realicen cambios de este archivo en sus repositorios&amp;nbsp;locales.&lt;/p&gt;
&lt;p&gt;El usuario &lt;em&gt;bioingenierodiegol&lt;/em&gt; agregar una linea a su versión local
de &lt;em&gt;manifiesto.txt&lt;/em&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Un fantasma recorre Europa: el fantasma del comunismo. Todas las
fuerzas de la vieja Europa se han unido en santa cruzada para acosar a
ese fantasma: el Papa y el zar, Metternich y Guizot, los radicales
franceses y los polizontes alemanes. Marx se la come.
&lt;/pre&gt;
&lt;p&gt;Mientras tanto el usuario &lt;em&gt;eldiegoefe&lt;/em&gt; agrega otra oración, un poco
menos&amp;nbsp;revisionista:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Un fantasma recorre Europa: el fantasma del comunismo. Todas las
fuerzas de la vieja Europa se han unido en santa cruzada para acosar a
ese fantasma: el Papa y el zar, Metternich y Guizot, los radicales
franceses y los polizontes alemanes. Marx es re-grosso, vieja.
&lt;/pre&gt;
&lt;p&gt;Por cosas de la vida, &lt;em&gt;bioingenierodiegol&lt;/em&gt; hace su secuencia &lt;strong&gt;1. git
add manifiesto.txt&lt;/strong&gt;, &lt;strong&gt;2. git commit -m &amp;#8220;Agregue linea &amp;#8216;Marx se la
come&amp;#8217;&amp;#8221;&lt;/strong&gt; y &lt;strong&gt;3. git push origin master&lt;/strong&gt; de modo que cuando termina de
hacerlo, en el repositorio remoto (en Github) el archivo
&lt;em&gt;manifiesto.txt&lt;/em&gt; habla de la gastronómica vida sexual de&amp;nbsp;Marx.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="experimentando-la-frustracion-del-militante"&gt;
&lt;h2&gt;Experimentando la frustración del&amp;nbsp;militante&lt;/h2&gt;
&lt;p&gt;El respetuoso militante &lt;em&gt;eldiegoefe&lt;/em&gt; también modifica su copia local
de &lt;em&gt;manifiesto.txt&lt;/em&gt;, hace su &lt;em&gt;git add&lt;/em&gt; y su &lt;em&gt;git commit&lt;/em&gt; pero veamos
qué sucede cuando intenta el &lt;em&gt;git push&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;[eldiegoefe]$&lt;/span&gt; git push origin master
&lt;span class="go"&gt;To https://github.com/eldiegoefe/emacs.git&lt;/span&gt;
&lt;span class="go"&gt; ! [rejected]        master -&amp;gt; master (fetch first)&lt;/span&gt;
&lt;span class="go"&gt;error: failed to push some refs to &amp;#39;https://github.com/eldiegoefe/emacs.git&amp;#39;&lt;/span&gt;
&lt;span class="go"&gt;hint: Updates were rejected because the remote contains work that you do&lt;/span&gt;
&lt;span class="go"&gt;hint: not have locally. This is usually caused by another repository pushing&lt;/span&gt;
&lt;span class="go"&gt;hint: to the same ref. You may want to first integrate the remote changes&lt;/span&gt;
&lt;span class="go"&gt;hint: (e.g., &amp;#39;git pull ...&amp;#39;) before pushing again.&lt;/span&gt;
&lt;span class="go"&gt;hint: See the &amp;#39;Note about fast-forwards&amp;#39; in &amp;#39;git push --help&amp;#39; for details.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;El sistema nos da un error, pero también nos dice el motivo por el
cual fue rechazado el &lt;em&gt;push&lt;/em&gt;: el remoto contiene trabajo que no
poseemos localmente. Esto es frecuentemente causado por otro usuario
actualizando el repositorio en Github en el tiempo que transcurre
entre el momento que hicimos la última sincronización con el
repositorio remoto y el tiempo en el que intentamos el &lt;em&gt;git push&lt;/em&gt;. En
su mensaje, como el sistema sabe de esta posibilidad, sugiere primero
integrar los cambios del remoto con un &lt;em&gt;git pull&lt;/em&gt; antes de volver a
intentar nuestro &lt;em&gt;git push&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="comenzando-a-solucionar-la-cuestion"&gt;
&lt;h2&gt;Comenzando a solucionar la&amp;nbsp;cuestión&lt;/h2&gt;
&lt;p&gt;Es decir que Git detecta que los cambios hechos en una copia se
superponen con los hechos en la otra copia, y nos impide pisar o
sobreescribir el trabajo. Vamos entonces a hacer el &lt;em&gt;git pull&lt;/em&gt; desde
Github y fundir esos cambios remotos en nuestra copia&amp;nbsp;local.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;[eldiegoefe]$&lt;/span&gt; git pull origin master
&lt;span class="go"&gt;remote: Counting objects: 3, done.&lt;/span&gt;
&lt;span class="go"&gt;remote: Compressing objects: 100% (1/1), done.&lt;/span&gt;
&lt;span class="go"&gt;remote: Total 3 (delta 2), reused 3 (delta 2)&lt;/span&gt;
&lt;span class="go"&gt;Unpacking objects: 100% (3/3), done.&lt;/span&gt;
&lt;span class="go"&gt;From https://github.com/eldiegoefe/emacs&lt;/span&gt;
&lt;span class="go"&gt; * branch            master     -&amp;gt; FETCH_HEAD&lt;/span&gt;
&lt;span class="go"&gt;   142c683..efe8a9a  master     -&amp;gt; origin/master&lt;/span&gt;
&lt;span class="go"&gt;Auto-merging manifiesto.txt&lt;/span&gt;
&lt;span class="go"&gt;CONFLICT (content): Merge conflict in manifiesto.txt&lt;/span&gt;
&lt;span class="go"&gt;Automatic merge failed; fix conflicts and then commit the result.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ahora Git nos avisa que hay un conflicto y marca el archivo donde éste
se produce (&lt;em&gt;manifiesto.txt&lt;/em&gt;). Veamos ahora el contenido de este
archivo con cualquier&amp;nbsp;editor:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Un fantasma recorre Europa: el fantasma del comunismo. Todas las
&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD
fuerzas de la vieja Europa se han unido en santa cruzada para acosar a
ese fantasma: el Papa y el zar, Metternich y Guizot, los radicales
franceses y los polizontes alemanes. Marx es re-grosso, vieja.
=======
fuerzas de la vieja Europa se han unido en santa cruzada para
acosar a ese fantasma: el Papa y el zar, Metternich y Guizot, los
radicales franceses y los polizontes alemanes. Marx se la come.
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; efe8a9a434f1a2609a16660f7d78c82fadad7d7c
&lt;/pre&gt;
&lt;p&gt;Vemos que Git ha modificado el archivo local colocando marcas para
separar las dos versiones. Veo que ambas versiones no solamente
difieren en la oración que habla de Marx, sino también en el
contenido de las últimas tres lineas (no empiezan y terminan con las
mismas palabras). ¡No es facil engañar a&amp;nbsp;Git!&lt;/p&gt;
&lt;p&gt;Las marcas son &lt;strong&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; &lt;span class="caps"&gt;HEAD&lt;/span&gt;&lt;/strong&gt;, el separador &lt;strong&gt;=======&lt;/strong&gt; (que divide
los cambios conflictivos en las dos versiones) y &lt;strong&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;
efe8a9a434f1a2609a16660f7d78c82fadad7d7c&lt;/strong&gt;. Lo que está junto al
&lt;strong&gt;&lt;span class="caps"&gt;HEAD&lt;/span&gt;&lt;/strong&gt; es el contenido local, mientras lo que está tras el separador
(antes del identificador de la revisión que acabamos de bajar) es el
contenido agregado&amp;nbsp;remotamente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="solucion-en-proceso"&gt;
&lt;h2&gt;Solución en&amp;nbsp;proceso&lt;/h2&gt;
&lt;p&gt;Nos corresponde editar este archivo para remover las marcas y
reconciliar los cambios. Podemos hacer lo que nos plazca: mantener los
cambios que hicimos en el repositorio local, mantener los cambios
hechos en el repositorio remoto, escribir algo nuevo que reemplace a
ambos, o eliminar completamente ambos cambios. Hagamos una&amp;nbsp;mezcla:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Un fantasma recorre Europa: el fantasma del comunismo. Todas las
fuerzas de la vieja Europa se han unido en santa cruzada para
acosar a ese fantasma: el Papa y el zar, Metternich y Guizot, los
radicales franceses y los polizontes alemanes. Marx es re-grosso,
pero Engels es más grosso todavía.
&lt;/pre&gt;
&lt;p&gt;Ahora &lt;em&gt;eldiegoefe&lt;/em&gt; pide enterarse de cómo está la&amp;nbsp;situación:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;[eldiegoefe]$&lt;/span&gt; git status
&lt;span class="gp"&gt;#&lt;/span&gt; On branch master
&lt;span class="gp"&gt;#&lt;/span&gt; You have unmerged paths.
&lt;span class="gp"&gt;#&lt;/span&gt;   &lt;span class="o"&gt;(&lt;/span&gt;fix conflicts and run &lt;span class="s2"&gt;&amp;quot;git commit&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt; Unmerged paths:
&lt;span class="gp"&gt;#&lt;/span&gt;   &lt;span class="o"&gt;(&lt;/span&gt;use &lt;span class="s2"&gt;&amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot;&lt;/span&gt; to mark resolution&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;       both modified:      manifiesto.txt
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="go"&gt;no changes added to commit (use &amp;quot;git add&amp;quot; and/or &amp;quot;git commit -a&amp;quot;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Tenemos que agregar los cambios y comitearlos antes de volver a
intentar el&amp;nbsp;push:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;[eldiegoefe]$&lt;/span&gt; git add manifiesto.txt

&lt;span class="gp"&gt;[eldiegoefe]$&lt;/span&gt; git status
&lt;span class="gp"&gt;#&lt;/span&gt; On branch master
&lt;span class="gp"&gt;#&lt;/span&gt; All conflicts fixed but you are still merging.
&lt;span class="gp"&gt;#&lt;/span&gt;   &lt;span class="o"&gt;(&lt;/span&gt;use &lt;span class="s2"&gt;&amp;quot;git commit&amp;quot;&lt;/span&gt; to conclude merge&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt; Changes to be committed:
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;       modified:   manifiesto.txt

&lt;span class="gp"&gt;[eldiegoefe]$&lt;/span&gt; git commit -m &lt;span class="s2"&gt;&amp;quot;Conflicto arreglado en manifiesto.txt&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;[master 4f17908] Conflicto arreglado en manifiesto.txt&lt;/span&gt;

&lt;span class="gp"&gt;[eldiegoefe]$&lt;/span&gt; git status
&lt;span class="gp"&gt;#&lt;/span&gt; On branch master
&lt;span class="go"&gt;nothing to commit, working directory clean&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="listo-el-pollo"&gt;
&lt;h2&gt;Listo el&amp;nbsp;pollo&lt;/h2&gt;
&lt;p&gt;Ahora sí intentamos el&amp;nbsp;push:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;[eldiegoefe]$&lt;/span&gt; git push origin master
&lt;span class="go"&gt;Counting objects: 10, done.&lt;/span&gt;
&lt;span class="go"&gt;Delta compression using up to 4 threads.&lt;/span&gt;
&lt;span class="go"&gt;Compressing objects: 100% (6/6), done.&lt;/span&gt;
&lt;span class="go"&gt;Writing objects: 100% (6/6), 665 bytes | 0 bytes/s, done.&lt;/span&gt;
&lt;span class="go"&gt;Total 6 (delta 4), reused 0 (delta 0)&lt;/span&gt;
&lt;span class="go"&gt;To https://github.com/eldiegoefe/emacs.git&lt;/span&gt;
&lt;span class="go"&gt;   efe8a9a..4f17908  master -&amp;gt; master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Esta vez pudimos subir todo exitosamente. Ahora vamos a ver qué le
pasa al otro usuario &lt;em&gt;bioingenierodiegol&lt;/em&gt; cuando quiere actualizar su
repo&amp;nbsp;local:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;[bioingenierodiegol] $&lt;/span&gt; git pull origin master
&lt;span class="go"&gt;remote: Counting objects: 6, done.&lt;/span&gt;
&lt;span class="go"&gt;remote: Compressing objects: 100% (2/2), done.&lt;/span&gt;
&lt;span class="go"&gt;Unpacking objects: 100% (6/6), done.&lt;/span&gt;
&lt;span class="go"&gt;remote: Total 6 (delta 4), reused 6 (delta 4)&lt;/span&gt;
&lt;span class="go"&gt;From https://github.com/eldiegoefe/emacs&lt;/span&gt;
&lt;span class="go"&gt; * branch            master     -&amp;gt; FETCH_HEAD&lt;/span&gt;
&lt;span class="go"&gt;   efe8a9a..4f17908  master     -&amp;gt; origin/master&lt;/span&gt;
&lt;span class="go"&gt;Updating efe8a9a..4f17908&lt;/span&gt;
&lt;span class="go"&gt;Fast-forward&lt;/span&gt;
&lt;span class="go"&gt; manifiesto.txt | 3 ++-&lt;/span&gt;
&lt;span class="go"&gt; 1 file changed, 2 insertions(+), 1 deletion(-)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sin problemas se ha cerrado el círculo, ambos usuarios tienen el mismo
contenido en el archivo que había generado el&amp;nbsp;conflicto:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Un fantasma recorre Europa: el fantasma del comunismo. Todas las
fuerzas de la vieja Europa se han unido en santa cruzada para
acosar a ese fantasma: el Papa y el zar, Metternich y Guizot, los
radicales franceses y los polizontes alemanes. Marx es re-grosso,
pero Engels es más grosso todavía.
&lt;/pre&gt;
&lt;p&gt;El usuario &lt;em&gt;bioingenierodiegol&lt;/em&gt; no tuvo necesidad de hacer la fusión
(merge) porque Git sabe que algún otro ya lo&amp;nbsp;hizo.&lt;/p&gt;
&lt;p&gt;Los usuarios tienden a dividir sus programas y textos en múltiples
archivos (en vez de meter todo en un mismo archivo enorme) porque esto
facilita lo que acabamos de ver: habilidad del sistema de control de
versiones para fusionar cambios&amp;nbsp;conflictivos.&lt;/p&gt;
&lt;p&gt;Hay también otro beneficio: siempre que hay conflictos repetidos en un
archivo en particular, el sistema de control de versiones está
esencialmente tratando de decirle a sus usuarios que deberían
clarificar quién es el responsable de cada cosa, o encontrar un modo
de dividir el trabajo de modo&amp;nbsp;diferente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="claves"&gt;
&lt;h2&gt;Claves&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Los conflictos ocurren cuando dos o más personas cambian el mismo
archivo al mismo&amp;nbsp;tiempo.&lt;/p&gt;
&lt;p&gt;El sistema de control de versiones no permite que la gente
sobreescriba ciegamente los cambios realizados por otras personas. En
cambio, resalta los conflictos para que los puedan&amp;nbsp;resolver.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="git"></category><category term="control de versiones"></category><category term="tutorial"></category></entry><entry><title>Tutorial sobre control de versiones (parte 3)</title><link href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-3.html" rel="alternate"></link><published>2014-10-09T10:00:00+02:00</published><updated>2014-10-09T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-10-09:/tutorial-sobre-control-de-versiones-parte-3.html</id><summary type="html">&lt;div class="section" id="indice-del-tutorial"&gt;
&lt;h2&gt;Indice del&amp;nbsp;Tutorial&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-1.html"&gt;Parte 1&lt;/a&gt;. Cómo armar un repositorio&amp;nbsp;local&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-2.html"&gt;Parte 2&lt;/a&gt;. Cómo subir el repositorio local al&amp;nbsp;remoto&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-3.html"&gt;Parte 3&lt;/a&gt;. Cómo colaborar en un mismo repositorio&amp;nbsp;remoto&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-4.html"&gt;Parte 4&lt;/a&gt;. Cómo resolver&amp;nbsp;conflictos&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para ver las versiones (en inglés) en las cuales se basa este
tutorial, podés visitar &lt;a class="reference external" href="http://software-carpentry.org/v5/novice/git/"&gt;la página …&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="indice-del-tutorial"&gt;
&lt;h2&gt;Indice del&amp;nbsp;Tutorial&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-1.html"&gt;Parte 1&lt;/a&gt;. Cómo armar un repositorio&amp;nbsp;local&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-2.html"&gt;Parte 2&lt;/a&gt;. Cómo subir el repositorio local al&amp;nbsp;remoto&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-3.html"&gt;Parte 3&lt;/a&gt;. Cómo colaborar en un mismo repositorio&amp;nbsp;remoto&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-4.html"&gt;Parte 4&lt;/a&gt;. Cómo resolver&amp;nbsp;conflictos&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para ver las versiones (en inglés) en las cuales se basa este
tutorial, podés visitar &lt;a class="reference external" href="http://software-carpentry.org/v5/novice/git/"&gt;la página de Software&amp;nbsp;Carpentry&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="probando-el-cooperativismo"&gt;
&lt;h2&gt;Probando el&amp;nbsp;cooperativismo&lt;/h2&gt;
&lt;p&gt;Vamos a practicar cómo se realiza una colaboración a través de un
repositorio en Github. Para ello nada mejor que colaborar con uno
mismo. Lo que hago es trabajar con dos cuentas en Github, corriendo un
usuario en mi &lt;span class="caps"&gt;PC&lt;/span&gt; de escritorio y el otro dentro de una máquina virtual
dentro de la misma &lt;span class="caps"&gt;PC&lt;/span&gt; (aunque también lo podría hacer desde una
notebook, o desde otra sesión de esta misma computadora, pero decir
que uno corre una máquina virtual con Linux suena mucho más
&lt;em&gt;god-level&lt;/em&gt;). No voy a detenerme a explicar nada sobre las máquinas
virtuales porque además de ser demasiado sencillo también es
off-topic, y no quiero offtopiquearme. ¡Cómprense un amiguito y&amp;nbsp;chau!&lt;/p&gt;
&lt;p&gt;Vamos a seguir haciendo las pruebas usando el repositorio &lt;strong&gt;emacs&lt;/strong&gt;
con el que estaba nerdeando/tinkereando/boludeando (ahhhh, la
flexibilidad del lenguaje) en la parte 2. Voy a darle permiso de
acceso (&lt;a class="reference internal" href="#no-carnal"&gt;no-carnal&lt;/a&gt;) a un tercero (&lt;em&gt;bioingenieroDiegol&lt;/em&gt;, mi otra
cuenta). Con este propósito me dirijo a la página del repositorio en
Github, y selecciono Settings/Collaborators. Una vez allí agrego a
&lt;em&gt;bioingenieroDiegol&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="clonacion"&gt;
&lt;h2&gt;Clonación&lt;/h2&gt;
&lt;p&gt;Luego me cambio a la &lt;span class="caps"&gt;PC&lt;/span&gt; virtual y allí ya vestido como
&lt;em&gt;bioingenieroDiegol&lt;/em&gt; voy a clonar el repositorio en esa virtuosa&amp;nbsp;computadora:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;[bioingenierodiegol]$&lt;/span&gt; git clone https://github.com/eldiegoefe/emacs.git
&lt;span class="gp"&gt;[bioingenierodiegol]$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; emacs
&lt;span class="gp"&gt;[bioingenierodiegol]$&lt;/span&gt; git status
&lt;span class="go"&gt;On branch master&lt;/span&gt;
&lt;span class="go"&gt;Your branch is up-to-date with &amp;#39;origin/master&amp;#39;.&lt;/span&gt;
&lt;span class="go"&gt;nothing to commit, working directory clean&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ahora tengo los mismos archivos en la compu de &lt;em&gt;bioingenieroDiegol&lt;/em&gt; que
en el repositorio de Github. Además sucede algo muy curioso, &lt;strong&gt;sin&lt;/strong&gt;
haber hecho &lt;em&gt;git remote add origin
https://github.com/eldiegoefe/emacs.git&lt;/em&gt; vamos a&amp;nbsp;tener:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;[bioingenierodiegol]$&lt;/span&gt; git remote -v
&lt;span class="go"&gt;origin  https://github.com/eldiegoefe/emacs.git (fetch)&lt;/span&gt;
&lt;span class="go"&gt;origin  https://github.com/eldiegoefe/emacs.git (push)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vemos que la url y el alias estaban en el repositorio. Es por
convención que se usa el nombre de &lt;em&gt;origin&lt;/em&gt; como alias. Cuando más
adelante quiera hacer el &lt;em&gt;git push&lt;/em&gt; voy a usar directamente &lt;em&gt;git push
origin master&lt;/em&gt; y va a&amp;nbsp;funcionar.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="cambios-hechos-por-el-colaborador"&gt;
&lt;h2&gt;Cambios hechos por el&amp;nbsp;colaborador&lt;/h2&gt;
&lt;p&gt;A continuación hago algunos cambios en los archivos locales de
&lt;em&gt;bioingenieroDiegol&lt;/em&gt; (para esta prueba puedo agregar un archivo nuevo
o modificar los existentes) y luego voy a tratar de subirlos al repo
remoto (que sigue siendo propiedad de &lt;em&gt;eldiegoefe&lt;/em&gt;). Para esta última
tarea es que hube agregado (¡caramba!) a &lt;em&gt;bioingenieroDiegol&lt;/em&gt; a la
lista de colaboradores (porque para la clonación no necesitaba&amp;nbsp;permisos).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;[bioingenierodiegol]$&lt;/span&gt; touch archivo-vacio.txt
&lt;span class="gp"&gt;[bioingenierodiegol]$&lt;/span&gt; git add archivo-vacio.txt
&lt;span class="gp"&gt;[bioingenierodiegol]$&lt;/span&gt; git commit -m &lt;span class="s2"&gt;&amp;quot;Agrego archivo-vacio.txt&amp;quot;&lt;/span&gt;
&lt;span class="gp"&gt;[bioingenierodiegol]$&lt;/span&gt; git status
&lt;span class="go"&gt;On branch master&lt;/span&gt;
&lt;span class="go"&gt;Your branch is ahead of &amp;#39;origin/master&amp;#39; by 1 commit.&lt;/span&gt;
&lt;span class="go"&gt;  (use &amp;quot;git push&amp;quot; to publish your local commits)&lt;/span&gt;
&lt;span class="go"&gt;nothing to commit, working directory clean&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Git es muy comunicativo y nos dice lo que sucede y cómo tenemos que
continuar. Nuestra rama &lt;em&gt;master&lt;/em&gt; local está adelantada respecto de la
rama &lt;em&gt;master&lt;/em&gt; que se encuentra en origin (origin/master) por 1 commit
(el que acabamos de&amp;nbsp;realizar).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="el-colaborador-sube-sus-cambios-a-github"&gt;
&lt;h2&gt;El colaborador sube sus cambios a&amp;nbsp;Github&lt;/h2&gt;
&lt;p&gt;Tenemos que hacer un push para llevar los cambios locales de
&lt;em&gt;bioingenieroDiegol&lt;/em&gt; al remoto. No hay nada que comitear (ni nada que
festejar, aún). Vamos a hacerle caso a Git, vean lo que sucede tras un
&lt;em&gt;git push origin master&lt;/em&gt; hecho por &lt;em&gt;bioingenieroDiegol&lt;/em&gt; (no se confundan
con el prompt de esa consola, que es &lt;em&gt;manjaro-efe%&lt;/em&gt;):&lt;/p&gt;
&lt;img alt="consola mostrando el git push desde bioingenieroDiegol" class="align-center" src="https://farm9.staticflickr.com/8671/15668755234_04cf679b86_o.png" /&gt;
&lt;p&gt;Ningún error, todo bien (vean que tuve que responder con el username y
password del colaborador &lt;em&gt;bioingenieroDiegol&lt;/em&gt;, bah, el password no se&amp;nbsp;ve&amp;#8230;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="el-dueno-original-del-repositorio-actualiza-su-repo-local"&gt;
&lt;h2&gt;El dueño original del repositorio actualiza su repo&amp;nbsp;local&lt;/h2&gt;
&lt;p&gt;Finalmente el dueño original del repositorio (yo, &lt;em&gt;eldiegoefe&lt;/em&gt;) quiere
actualizar su repositorio local con los cambios hechos por todos los
contribuyentes (en este caso sólo &lt;em&gt;bioingenieroDiegol&lt;/em&gt;). Para ello
hace un pull desde el&amp;nbsp;remoto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;[eldiegoefe]$&lt;/span&gt; git pull origin master
&lt;span class="go"&gt;remote: Counting objects: 2, done.&lt;/span&gt;
&lt;span class="go"&gt;remote: Compressing objects: 100% (1/1), done.&lt;/span&gt;
&lt;span class="go"&gt;remote: Total 2 (delta 1), reused 2 (delta 1)&lt;/span&gt;
&lt;span class="go"&gt;Unpacking objects: 100% (2/2), done.&lt;/span&gt;
&lt;span class="go"&gt;From https://github.com/eldiegoefe/emacs&lt;/span&gt;
&lt;span class="go"&gt; * branch            master     -&amp;gt; FETCH_HEAD&lt;/span&gt;
&lt;span class="go"&gt;   2c817b6..f94cdfa  master     -&amp;gt; origin/master&lt;/span&gt;
&lt;span class="go"&gt;Updating 2c817b6..f94cdfa&lt;/span&gt;
&lt;span class="go"&gt;Fast-forward&lt;/span&gt;
&lt;span class="go"&gt; archivo-vacio.txt | 0&lt;/span&gt;
&lt;span class="go"&gt; 1 file changed, 0 insertions(+), 0 deletions(-)&lt;/span&gt;
&lt;span class="go"&gt; create mode 100644 archivo-vacio.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;El sistema le indica que se actualizó, que un archivo cambió
(&lt;em&gt;insertions&lt;/em&gt; y &lt;em&gt;deletions&lt;/em&gt; son cambios en el interior de los
archivos, como no hubo ningun cambio entonces quedan en cero). El
método por el cual se hizo la fusión (merge) entre el remoto y el
local fue &lt;em&gt;Fast-forward&lt;/em&gt; y no hubo ningún conflicto.&amp;nbsp;¡Fiesta!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="claves"&gt;
&lt;h2&gt;Claves&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Un repositorio local Git puede estar conectado a uno o más
repositorios&amp;nbsp;remotos.&lt;/p&gt;
&lt;p&gt;Se puede usar el protocolo &lt;span class="caps"&gt;HTTPS&lt;/span&gt; para conectarse al repositorio
remoto (hasta que uno aprenda a lidiar con el protocolo &lt;span class="caps"&gt;SSH&lt;/span&gt;, que
es más&amp;nbsp;seguro).&lt;/p&gt;
&lt;p&gt;Con &lt;strong&gt;git push&lt;/strong&gt; se copian los cambios del repositorio local hacia
el&amp;nbsp;remoto&lt;/p&gt;
&lt;p&gt;Con &lt;strong&gt;git pull&lt;/strong&gt; se copian los cambios desde el repositorio remoto
hacia el repositorio&amp;nbsp;local.&lt;/p&gt;
&lt;p&gt;Con &lt;strong&gt;git clone&lt;/strong&gt; se copia un repositorio remoto para crear un
repositorio local con un &lt;em&gt;remote&lt;/em&gt; automáticamente llamado
&lt;em&gt;origin&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p id="no-carnal"&gt;¡basta de hacer chistes&amp;nbsp;malos!&lt;/p&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="git"></category><category term="control de versiones"></category><category term="tutorial"></category></entry><entry><title>Escritorio cómodo y atajos de teclado</title><link href="https://eldiegoefe.github.io/escritorio-comodo-y-atajos-de-teclado.html" rel="alternate"></link><published>2014-10-08T11:00:00+02:00</published><updated>2014-10-08T11:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-10-08:/escritorio-comodo-y-atajos-de-teclado.html</id><summary type="html">&lt;p&gt;Me cuesta encontrar un modo cómodo de trabajar con Emacs y otros
programas en &lt;span class="caps"&gt;KDE&lt;/span&gt;. Como creo que voy encontrando cosas que me resultan
funcionales, las resumo&amp;nbsp;aca.&lt;/p&gt;
&lt;p&gt;Sirve trabajar con 4 workspaces (areas de trabajo) en &lt;span class="caps"&gt;KDE&lt;/span&gt;. En el
espacio 1 tengo el navegador, en el 2 tengo Emacs …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Me cuesta encontrar un modo cómodo de trabajar con Emacs y otros
programas en &lt;span class="caps"&gt;KDE&lt;/span&gt;. Como creo que voy encontrando cosas que me resultan
funcionales, las resumo&amp;nbsp;aca.&lt;/p&gt;
&lt;p&gt;Sirve trabajar con 4 workspaces (areas de trabajo) en &lt;span class="caps"&gt;KDE&lt;/span&gt;. En el
espacio 1 tengo el navegador, en el 2 tengo Emacs y en el 4 tengo un
terminal. Cambio de espacio con C-7 (espacio 1), C-8 (espacio 2), C-9
(espacio 3) y C-0 (espacio 4). Para mover la ventana de un programa a
un espacio de trabajo lo hago con M-7, M-8, M-9 y M-0 (los fans de
emacs saben que M es Meta, y que eso significa en un teclado
convencional la tecla&amp;nbsp;Alt).&lt;/p&gt;
&lt;p&gt;Para elegir estos atajos de teclado hay que ir a Preferencias del
Sistema / Accesos rápidos y gestos / Accesos rápidos de teclado
globales y elegir en &amp;#8220;Componente de &lt;span class="caps"&gt;KDE&lt;/span&gt;&amp;#8221; la opción &amp;#8220;&lt;span class="caps"&gt;KWIN&lt;/span&gt;&amp;#8221;, allí es
fácil darse cuenta cómo&amp;nbsp;continuar.&lt;/p&gt;
&lt;p&gt;De paso, hay una opción en &lt;span class="caps"&gt;KDE&lt;/span&gt; para que cada espacio de trabajo sea
independiente de los otros, así que pueden tener widgets y fondos de
pantalla diferentes, lo que ayuda a&amp;nbsp;diferenciarlos.&lt;/p&gt;
&lt;div class="section" id="emacs"&gt;
&lt;h2&gt;Emacs&lt;/h2&gt;
&lt;p&gt;En Emacs uso estas cosas que están&amp;nbsp;buenísimas:&lt;/p&gt;
&lt;p&gt;Intercambié la funcionalidad de las letras U y X (estoy en Dvorak) con
estas lineas en el archivo de configuración de&amp;nbsp;emacs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;keyboard-translate&lt;/span&gt; &lt;span class="nv"&gt;?\C-x&lt;/span&gt; &lt;span class="nv"&gt;?\C-u&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;keyboard-translate&lt;/span&gt; &lt;span class="nv"&gt;?\C-u&lt;/span&gt; &lt;span class="nv"&gt;?\C-x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Cambié el keybinding para ir a la linea anterior a C-t, de manera que
queda junto a C-n, que es para ir a la linea&amp;nbsp;siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;global-set-key&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;kbd&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;C-t&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;previous-line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Uso C-a y C-e para ir al principio y final de cada&amp;nbsp;linea.&lt;/p&gt;
&lt;p&gt;Uso C-l para que se centre la ventana alrededor del cursor (muy util
cuando estamos cerca del borde inferior de la&amp;nbsp;pantalla).&lt;/p&gt;
&lt;p&gt;Borro palabras hacia atrás con M-del. Tengo que revisar por qué no
anda C-x del (que es backward-kill-sentence). Da el mensaje &amp;#8220;C-x
deletechar is undefined&amp;#8221;. Se ve que es un problema con la tecla &lt;em&gt;del&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Uso el acorde &lt;strong&gt;jj&lt;/strong&gt; que ejecuta &lt;em&gt;ace-jump-word-mode&lt;/em&gt; que permite
navegar hacia la letra inicial de una palabra de un modo muy veloz (y
entretenido). Tendría que acostumbrarme a usar también&amp;nbsp;estos:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;jk: Jump to a&amp;nbsp;character(ace-jump-char-mode)&lt;/li&gt;
&lt;li&gt;jl: Jump to the beginning of a&amp;nbsp;line(ace-jump-line-mode)&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;JJ&lt;/span&gt;: Jump back to previous&amp;nbsp;buffer(prelude-switch-to-previous-buffer)&lt;/li&gt;
&lt;li&gt;xx: Executed extended&amp;nbsp;command(execute-extended-command)&lt;/li&gt;
&lt;li&gt;yy: Browse the kill&amp;nbsp;ring(browse-kill-ring)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para navegar entre los cambios uso el acorde &lt;strong&gt;uu&lt;/strong&gt; que muestra el
historial como un arbol (&lt;em&gt;undo-tree-visualize&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Para saltar de una ventana a otra uso el habitual C-x o (en realidad
hago C-u o gracias al truco del intercambio entre la x y la u que
mencioné antes), pero ejecuta &lt;em&gt;ace-window&lt;/em&gt; que funciona semejante a
los &lt;em&gt;ace-jumps&lt;/em&gt;. Lo mismo se logra con C-&lt;span class="caps"&gt;TAB&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Para intercambiar ventanas activas sirve C-c s. Es una función de
Prelude y sólo funciona si hay 2 ventanas en&amp;nbsp;pantalla.&lt;/p&gt;
&lt;p&gt;Para aumentar la indentación de una región o bloque uso C-x
&lt;span class="caps"&gt;TAB&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Para borrar un rectángulo, por ejemplo la indentación de un bloque,
pongo la marca y el punto en los extremos de la región y luego C-x
r&amp;nbsp;k.&lt;/p&gt;
&lt;p&gt;Uso &lt;strong&gt;lgrep&lt;/strong&gt; para buscar archivos por contenido. Es interactivo, va
preguntando la fórmula de búsqueda, el tipo de archivo y el
directorio. Projectile tiene también un buscador de contenido dentro
de los archivos de un proyecto, lo tengo que probar: C-c p&amp;nbsp;g&lt;/p&gt;
&lt;p&gt;Recién instalo el paquete workgroups2 que gestiona las sesiones,
incluyendo la posición de las ventanas. Lo descubrí gracias a &lt;a class="reference external" href="http://emacs.stackexchange.com/questions/822/how-to-setup-default-windows-at-startup"&gt;una
pregunta que hice en emacs.stackexchange&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para ejecutar algún cambio de configuración (en .emacs o en custom.el)
puedo marcar la región que contiene el cambio y hacer M-x&amp;nbsp;eval-region.&lt;/p&gt;
&lt;p&gt;Prelude tiene C-x m para iniciar &lt;em&gt;eshell&lt;/em&gt;. Sin embargo no puedo
ejecutar el environment para el blog (. bin/activate desde el
directorio &lt;span class="caps"&gt;ENV&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;Finalmente, para repetir el último comando se usa C-x z (y luego si
desea repetirse nuevamente, basta con apretar la z&amp;nbsp;sola).&lt;/p&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="edicion"></category><category term="workflow"></category><category term="emacs"></category><category term="kde"></category></entry><entry><title>Más locura con Git</title><link href="https://eldiegoefe.github.io/mas-locura-con-git.html" rel="alternate"></link><published>2014-10-08T10:00:00+02:00</published><updated>2014-10-08T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-10-08:/mas-locura-con-git.html</id><summary type="html">&lt;p&gt;Hay un lindo tutorial interactivo para aprender a usar Git en &lt;a class="reference external" href="http://try.github.io/"&gt;este
enlace&lt;/a&gt;, recomendado desde el GitHub de &lt;a class="reference external" href="https://github.com/swcarpentry/site"&gt;Software Carpentry&lt;/a&gt;. Me
gustó también el video &lt;a class="reference external" href="https://www.youtube.com/watch?v=1ffBJ4sVUb4"&gt;Git for ages 4 and up&lt;/a&gt; (no entendí nada la
presentación del expositor, pero el resto&amp;nbsp;sí).&lt;/p&gt;
&lt;p&gt;Al sitio interactivo llegué desde &lt;a class="reference external" href="http://astropy.readthedocs.org/en/latest/"&gt;Astropy&lt;/a&gt;, en particular …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hay un lindo tutorial interactivo para aprender a usar Git en &lt;a class="reference external" href="http://try.github.io/"&gt;este
enlace&lt;/a&gt;, recomendado desde el GitHub de &lt;a class="reference external" href="https://github.com/swcarpentry/site"&gt;Software Carpentry&lt;/a&gt;. Me
gustó también el video &lt;a class="reference external" href="https://www.youtube.com/watch?v=1ffBJ4sVUb4"&gt;Git for ages 4 and up&lt;/a&gt; (no entendí nada la
presentación del expositor, pero el resto&amp;nbsp;sí).&lt;/p&gt;
&lt;p&gt;Al sitio interactivo llegué desde &lt;a class="reference external" href="http://astropy.readthedocs.org/en/latest/"&gt;Astropy&lt;/a&gt;, en particular de la
página &lt;a class="reference external" href="http://astropy.readthedocs.org/en/latest/development/workflow/development_workflow.html"&gt;How to make a code contribution&lt;/a&gt;, que parece que vale la pena
leer, porque explica el workflow que utilizan, cosa que no había
encontrado hasta ahora (que te expliquen cómo es la secuencia de
acciones de un trabajo, su lógica, los trucos, puede ahorrar muchos
problemas asociados con la&amp;nbsp;inexperiencia).&lt;/p&gt;
&lt;p&gt;El tutorial interactivo va mostrando &lt;em&gt;hints&lt;/em&gt;, de los cuales quiero&amp;nbsp;acordame:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;add all&lt;/strong&gt;: You can also type &lt;em&gt;git add -A .&lt;/em&gt; where the dot
stands for the current directory, so everything in and beneath it
is added. The &lt;em&gt;-A&lt;/em&gt; ensures even file deletions are&amp;nbsp;included.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;git reset&lt;/strong&gt;: You can use &lt;em&gt;git reset &amp;lt;filename&amp;gt;&lt;/em&gt; to remove a
file or files from the staging&amp;nbsp;area.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;More useful logs&lt;/strong&gt;: Use git log &amp;#8212;summary to see more
information for each commit. You can see where new files were added
for the first time or where files were deleted. It&amp;#8217;s a good overview
of what&amp;#8217;s going on in the&amp;nbsp;project.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Branching&lt;/strong&gt;. Branches are what naturally happens when you want to work
on multiple features at the same time. You wouldn&amp;#8217;t want to end up
with a master branch which has Feature A half done and Feature B
half done. Rather you&amp;#8217;d separate the code base into two &amp;#8220;snapshots&amp;#8221;
(branches) and work on and commit to them separately. As soon as one
was ready, you might merge this branch back into the master branch
and push it to the remote&amp;nbsp;server.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Tengo dudas con esto: si luego de hacer un pull desde un repositorio
remoto, hay cambios respecto de lo que tenía en el repositorio local,
¿qué me dice Git si hago &lt;em&gt;git status&lt;/em&gt;?&lt;/p&gt;
&lt;p&gt;Más&amp;nbsp;material:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://nbviewer.ipython.org/github/fperez/reprosw/blob/master/Version%20Control.ipynb"&gt;Version control for fun and&amp;nbsp;profit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://nbviewer.ipython.org/github/jrjohansson/scientific-python-lectures/blob/master/Lecture-7-Revision-Control-Software.ipynb"&gt;Revision control&amp;nbsp;software&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://nyuccl.org/pages/GitTutorial/"&gt;Git for&amp;nbsp;Scientists&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Cosas interesantes del artículo de Fernando&amp;nbsp;Perez:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Se pueden generar alias para ejecutar comandos largos con nombres
cortos. Por ejemplo &lt;em&gt;git config &amp;#8212;global alias.slog
&amp;#8220;log &amp;#8212;oneline &amp;#8212;topo-order &amp;#8212;graph&amp;#8221;&lt;/em&gt; hace que luego funcione &lt;em&gt;git slog&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hay un &lt;a class="reference external" href="https://www.youtube.com/watch?v=Dv8I_kfrFWw"&gt;video de Jessica Kerr&lt;/a&gt; en el cual hace algunos buenos&amp;nbsp;comentarios:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Recomienda tener un gestor gráfico para ver el arbol de un
repositorio, y usarlo antes de comitear para anticipar cómo debería
verse el arbol, y entonces luego de comitear verificar en el grico
que lo realizado coincide con lo que queríamos hacer. Quizás esto lo
pueda&amp;nbsp;hacer&lt;/li&gt;
&lt;li&gt;origin/master es un puntero (como &lt;span class="caps"&gt;HEAD&lt;/span&gt;) que apunta hacia donde
estaba el &lt;span class="caps"&gt;HEAD&lt;/span&gt; en origin la última vez que lo&amp;nbsp;visitamos.&lt;/li&gt;
&lt;li&gt;No conviene usar &lt;em&gt;pull&lt;/em&gt; porque es un &lt;em&gt;fetch&lt;/em&gt; + &lt;em&gt;merge&lt;/em&gt;. Hacerlo esto
último por separado brinda mayor control, permite ver cuál es el
merge que&amp;nbsp;hacemos.&lt;/li&gt;
&lt;li&gt;El &lt;em&gt;push&lt;/em&gt; hace lo mismo que el &lt;em&gt;pull&lt;/em&gt; pero en dirección opuesta
(desde nuestro repo hacia el remoto). Como tiene que hacer un merge,
sólo lo permitirá si puede hacer un &lt;em&gt;fast-forward&lt;/em&gt; en el remoto,
esto es decir: si no hubo otro usuario que hiciera cambios en el
remoto desde la última vez que sincronizamos nuestro repo local con
el remoto. Por eso, si hubiese habido algún cambio en el remoto,
deberá hacerse un pull (o un fetch+merge) antes del&amp;nbsp;push.&lt;/li&gt;
&lt;/ul&gt;
</content><category term="tecnicismos"></category><category term="git"></category><category term="control de versiones"></category><category term="cheat sheet"></category></entry><entry><title>Tutorial sobre control de versiones (parte 2)</title><link href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-2.html" rel="alternate"></link><published>2014-10-08T10:00:00+02:00</published><updated>2014-10-08T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-10-08:/tutorial-sobre-control-de-versiones-parte-2.html</id><summary type="html">&lt;div class="section" id="indice-del-tutorial"&gt;
&lt;h2&gt;Indice del&amp;nbsp;Tutorial&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-1.html"&gt;Parte 1&lt;/a&gt;. Cómo armar un repositorio&amp;nbsp;local&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-2.html"&gt;Parte 2&lt;/a&gt;. Cómo subir el repositorio local al&amp;nbsp;remoto&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-3.html"&gt;Parte 3&lt;/a&gt;. Cómo colaborar en un mismo repositorio&amp;nbsp;remoto&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-4.html"&gt;Parte 4&lt;/a&gt;. Cómo resolver&amp;nbsp;conflictos&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para ver las versiones (en inglés) en las cuales se basa este
tutorial, podés visitar &lt;a class="reference external" href="http://software-carpentry.org/v5/novice/git/"&gt;la página …&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="indice-del-tutorial"&gt;
&lt;h2&gt;Indice del&amp;nbsp;Tutorial&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-1.html"&gt;Parte 1&lt;/a&gt;. Cómo armar un repositorio&amp;nbsp;local&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-2.html"&gt;Parte 2&lt;/a&gt;. Cómo subir el repositorio local al&amp;nbsp;remoto&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-3.html"&gt;Parte 3&lt;/a&gt;. Cómo colaborar en un mismo repositorio&amp;nbsp;remoto&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-4.html"&gt;Parte 4&lt;/a&gt;. Cómo resolver&amp;nbsp;conflictos&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para ver las versiones (en inglés) en las cuales se basa este
tutorial, podés visitar &lt;a class="reference external" href="http://software-carpentry.org/v5/novice/git/"&gt;la página de Software&amp;nbsp;Carpentry&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="armar-un-proyecto-repositorio-en-github"&gt;
&lt;h2&gt;Armar un proyecto (repositorio) en&amp;nbsp;GitHub&lt;/h2&gt;
&lt;p&gt;Para subir el repositorio local a GitHub es indispensable tener una
cuenta allí (que es gratis, así que a relajarse y disfrutar). Es
bastante intuitivo el modo de crear un repositorio. Pero pongo un par
de imágenes, a modo de&amp;nbsp;muestra.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://farm8.staticflickr.com/7500/16103637368_e5b482f6aa_o.png"&gt;&lt;img alt="pantalla principal de github (siendo un usuario)" src="https://farm8.staticflickr.com/7500/16103637368_e5b482f6aa_o.png" style="width: 100.0%;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;En la pantalla anterior hay que hacer click sobre el botón verde que
dice &amp;#8220;&lt;em&gt;+ New repository&lt;/em&gt;&amp;#8220;, que nos deposita en la imagen de&amp;nbsp;abajo.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://farm9.staticflickr.com/8661/15668754054_413938acf0_o.png"&gt;&lt;img alt="formulario para ingresar los datos del nuevo repositorio" src="https://farm9.staticflickr.com/8661/15668754054_413938acf0_o.png" style="width: 75.0%;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Solamente ponemos el nombre y la descripción del repositorio. Los
repositorios privados son pagos, así que por lo general uno elige
&amp;#8220;&lt;em&gt;Public&lt;/em&gt;&amp;#8220;. No hace falta inicializarlo con un &lt;em&gt;readme&lt;/em&gt;, ni agregar un
&lt;em&gt;.gitignore&lt;/em&gt;, ni seleccionar una licencia. Basta con apretar el botón
verde de &amp;#8220;&lt;em&gt;Create repository&lt;/em&gt;&amp;#8221; y chan, ya tenemos repositorio sin
tener que acercarnos a la&amp;nbsp;farmacia.&lt;/p&gt;
&lt;p&gt;La imagen que sigue es para mostrar que la dirección del nuevo
repositorio, aún vacío, pero listo para clonarse sin parecerse a la
oveja Dolly, se encuentra sobre el panel de la izquierda, donde dice
&amp;#8220;&lt;span class="caps"&gt;HTTPS&lt;/span&gt; clone &lt;span class="caps"&gt;URL&lt;/span&gt;&amp;#8221;. Copiamos de ahí esa dirección y nos dirigimos con
presteza y gráciles movimientos al terminal, que debería estar ubicado
(controlar con pwd) en el directorio de nuestro repositorio
local. Escribimos (en mi caso estoy trabajando sobre un nuevo
repositorio para alojar la configuración de mi&amp;nbsp;Emacs):&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://farm8.staticflickr.com/7515/16290337352_9a8d0da905_o.png"&gt;&lt;img alt="de aqui se saca la url para la clonación" src="https://farm8.staticflickr.com/7515/16290337352_9a8d0da905_o.png" style="width: 75.0%;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="setear-el-repositorio-remoto-desde-nuestro-repo-local"&gt;
&lt;h2&gt;Setear el repositorio remoto desde nuestro repo&amp;nbsp;local&lt;/h2&gt;
&lt;p&gt;En la siguiente orden le estamos diciendo a Git que agregue como
repositorio remoto la &lt;span class="caps"&gt;URL&lt;/span&gt; que le pasamos, y además a esa dirección le
asignamos el alias &amp;#8220;&lt;em&gt;origin&lt;/em&gt;&amp;#8221; (se suele utilizar &lt;em&gt;origin&lt;/em&gt; por
convención, pero podríamos haberlo llamado
&amp;#8220;&lt;em&gt;farodelfindelmundo&lt;/em&gt;&amp;#8220;). Podemos chequearlo con &lt;em&gt;git remote -v&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git remote add origin https://github.com/eldiegoefe/emacs.git
&lt;span class="gp"&gt;$&lt;/span&gt; git remote -v
&lt;span class="go"&gt;origin  https://github.com/eldiegoefe/emacs.git (fetch)&lt;/span&gt;
&lt;span class="go"&gt;origin  https://github.com/eldiegoefe/emacs.git (push)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="subir-repo-local-al-remoto"&gt;
&lt;h2&gt;Subir repo local al&amp;nbsp;remoto&lt;/h2&gt;
&lt;p&gt;Ahora es superfacil subir los archivos de nuestro repositorio local
hacia el repositorio remoto (en&amp;nbsp;github.com):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git push origin master
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Cuando te dicen &amp;#8220;master&amp;#8221; es porque sos grosso, sabelo. Además
&amp;#8220;&lt;em&gt;master&lt;/em&gt;&amp;#8221; es la única rama (branch) que por el momento tenemos en el
recientemente creado repositorio remoto y vacío (se me cae un
lagrimón). También es la única rama que tenemos en el repo local (lo
podemos chequear con &lt;em&gt;git branch&lt;/em&gt;). Al ejecutar el &lt;em&gt;git push&lt;/em&gt; el
sistema les va a pedir primero el nombre de usuario y luego la
contraseña (que se hicieron en github, porque hacia allí está subiendo
los&amp;nbsp;archivos).&lt;/p&gt;
&lt;div class="section" id="problemas"&gt;
&lt;h3&gt;¿Problemas?&lt;/h3&gt;
&lt;p&gt;Si acaso diera un error, como me sucedió en el ejemplo que les estoy
relatando, es porque el repositorio remoto en vez de estar vacío tiene
algún contenido. Debemos entonces, antes de subir cosas, bajar ese
contenido que no tenemos en el repositorio local (en mi caso el
archivo con la licencia), con la orden &amp;#8220;&lt;em&gt;git pull&lt;/em&gt;&amp;#8221; (&lt;em&gt;git push&lt;/em&gt; empuja
desde el local hacia el remoto, &lt;em&gt;git pull&lt;/em&gt; tira desde el remoto hacia
el&amp;nbsp;local):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git pull origin master
&lt;span class="go"&gt;warning: no common commits&lt;/span&gt;
&lt;span class="go"&gt;remote: Counting objects: 3, done.&lt;/span&gt;
&lt;span class="go"&gt;remote: Compressing objects: 100% (2/2), done.&lt;/span&gt;
&lt;span class="go"&gt;remote: Total 3 (delta 0), reused 0 (delta 0)&lt;/span&gt;
&lt;span class="go"&gt;Unpacking objects: 100% (3/3), done.&lt;/span&gt;
&lt;span class="go"&gt;From https://github.com/eldiegoefe/emacs&lt;/span&gt;
&lt;span class="go"&gt; * branch            master     -&amp;gt; FETCH_HEAD&lt;/span&gt;
&lt;span class="go"&gt; * [new branch]      master     -&amp;gt; origin/master&lt;/span&gt;
&lt;span class="go"&gt;Merge made by the &amp;#39;recursive&amp;#39; strategy.&lt;/span&gt;
&lt;span class="go"&gt; LICENSE | 675 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&lt;/span&gt;
&lt;span class="go"&gt; 1 file changed, 675 insertions(+)&lt;/span&gt;
&lt;span class="go"&gt; create mode 100644 LICENSE&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Cuando se agregan cosas (al repo local) hay que comitearlas, como de
costumbre. Por eso, al ejecutar el comando anterior el sistema pide un
mensaje de &amp;#8220;&lt;em&gt;commit&lt;/em&gt;&amp;#8221; y luego da el resultado que muestro (por ahora
es un jeroglífico, pero tiene sentido, eh). En mi caso, el archivo
&lt;span class="caps"&gt;LICENCE&lt;/span&gt; que sólo estaba en el remoto, ahora está también en el local,
lo cual puede verse&amp;nbsp;haciendo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ls
&lt;span class="go"&gt;custom.el  LICENSE  preload&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Podemos chequear el estado del repo&amp;nbsp;local:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git status
&lt;span class="gp"&gt;#&lt;/span&gt; On branch master
&lt;span class="go"&gt;nothing to commit, working directory clean&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="no-problem"&gt;
&lt;h3&gt;No&amp;nbsp;problem&lt;/h3&gt;
&lt;p&gt;Ahora sí volvemos a intentar subir los archivos que faltan hacia
origin (el repo remoto, solo, triste y&amp;nbsp;abandonado):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git push origin master
&lt;span class="go"&gt;Counting objects: 12, done.&lt;/span&gt;
&lt;span class="go"&gt;Delta compression using up to 4 threads.&lt;/span&gt;
&lt;span class="go"&gt;Compressing objects: 100% (8/8), done.&lt;/span&gt;
&lt;span class="go"&gt;Writing objects: 100% (11/11), 2.88 KiB | 0 bytes/s, done.&lt;/span&gt;
&lt;span class="go"&gt;Total 11 (delta 2), reused 0 (delta 0)&lt;/span&gt;
&lt;span class="go"&gt;To https://github.com/eldiegoefe/emacs.git&lt;/span&gt;
&lt;span class="go"&gt;   e23c676..2c817b6  master -&amp;gt; master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;Joyines&amp;#8221;, diría el Tano. Si ahora hiciésemos un pull desde el remoto,
no debería pasar nada porque ambos repos son iguales.&amp;nbsp;Veamos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;git pull origin master&lt;/span&gt;
&lt;span class="go"&gt;From https://github.com/eldiegoefe/emacs&lt;/span&gt;
&lt;span class="go"&gt; * branch            master     -&amp;gt; FETCH_HEAD&lt;/span&gt;
&lt;span class="go"&gt;Already up-to-date.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;En cambio, si alguien actualizó el remoto con algún archivo nuevo, o
modificó los existentes, al hacer el pull se incorporarían al repo
local esos cambios (lo cual siempre hay que hacer antes de hacer un
push hacia el&amp;nbsp;remoto).&lt;/p&gt;
&lt;pre class="literal-block"&gt;
La bandera '-u'

Es común encontrar que git push se acompañe de la bandera
'-u'. Vamos a dejar eso para después, pero es casi seguro que se
usa para fijar origen y destino, de manera que un git push
desnudo, funcionará después con las ramas origen y destino que
acompañaban al -u (que es algo de --upstream nosecuanto). Pero
estoy tocando de oido, mejor veamos más adelante.
&lt;/pre&gt;
&lt;p&gt;Nos vemos en la &lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-3.html"&gt;parte 3&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="git"></category><category term="control de versiones"></category><category term="tutorial"></category></entry><entry><title>Emacs y restructuredText</title><link href="https://eldiegoefe.github.io/emacs-y-restructuredtext.html" rel="alternate"></link><published>2014-10-07T10:00:00+02:00</published><updated>2014-10-07T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-10-07:/emacs-y-restructuredtext.html</id><summary type="html">&lt;p&gt;Estuve escribiendo algunas entradas para el blog y encontré algunas
cosas que vale la pena recordar, que quedan anotadas&amp;nbsp;aca:&lt;/p&gt;
&lt;p&gt;El modo abbrev tendría que desactivarlo globalmente porque cada vez
que escribo la palabra &amp;#8220;&lt;em&gt;con&lt;/em&gt;&amp;#8221; (en modo restructuredText) y hago un
espacio me lo expande a un texto que no …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Estuve escribiendo algunas entradas para el blog y encontré algunas
cosas que vale la pena recordar, que quedan anotadas&amp;nbsp;aca:&lt;/p&gt;
&lt;p&gt;El modo abbrev tendría que desactivarlo globalmente porque cada vez
que escribo la palabra &amp;#8220;&lt;em&gt;con&lt;/em&gt;&amp;#8221; (en modo restructuredText) y hago un
espacio me lo expande a un texto que no deseo (content&amp;#8230;). Se
desactiva con &lt;em&gt;M-x abbrev-mode&lt;/em&gt;. Mejor aún, encontré cómo editar la
lista de abreviaturas. Es así: &lt;em&gt;M-x list-abbrevs&lt;/em&gt; y se abre un buffer
con las abreviaturas, que se puede editar. Ver de paso &amp;#8220;&lt;a class="reference external" href="http://ergoemacs.org/emacs/emacs_abbrev_mode.html"&gt;Using Emacs
Abbrev Mode for Abbreviation&lt;/a&gt; para un facil tutorial sobre el uso
elegante de&amp;nbsp;abbrev-mode.&lt;/p&gt;
&lt;p&gt;Para seleccionar un rectángulo hay que poner la marca (con C-&lt;span class="caps"&gt;SPC&lt;/span&gt;) en
un extremo del mismo y el punto (es decir el cursor) en el otro
extremo. Así, para borrar ese rectángulo se usa &lt;em&gt;kill-rectangle&lt;/em&gt; (C-x
r&amp;nbsp;k).&lt;/p&gt;
&lt;p&gt;Para indentar un párrafo, se lo selecciona y luego se aprieta C-x
&lt;span class="caps"&gt;TAB&lt;/span&gt;. Esto sube la indentación en uno. Se puede repetir C-x &lt;span class="caps"&gt;TAB&lt;/span&gt; (aunque
parezca que no hay región&amp;nbsp;seleccionada).&lt;/p&gt;
&lt;p&gt;Agregué dos nuevos snippets para escribir en restructuredtext.
Los copio&amp;nbsp;debajo.&lt;/p&gt;
&lt;div class="section" id="links"&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
# -*- mode: snippet;
# name: link
# key: lk
# --
\`${1:texto del link}\`_
.. _$1: ${2:path}
$0
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="imagenes"&gt;
&lt;h2&gt;Imágenes&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
# -*- mode: snippet;
# name: imagen
# key: im
# expand-env: ((yas-indent-line 'fixed))
# --

.. image:: ${1:path}
   :scale: ${2:100}%
   :width: ${3:100}%
   :align: ${4:$$(yas-choose-value '(&amp;quot;right&amp;quot; &amp;quot;center&amp;quot; &amp;quot;left&amp;quot;))}
   :alt: $5

$0
&lt;/pre&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="emacs"></category><category term="restructuredtext"></category><category term="keybindings"></category></entry><entry><title>Tutorial sobre control de versiones (parte 1)</title><link href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-1.html" rel="alternate"></link><published>2014-10-06T10:00:00+02:00</published><updated>2014-10-06T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-10-06:/tutorial-sobre-control-de-versiones-parte-1.html</id><summary type="html">&lt;p&gt;En el sitio de &lt;a class="reference external" href="http://software-carpentry.org/"&gt;Software Carpentry&lt;/a&gt; hay un buen tutorial sobre el uso
de sistemas de control de versiones. Estos apuntes son prácticamente
la traducción de esas&amp;nbsp;instrucciones.&lt;/p&gt;
&lt;div class="section" id="indice-del-tutorial"&gt;
&lt;h2&gt;Indice del&amp;nbsp;Tutorial&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-1.html"&gt;Parte 1&lt;/a&gt;. Cómo armar un repositorio&amp;nbsp;local&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-2.html"&gt;Parte 2&lt;/a&gt;. Cómo subir el repositorio local al&amp;nbsp;remoto&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-3.html"&gt;Parte 3&lt;/a&gt;. Cómo …&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;En el sitio de &lt;a class="reference external" href="http://software-carpentry.org/"&gt;Software Carpentry&lt;/a&gt; hay un buen tutorial sobre el uso
de sistemas de control de versiones. Estos apuntes son prácticamente
la traducción de esas&amp;nbsp;instrucciones.&lt;/p&gt;
&lt;div class="section" id="indice-del-tutorial"&gt;
&lt;h2&gt;Indice del&amp;nbsp;Tutorial&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-1.html"&gt;Parte 1&lt;/a&gt;. Cómo armar un repositorio&amp;nbsp;local&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-2.html"&gt;Parte 2&lt;/a&gt;. Cómo subir el repositorio local al&amp;nbsp;remoto&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-3.html"&gt;Parte 3&lt;/a&gt;. Cómo colaborar en un mismo repositorio&amp;nbsp;remoto&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-4.html"&gt;Parte 4&lt;/a&gt;. Cómo resolver&amp;nbsp;conflictos&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para ver las versiones (en inglés) en las cuales se basa este
tutorial, podés visitar &lt;a class="reference external" href="http://software-carpentry.org/v5/novice/git/"&gt;la página de Software&amp;nbsp;Carpentry&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="configuracion"&gt;
&lt;h2&gt;Configuración&lt;/h2&gt;
&lt;p&gt;La primera vez que se usa Git en una máquina hay que configurar al
menos el nombre del usuario y su email. También puede elegirse el
editor por defecto. Son comandos que se ejecutan una sola vez. Por&amp;nbsp;ejemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;-global&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Vlad Dracula&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;-global&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;vlad@tran.sylvan.ia&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;-global&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ui&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;auto&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;-global&lt;/span&gt; &lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;editor&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;emacs&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;La tercer opcion es para que los mensajes con los cuales responde Git
en el terminal estén coloreados. La cláusula &amp;#8220;&amp;#8212;global&amp;#8221; indica que
esta configuración no se limita a un proyecto particular, sino que
será utilizado en todos los proyectos (repositorios) de esa&amp;nbsp;computadora.&lt;/p&gt;
&lt;p&gt;Para verificar el nombre de usuario se usa &lt;em&gt;git config
user.name&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="inicializacion"&gt;
&lt;h2&gt;Inicialización&lt;/h2&gt;
&lt;p&gt;Se puede comenzar a trabajar con un proyecto usando el siguiente
comando desde el subdirectorio en el cual se alojarán los archivos del&amp;nbsp;proyecto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;De esta manera se crea un subdirectorio oculto (.git) donde se irá
alojando todo el historial de archivos, en todas sus versiones, a
medida que se vayan&amp;nbsp;produciendo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="agregar-un-archivo-al-proyecto"&gt;
&lt;h2&gt;Agregar un archivo al&amp;nbsp;proyecto&lt;/h2&gt;
&lt;p&gt;Creamos un archivo de texto con cualquier editor (no necesariamente el
elegido en la configuración) y lo almacenamos en el directorio del
proyecto. Por ejemplo una canción de La Vela Puerca, en el archivo&amp;nbsp;va-a-escampar.txt:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Va a escampar

Hoy asume lo que venga
sea para bien, o todo mal.
y aunque pierda lo que tenga
se va a morder para aguantar
&lt;/pre&gt;
&lt;p&gt;Si hacemos &lt;em&gt;&amp;#8220;git status&amp;#8221;&lt;/em&gt; el sistema nos responde que reconoce la
existencia de un nuevo archivo en el proyecto, que todavía el sistema
de control de versiones no&amp;nbsp;incorporó.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git status
&lt;span class="gp"&gt;#&lt;/span&gt; On branch master
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt; Initial commit
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt; Untracked files:
&lt;span class="gp"&gt;#&lt;/span&gt;   &lt;span class="o"&gt;(&lt;/span&gt;use &lt;span class="s2"&gt;&amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot;&lt;/span&gt; to include in what will be committed&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;    va-a-escampar.txt
&lt;span class="go"&gt;nothing added to commit but untracked files present (use &amp;quot;git add&amp;quot; to track)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para agregar el archivo al proyecto se&amp;nbsp;ejecuta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git add va-a-escampar.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Y se puede pedir el nuevo informe de situación&amp;nbsp;con:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git status
&lt;span class="gp"&gt;#&lt;/span&gt; On branch master
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt; Initial commit
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt; Changes to be committed:
&lt;span class="gp"&gt;#&lt;/span&gt;   &lt;span class="o"&gt;(&lt;/span&gt;use &lt;span class="s2"&gt;&amp;quot;git rm --cached &amp;lt;file&amp;gt;...&amp;quot;&lt;/span&gt; to unstage&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;    new file:   va-a-escampar.txt
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="comitear-es-un-verbo-muy-extrano"&gt;
&lt;h2&gt;Comitear es un verbo muy&amp;nbsp;extraño&lt;/h2&gt;
&lt;p&gt;Ahora Git ya sabe que debe ir registrando la evolución del archivo
va-a-escampar.txt, pero todavía no ha grabado ninguna información
sobre este archivo en su base de datos (y si ya hubiese información de
antes, aún no habría guardado los cambios realizados desde el último
commit). En inglés, grabar el estado actual de uno o más archivos es
hacer un &amp;#8220;commit&amp;#8221;. En castellano commit puede traducirse como cometer,
hacer, encomendar, perpetrar&amp;#8230; Ninguna de las cuales sirve para
describir lo que sucede, así que hablaremos de&amp;nbsp;&amp;#8220;comitear&amp;#8221;.&lt;/p&gt;
&lt;p&gt;Para comitear el estado actual del archivo se ejecuta la orden &lt;em&gt;git
commit -m &amp;#8220;mensaje personal&amp;#8221;&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git commit -m &lt;span class="s2"&gt;&amp;quot;Empezando a transcribir la letra de La Vela&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;[master (root-commit) 38b86f5] Empezando a transcribir la letra de La Vela&lt;/span&gt;
&lt;span class="go"&gt;1 file changed, 6 insertions(+)&lt;/span&gt;
&lt;span class="go"&gt;create mode 100644 va-a-escampar.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Git guarda entonces un copia permanente de todos los archivos que
están en la base de datos (los que fueron agregados con &amp;#8220;git add&amp;#8221;)
dentro del directorio oculto .git. Esta copia permanente es llamada
una &lt;em&gt;revisión&lt;/em&gt;, y su identificador en el ejemplo fue&amp;nbsp;38b86f5.&lt;/p&gt;
&lt;p&gt;De omitir el mensaje en el comando &lt;em&gt;git commit&lt;/em&gt; (si no
hubiese aparecido -m &amp;#8220;mensaje&amp;#8221;), se hubiese abierto el editor
configurado al principio, para poder escribir el&amp;nbsp;mensaje.&lt;/p&gt;
&lt;p&gt;Volvemos a ver la situación actual del proyecto con &amp;#8220;git status&amp;#8221; y con
&amp;#8220;git log&amp;#8221; podemos ver el historial de cambios (en orden cronológico
inverso), el cual incluye el identificador completo de la revisión, el
autor, la fecha y el mensaje de Git al responder al&amp;nbsp;commit:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git status
&lt;span class="gp"&gt;#&lt;/span&gt; On branch master
&lt;span class="go"&gt;nothing to commit, working directory clean&lt;/span&gt;

&lt;span class="gp"&gt;$&lt;/span&gt; git log
&lt;span class="go"&gt;commit 38b86f5625453732e442c127f1d4678ec8550a12&lt;/span&gt;
&lt;span class="go"&gt;Author: eldiegoefe &amp;lt;eldiegoefe@gmail.com&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;Date:   Mon Oct 6 15:35:07 2014 -0300&lt;/span&gt;

&lt;span class="go"&gt;   Empezando a transcribir la letra de La Vela&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="cambios-o-agregados-en-un-archivo"&gt;
&lt;h2&gt;Cambios (o agregados) en un&amp;nbsp;archivo&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;¿Dónde se guardan los&amp;nbsp;cambios?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;En el directorio del proyecto sigue habiendo un solo archivo. Toda
la información extra se almacena en el subdirectorio oculto
&lt;em&gt;.git&lt;/em&gt;, de modo que el sistema de archivos se ve limpio y se evita
la posibilidad de borrar accidentalmente cosas (como versiones
viejas del mismo&amp;nbsp;archivo).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Si agregamos una segunda estrofa al archivo de texto, pasa a verse&amp;nbsp;así:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Va a escampar

Hoy asume lo que venga
sea para bien, o todo mal.
y aunque pierda lo que tenga
se va a morder para aguantar

Hoy que claro ve las cosas
que ayer no vio, ni va a exigir
Sobre su pena se posa
quiere entender para seguir
&lt;/pre&gt;
&lt;p&gt;Al pedir el status del proyecto&amp;nbsp;veremos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git status
&lt;span class="gp"&gt;#&lt;/span&gt; On branch master
&lt;span class="gp"&gt;#&lt;/span&gt; Changes not staged &lt;span class="k"&gt;for&lt;/span&gt; commit:
&lt;span class="gp"&gt;#&lt;/span&gt;   &lt;span class="o"&gt;(&lt;/span&gt;use &lt;span class="s2"&gt;&amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot;&lt;/span&gt; to update what will be committed&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;   &lt;span class="o"&gt;(&lt;/span&gt;use &lt;span class="s2"&gt;&amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot;&lt;/span&gt; to discard changes in working directory&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;    modified:   va-a-escampar.txt
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="go"&gt;no changes added to commit (use &amp;quot;git add&amp;quot; and/or &amp;quot;git commit -a&amp;quot;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;La última linea es la frase clave: &amp;#8220;no se agregaron cambios al
commit&amp;#8221;. El archivo ha cambiado pero no le hemos dicho aún a Git que
queremos guardar esos cambios (lo haremos con &lt;em&gt;git add&lt;/em&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="comparacion-de-versiones"&gt;
&lt;h2&gt;Comparación de&amp;nbsp;versiones&lt;/h2&gt;
&lt;p&gt;Antes de agregar estos cambios podemos revisar nuestro trabajo usando
&lt;em&gt;git diff&lt;/em&gt;, que nos muestra las diferencias entre el estado actual del
archivo y la última versión&amp;nbsp;comiteada.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git diff
&lt;span class="go"&gt;diff --git a/va-a-escampar.txt b/va-a-escampar.txt&lt;/span&gt;
&lt;span class="go"&gt;index 97ab7b0..db818ec 100644&lt;/span&gt;
&lt;span class="go"&gt;--- a/va-a-escampar.txt&lt;/span&gt;
&lt;span class="go"&gt;+++ b/va-a-escampar.txt&lt;/span&gt;
&lt;span class="go"&gt;@@ -4,3 +4,8 @@ Hoy asume lo que venga&lt;/span&gt;
&lt;span class="go"&gt; sea para bien, o todo mal.&lt;/span&gt;
&lt;span class="go"&gt; y aunque pierda lo que tenga&lt;/span&gt;
&lt;span class="go"&gt; se va a morder para aguantar&lt;/span&gt;
&lt;span class="go"&gt;+&lt;/span&gt;
&lt;span class="go"&gt;+Hoy que claro ve las cosas&lt;/span&gt;
&lt;span class="go"&gt;+que ayer no vio, ni va a exigir&lt;/span&gt;
&lt;span class="go"&gt;+Sobre su pena se posa&lt;/span&gt;
&lt;span class="go"&gt;+quiere entender para seguir&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;La salida es críptica porque es en realidad una serie de comandos para
que un editor de textos pueda reconstruir un archivo a partir del&amp;nbsp;otro.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;La primera linea muestra que Git produce una salida similar al
comando Unix &lt;em&gt;diff&lt;/em&gt; comparando la versión antigua y nueva del&amp;nbsp;archivo.&lt;/li&gt;
&lt;li&gt;La segunda linea muestra la revisión exacta de cada archivo que
está siendo comparado (97ab7b0 y db818ec, etiquetas únicas
generadas por la computadora para esas&amp;nbsp;revisiones).&lt;/li&gt;
&lt;li&gt;La linea restante muestra finalmente las lineas en las que aparecen
las diferencias (marcando con &amp;#8220;+&amp;#8221; las lineas que se&amp;nbsp;agregaron).&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="como-comitear-los-cambios"&gt;
&lt;h2&gt;Cómo comitear los&amp;nbsp;cambios&lt;/h2&gt;
&lt;p&gt;Si hacemos un commit de los&amp;nbsp;cambios:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git commit -m &lt;span class="s2"&gt;&amp;quot;Agregada la segunda estrofa&amp;quot;&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt; On branch master
&lt;span class="gp"&gt;#&lt;/span&gt; Changes not staged &lt;span class="k"&gt;for&lt;/span&gt; commit:
&lt;span class="gp"&gt;#&lt;/span&gt;   &lt;span class="o"&gt;(&lt;/span&gt;use &lt;span class="s2"&gt;&amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot;&lt;/span&gt; to update what will be committed&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;   &lt;span class="o"&gt;(&lt;/span&gt;use &lt;span class="s2"&gt;&amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot;&lt;/span&gt; to discard changes in working directory&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;    modified:   va-a-escampar.txt
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="go"&gt;no changes added to commit (use &amp;quot;git add&amp;quot; and/or &amp;quot;git commit -a&amp;quot;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Ups. No se comitearon los cambios porque faltó agregarlos
antes&lt;/strong&gt;. Entonces,&amp;nbsp;haremos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git add va-a-escampar.txt
&lt;span class="gp"&gt;$&lt;/span&gt; git commit -m &lt;span class="s2"&gt;&amp;quot;Agregada la segunda estrofa&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;[master 6ae57e3] Agregada la segunda estrofa&lt;/span&gt;
&lt;span class="go"&gt;1 file changed, 5 insertions(+)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Git insiste en que agreguemos los archivos al conjunto de los que
querramos comitear antes de realmente hacerlo, porque quizás no
querramos comitear todo junto. Por ejemplo, supongamos que estamos
agregando algunas citas a un documento. Podríamos querer agregarlas
sin comitear el trabajo que estamos haciendo en las conclusiones (que
todavía no terminamos). &lt;em&gt;&lt;span class="caps"&gt;NOTA&lt;/span&gt; &lt;span class="caps"&gt;PERSONAL&lt;/span&gt;: ¡no entiendo! ¿De qué me sirve
agregar los cambios si no los&amp;nbsp;&amp;#8220;comiteo&amp;#8221;?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;RESPUESTA&lt;/span&gt;: Para permitirlo, Git tiene una zona de almacenamiento
especial donde hace un seguimiento de cosas que fueron agregadas al
último conjunto de cambios, pero que aún no fueron comiteadas. Con
&lt;em&gt;git add&lt;/em&gt; se colocan las novedades en este area, y luego &lt;em&gt;git commit&lt;/em&gt;
las copia al espacio de almacenamiento de largo&amp;nbsp;plazo.&lt;/p&gt;
&lt;object class="align-center" data="http://software-carpentry.org/v5/novice/git/img/git-staging-area.svg" style="width: 100.0%;" type="image/svg+xml"&gt;
git staging and commit areas&lt;/object&gt;
&lt;p&gt;Veamos cómo nuestros cambios a un archivo se mueven desde nuestro
editor hacia la &lt;em&gt;staging area&lt;/em&gt; (zona de preparación o también area de
ensayo) y hacia el almacenamiento de largo plazo. Primero, agregamos
otra&amp;nbsp;estrofa:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Llega la batalla
y contra él estalla
algún día va a escampar.
y como sale de esta
quiere la respuesta
sabe que no es escapar.
&lt;/pre&gt;
&lt;p&gt;Y analizamos las diferencias con &lt;em&gt;git diff&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git diff
&lt;span class="go"&gt;diff --git a/va-a-escampar.txt b/va-a-escampar.txt&lt;/span&gt;
&lt;span class="go"&gt;index db818ec..0c33091 100644&lt;/span&gt;
&lt;span class="go"&gt;--- a/va-a-escampar.txt&lt;/span&gt;
&lt;span class="go"&gt;+++ b/va-a-escampar.txt&lt;/span&gt;
&lt;span class="go"&gt;@@ -9,3 +9,10 @@ Hoy que claro ve las cosas&lt;/span&gt;
&lt;span class="go"&gt; que ayer no vio, ni va a exigir&lt;/span&gt;
&lt;span class="go"&gt; Sobre su pena se posa&lt;/span&gt;
&lt;span class="go"&gt; quiere entender para seguir&lt;/span&gt;
&lt;span class="go"&gt;+&lt;/span&gt;
&lt;span class="go"&gt;+Llega la batalla&lt;/span&gt;
&lt;span class="go"&gt;+y contra él estalla&lt;/span&gt;
&lt;span class="go"&gt;+algún día va a escampar.&lt;/span&gt;
&lt;span class="go"&gt;+y como sale de esta&lt;/span&gt;
&lt;span class="go"&gt;+quiere la respuesta&lt;/span&gt;
&lt;span class="go"&gt;+sabe que no es escapar.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Git identifica las diferencias entre el archivo y la versión
intermedia (pero no comiteada), guardada en la &lt;em&gt;staging area&lt;/em&gt; (la voy
a llamar &lt;em&gt;zona de preparación&lt;/em&gt;). Si agregamos estos cambios al
almacenamiento intermedio, veremos lo&amp;nbsp;siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git add va-a-escampar.txt
&lt;span class="gp"&gt;$&lt;/span&gt; git diff
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ahora no hay ninguna salida, porque el archivo actualmente en edición
es igual al que guardamos en la &lt;em&gt;zona de preparación&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Sin embargo, si&amp;nbsp;hacemos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git diff --staged
&lt;span class="go"&gt;diff --git a/va-a-escampar.txt b/va-a-escampar.txt&lt;/span&gt;
&lt;span class="go"&gt;index db818ec..0c33091 100644&lt;/span&gt;
&lt;span class="go"&gt;--- a/va-a-escampar.txt&lt;/span&gt;
&lt;span class="go"&gt;+++ b/va-a-escampar.txt&lt;/span&gt;
&lt;span class="go"&gt;@@ -9,3 +9,10 @@ Hoy que claro ve las cosas&lt;/span&gt;
&lt;span class="go"&gt; que ayer no vio, ni va a exigir&lt;/span&gt;
&lt;span class="go"&gt; Sobre su pena se posa&lt;/span&gt;
&lt;span class="go"&gt; quiere entender para seguir&lt;/span&gt;
&lt;span class="go"&gt;+&lt;/span&gt;
&lt;span class="go"&gt;+Llega la batalla&lt;/span&gt;
&lt;span class="go"&gt;+y contra él estalla&lt;/span&gt;
&lt;span class="go"&gt;+algún día va a escampar.&lt;/span&gt;
&lt;span class="go"&gt;+y como sale de esta&lt;/span&gt;
&lt;span class="go"&gt;+quiere la respuesta&lt;/span&gt;
&lt;span class="go"&gt;+sabe que no es escapar.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ahora nos está mostrando las diferencias entre el último cambio
comiteado (en el almacenamiento de largo plazo) y lo que hay en la
&lt;em&gt;zona de preparación&lt;/em&gt;. Guardemos estos&amp;nbsp;cambios:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git commit -m &lt;span class="s2"&gt;&amp;quot;Tercera estrofa agregada&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;[master 8f1eec1] Tercera estrofa agregada&lt;/span&gt;
&lt;span class="go"&gt; 1 file changed, 7 insertions(+)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vemos cómo&amp;nbsp;quedó:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git status
&lt;span class="gp"&gt;#&lt;/span&gt; On branch master
&lt;span class="go"&gt;nothing to commit, working directory clean&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Y podemos examinar la historia de lo que fue sucediendo hasta&amp;nbsp;ahora:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git log
&lt;span class="go"&gt;commit 8f1eec1836a9ace8a2cbab7e2c3341efa5c3a537&lt;/span&gt;
&lt;span class="go"&gt;Author: eldiegoefe &amp;lt;eldiegoefe@gmail.com&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;Date:   Mon Oct 6 19:55:10 2014 -0300&lt;/span&gt;

&lt;span class="go"&gt;    Tercera estrofa agregada&lt;/span&gt;

&lt;span class="go"&gt;commit 6ae57e3d91a7a526a257df081d83a5b9be4e6d28&lt;/span&gt;
&lt;span class="go"&gt;Author: eldiegoefe &amp;lt;eldiegoefe@gmail.com&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;Date:   Mon Oct 6 16:54:40 2014 -0300&lt;/span&gt;

&lt;span class="go"&gt;    Agregada la segunda estrofa&lt;/span&gt;

&lt;span class="go"&gt;commit 38b86f5625453732e442c127f1d4678ec8550a12&lt;/span&gt;
&lt;span class="go"&gt;Author: eldiegoefe &amp;lt;eldiegoefe@gmail.com&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;Date:   Mon Oct 6 15:35:07 2014 -0300&lt;/span&gt;

&lt;span class="go"&gt;    Empezando a transcribir la letra de La Vela&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Resumiendo, cuando queremos hacer cambios en nuestro repositorio,
primero tenemos que agregar los cambios a la &lt;em&gt;zona de preparación&lt;/em&gt; (con
&lt;em&gt;git add&lt;/em&gt;), y luego &lt;em&gt;comitear&lt;/em&gt; los cambios ensayados al repositorio
(con &lt;em&gt;git commit&lt;/em&gt;).&lt;/p&gt;
&lt;object class="align-center" data="http://software-carpentry.org/v5/novice/git/img/git-committing.svg" style="width: 100.0%;" type="image/svg+xml"&gt;
trabajando con git&lt;/object&gt;
&lt;/div&gt;
&lt;div class="section" id="explorando-el-historial"&gt;
&lt;h2&gt;Explorando el&amp;nbsp;historial&lt;/h2&gt;
&lt;p&gt;Para ver lo que cambiamos, usamos &lt;em&gt;git diff&lt;/em&gt; también, pero para
refiriéndonos a versiones viejas con la notación &lt;span class="caps"&gt;HEAD&lt;/span&gt;~1, &lt;span class="caps"&gt;HEAD&lt;/span&gt;~2,&amp;nbsp;etc:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git diff HEAD~1 va-a-escampar.txt
&lt;span class="go"&gt;diff --git a/va-a-escampar.txt b/va-a-escampar.txt&lt;/span&gt;
&lt;span class="go"&gt;index db818ec..0c33091 100644&lt;/span&gt;
&lt;span class="go"&gt;--- a/va-a-escampar.txt&lt;/span&gt;
&lt;span class="go"&gt;+++ b/va-a-escampar.txt&lt;/span&gt;
&lt;span class="go"&gt;@@ -9,3 +9,10 @@ Hoy que claro ve las cosas&lt;/span&gt;
&lt;span class="go"&gt; que ayer no vio, ni va a exigir&lt;/span&gt;
&lt;span class="go"&gt; Sobre su pena se posa&lt;/span&gt;
&lt;span class="go"&gt; quiere entender para seguir&lt;/span&gt;
&lt;span class="go"&gt;+&lt;/span&gt;
&lt;span class="go"&gt;+Llega la batalla&lt;/span&gt;
&lt;span class="go"&gt;+y contra él estalla&lt;/span&gt;
&lt;span class="go"&gt;+algún día va a escampar.&lt;/span&gt;
&lt;span class="go"&gt;+y como sale de esta&lt;/span&gt;
&lt;span class="go"&gt;+quiere la respuesta&lt;/span&gt;
&lt;span class="go"&gt;+sabe que no es escapar.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git diff HEAD~2 va-a-escampar.txt
&lt;span class="go"&gt;diff --git a/va-a-escampar.txt b/va-a-escampar.txt&lt;/span&gt;
&lt;span class="go"&gt;index 97ab7b0..0c33091 100644&lt;/span&gt;
&lt;span class="go"&gt;--- a/va-a-escampar.txt&lt;/span&gt;
&lt;span class="go"&gt;+++ b/va-a-escampar.txt&lt;/span&gt;
&lt;span class="go"&gt;@@ -4,3 +4,15 @@ Hoy asume lo que venga&lt;/span&gt;
&lt;span class="go"&gt; sea para bien, o todo mal.&lt;/span&gt;
&lt;span class="go"&gt; y aunque pierda lo que tenga&lt;/span&gt;
&lt;span class="go"&gt; se va a morder para aguantar&lt;/span&gt;
&lt;span class="go"&gt;+&lt;/span&gt;
&lt;span class="go"&gt;+Hoy que claro ve las cosas&lt;/span&gt;
&lt;span class="go"&gt;+que ayer no vio, ni va a exigir&lt;/span&gt;
&lt;span class="go"&gt;+Sobre su pena se posa&lt;/span&gt;
&lt;span class="go"&gt;+quiere entender para seguir&lt;/span&gt;
&lt;span class="go"&gt;+&lt;/span&gt;
&lt;span class="go"&gt;+Llega la batalla&lt;/span&gt;
&lt;span class="go"&gt;+y contra él estalla&lt;/span&gt;
&lt;span class="go"&gt;+algún día va a escampar.&lt;/span&gt;
&lt;span class="go"&gt;+y como sale de esta&lt;/span&gt;
&lt;span class="go"&gt;+quiere la respuesta&lt;/span&gt;
&lt;span class="go"&gt;+sabe que no es escapar.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;De esta manera construimos una cadena de revisiones. El extremo más
reciente de la cadena es &lt;span class="caps"&gt;HEAD&lt;/span&gt;; podemos referirnos a revisiones previas
usando la notación ~, de manera que &lt;span class="caps"&gt;HEAD&lt;/span&gt;~1 (se pronuncia &amp;#8220;head menos
uno&amp;#8221;) significa &amp;#8220;la revisión previa&amp;#8221;, mientras que &lt;span class="caps"&gt;HEAD&lt;/span&gt;~123 vuelve 123
revisiones hacia atrás, desde donde nos encontramos en la&amp;nbsp;actualidad.&lt;/p&gt;
&lt;p&gt;También nos podemos referir a las revisiones usando las cadenas largas
de dígitos y letras que Git muestra en los logs. Estos son IDs únicos
para los cambios, &amp;#8220;únicos&amp;#8221; significa realmente únicos: cada cambio a
cualquier conjunto de archivos en cualquier máquina tiene un
identificador de 40 caracteres. Nuestro primer commit nos dio el &lt;span class="caps"&gt;ID&lt;/span&gt;
38b86f5625453732e442c127f1d4678ec8550a12, así que probemos&amp;nbsp;esto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git diff 38b86f5625453732e442c127f1d4678ec8550a12 va-a-escampar.txt
&lt;span class="go"&gt;diff --git a/va-a-escampar.txt b/va-a-escampar.txt&lt;/span&gt;
&lt;span class="go"&gt;index 97ab7b0..0c33091 100644&lt;/span&gt;
&lt;span class="go"&gt;--- a/va-a-escampar.txt&lt;/span&gt;
&lt;span class="go"&gt;+++ b/va-a-escampar.txt&lt;/span&gt;
&lt;span class="go"&gt;@@ -4,3 +4,15 @@ Hoy asume lo que venga&lt;/span&gt;
&lt;span class="go"&gt; sea para bien, o todo mal.&lt;/span&gt;
&lt;span class="go"&gt; y aunque pierda lo que tenga&lt;/span&gt;
&lt;span class="go"&gt; se va a morder para aguantar&lt;/span&gt;
&lt;span class="go"&gt;+&lt;/span&gt;
&lt;span class="go"&gt;+Hoy que claro ve las cosas&lt;/span&gt;
&lt;span class="go"&gt;+que ayer no vio, ni va a exigir&lt;/span&gt;
&lt;span class="go"&gt;+Sobre su pena se posa&lt;/span&gt;
&lt;span class="go"&gt;+quiere entender para seguir&lt;/span&gt;
&lt;span class="go"&gt;+&lt;/span&gt;
&lt;span class="go"&gt;+Llega la batalla&lt;/span&gt;
&lt;span class="go"&gt;+y contra él estalla&lt;/span&gt;
&lt;span class="go"&gt;+algún día va a escampar.&lt;/span&gt;
&lt;span class="go"&gt;+y como sale de esta&lt;/span&gt;
&lt;span class="go"&gt;+quiere la respuesta&lt;/span&gt;
&lt;span class="go"&gt;+sabe que no es escapar.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para no tipear cadenas de 40 números, Git permite usar los primeros de
la cadena, con el mismo&amp;nbsp;resultado:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git diff 38b86f5 va-a-escampar.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="recuperar-versiones-antiguas"&gt;
&lt;h2&gt;Recuperar versiones&amp;nbsp;antiguas&lt;/h2&gt;
&lt;p&gt;De acuerdo: podemos grabar cambios a los archivos y ver qué hemos
cambiado. Pero ¿cómo restauramos versiones viejas de las cosas?
Supongamos que sobreescribimos accidentalmente nuestro archivo
va-a-escampar.txt, que pasa a contener sólo la siguiente&amp;nbsp;linea:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
no va a escampar nada
&lt;/pre&gt;
&lt;p&gt;El comando &lt;em&gt;cat&lt;/em&gt; muestra el contenido del&amp;nbsp;archivo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; cat va-a-escampar.txt
&lt;span class="go"&gt;no va a escampar nada&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Con &lt;em&gt;git status&lt;/em&gt; nos enteramos que el archivo ha cambiado, pero esos
cambios aún no pasaron a la &lt;em&gt;zona de preparación&lt;/em&gt; (&lt;em&gt;staging area&lt;/em&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git status
&lt;span class="gp"&gt;#&lt;/span&gt; On branch master
&lt;span class="gp"&gt;#&lt;/span&gt; Changes not staged &lt;span class="k"&gt;for&lt;/span&gt; commit:
&lt;span class="gp"&gt;#&lt;/span&gt;   &lt;span class="o"&gt;(&lt;/span&gt;use &lt;span class="s2"&gt;&amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot;&lt;/span&gt; to update what will be committed&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;   &lt;span class="o"&gt;(&lt;/span&gt;use &lt;span class="s2"&gt;&amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot;&lt;/span&gt; to discard changes in working directory&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;    modified:   va-a-escampar.txt
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="go"&gt;no changes added to commit (use &amp;quot;git add&amp;quot; and/or &amp;quot;git commit -a&amp;quot;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Podemos volver atrás, dejando las cosas como estaban antes, usando
&lt;em&gt;git checkout&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git checkout HEAD va-a-escampar.txt
&lt;span class="gp"&gt;$&lt;/span&gt; cat va-a-escampar.txt

&lt;span class="go"&gt;Va a escampar&lt;/span&gt;

&lt;span class="go"&gt;Hoy asume lo que venga&lt;/span&gt;
&lt;span class="go"&gt;sea para bien, o todo mal.&lt;/span&gt;
&lt;span class="go"&gt;y aunque pierda lo que tenga&lt;/span&gt;
&lt;span class="go"&gt;se va a morder para aguantar&lt;/span&gt;

&lt;span class="go"&gt;Hoy que claro ve las cosas&lt;/span&gt;
&lt;span class="go"&gt;que ayer no vio, ni va a exigir&lt;/span&gt;
&lt;span class="go"&gt;Sobre su pena se posa&lt;/span&gt;
&lt;span class="go"&gt;quiere entender para seguir&lt;/span&gt;

&lt;span class="go"&gt;Llega la batalla&lt;/span&gt;
&lt;span class="go"&gt;y contra él estalla&lt;/span&gt;
&lt;span class="go"&gt;algún día va a escampar.&lt;/span&gt;
&lt;span class="go"&gt;y como sale de esta&lt;/span&gt;
&lt;span class="go"&gt;quiere la respuesta&lt;/span&gt;
&lt;span class="go"&gt;sabe que no es escapar.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Con &lt;em&gt;git checkout&lt;/em&gt; se recupera una versión anterior de un archivo. En
este caso, le estamos pidiendo a Git que recupere la versión del
archivo guardada en &lt;span class="caps"&gt;HEAD&lt;/span&gt;, que fue la última revisión guardada. Si
quisiéramos ir más atrás podríamos usar un identificador de&amp;nbsp;revisión:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git checkout 38b86f5 va-a-escampar.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Es importante recordar que debemos usar el número de revisión que
identifica el estado del repositorio antes del cambio que estamos
tratando de revertir. Un error común es usar el número de revisión del
commit en el cual hicimos el cambio del cual estamos tratando de
deshacernos. En el ejemplo de abajo queremos recobrar el estado
inmediatamente anterior al commit más reciente (&lt;span class="caps"&gt;HEAD&lt;/span&gt;~1), que es la
revisión 6ae57e3d9 (en la figura -realizada con otro ejemplo-
corresponde a la revision&amp;nbsp;f22b25e):&lt;/p&gt;
&lt;object class="align-center" data="http://software-carpentry.org/v5/novice/git/img/git-checkout.svg" style="width: 90.0%;" type="image/svg+xml"&gt;
retornando a una revisión anterior de un archivo&lt;/object&gt;
&lt;p&gt;El diagrama siguiento ilustra el modo en que puede verse la historia
de un archivo (moviéndose hacia atrás desde &lt;span class="caps"&gt;HEAD&lt;/span&gt;, la versión más
recientemente&amp;nbsp;comiteada):&lt;/p&gt;
&lt;object class="align-center" data="http://software-carpentry.org/v5/novice/git/img/git-when-revisions-updated.svg" style="width: 90.0%;" type="image/svg+xml"&gt;
historia de las revisiones de un archivo&lt;/object&gt;
&lt;pre class="literal-block"&gt;
Simplificando un caso común

Si mirás cuidadosamente la salida de *git status*, vas a ver esta
ayuda:

(use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)

Tal como afirma, *git checkout* sin un identificador de versión
restaura los archivos al estado guardado en HEAD. El guión doble -- es
necesario para separar los nombres de los archivos siendo recuperados
del comando mismo: sin esos guiones, Git trataría de usar el nombre
del archivo como identificador de la revisión a la cual se desea volver.
&lt;/pre&gt;
&lt;p&gt;El hecho de que los archivos puedan recuperarse o revertirse uno por
uno tiende a cambiar el modo en que la gente organiza su trabajo. Si
todo estuviese en un solo gran archivo, entonces es dificil (si no
imposible) deshacer los cambios a la introducción sin también deshacer
los cambios hechos a continuación a la conclusión. Por otra parte, si
la introducción y la conclusión estuviesen en archivos separados,
entonces sería más fácil moverse hacia atrás y hacia adelante en el&amp;nbsp;tiempo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ignorando-cosas"&gt;
&lt;h2&gt;Ignorando&amp;nbsp;cosas&lt;/h2&gt;
&lt;p&gt;Vamos a ver qué hacer con los archivos del mismo directorio que no
queremos incluir en el sistema de control de versiones. Agregamos
algunos archivos vacíos:&amp;nbsp;a.dat&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; mkdir results
&lt;span class="gp"&gt;$&lt;/span&gt; touch a.dat b.dat c.dat results/a.out results/b.out
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Y vemos qué dice&amp;nbsp;Git:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git status
&lt;span class="gp"&gt;#&lt;/span&gt; On branch master
&lt;span class="gp"&gt;#&lt;/span&gt; Untracked files:
&lt;span class="gp"&gt;#&lt;/span&gt;   &lt;span class="o"&gt;(&lt;/span&gt;use &lt;span class="s2"&gt;&amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot;&lt;/span&gt; to include in what will be committed&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;    a.dat
&lt;span class="gp"&gt;#&lt;/span&gt;    b.dat
&lt;span class="gp"&gt;#&lt;/span&gt;    c.dat
&lt;span class="gp"&gt;#&lt;/span&gt;    results/
&lt;span class="go"&gt;nothing added to commit but untracked files present (use &amp;quot;git add&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;to track)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Colocar estos archivos bajo control de versiones sería un desperdicio
de espacio en disco. Peor aún, tenerlos listados nos distraería de los
cambios que realmente importan, de manera que debemos decirle a Git
que los ignore, creando un archivo en el directorio raiz del
proyecto. Al archivo lo llamamos &lt;em&gt;.gitignore&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Dentro de &lt;em&gt;.gitignore&lt;/em&gt; colocamos los patrones para ignorar archivos,
en este caso los archivos que terminen en &lt;em&gt;.dat&lt;/em&gt; y los archivos que se
encuentren en el subdirectorio &lt;em&gt;results&lt;/em&gt; (si cualquiera de estos
archivos hubiese estado siendo parte del control de versiones, Git
continuará considerándolo a pesar de figurar en &lt;em&gt;.gitignore&lt;/em&gt;). Al listar
el contenido de &lt;em&gt;.gitignore&lt;/em&gt; deberíamos obtener&amp;nbsp;esto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; cat .gitignore
&lt;span class="go"&gt;*.dat&lt;/span&gt;
&lt;span class="go"&gt;results/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Si pedimos el status del proyecto, la salida se verá mucho más limpia
que&amp;nbsp;antes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git status
&lt;span class="gp"&gt;#&lt;/span&gt; On branch master
&lt;span class="gp"&gt;#&lt;/span&gt; Untracked files:
&lt;span class="gp"&gt;#&lt;/span&gt;   &lt;span class="o"&gt;(&lt;/span&gt;use &lt;span class="s2"&gt;&amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot;&lt;/span&gt; to include in what will be committed&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;    .gitignore
&lt;span class="go"&gt;nothing added to commit but untracked files present (use &amp;quot;git add&amp;quot; to track)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;La única cosa que Git advierte ahora es el archivo &lt;em&gt;.gitignore&lt;/em&gt;
recientemente creado. Podríamos creer que no querríamos incorporarlo
al control de versiones, pero todos con quienes
compartimos el repositorio probablemente querrían ignorar las mismas
cosas que estamos ignorando nosotros. Así que agregamos y comiteamos
este archivo (oculto, pues empieza con un&amp;nbsp;punto):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git add .gitignore
&lt;span class="gp"&gt;$&lt;/span&gt; git commit -m &lt;span class="s2"&gt;&amp;quot;Agregado del archivo de ignorancias&amp;quot;&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; git status
&lt;span class="gp"&gt;#&lt;/span&gt; On branch master
&lt;span class="go"&gt;nothing to commit, working directory clean&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como un extra, al usar &lt;em&gt;.gitignore&lt;/em&gt; evitamos agregar accidentalmente
archivos que no queremos al&amp;nbsp;repositorio.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git add a.dat
&lt;span class="go"&gt;The following paths are ignored by one of your .gitignore files:&lt;/span&gt;
&lt;span class="go"&gt;a.dat&lt;/span&gt;
&lt;span class="go"&gt;Use -f if you really want to add them.&lt;/span&gt;
&lt;span class="go"&gt;fatal: no files added&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Si queremos realmente pasar por alto los seteos de &lt;em&gt;.gitignore&lt;/em&gt;,
podemos usar &lt;em&gt;git add -f&lt;/em&gt; para forzar a Git a agregar algo. Siempre
podemos ver la situación de los archivos ignorados si&amp;nbsp;quisiéramos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git status --ignored

&lt;span class="gp"&gt;#&lt;/span&gt; On branch master
&lt;span class="gp"&gt;#&lt;/span&gt; Ignored files:
&lt;span class="gp"&gt;#&lt;/span&gt;  &lt;span class="o"&gt;(&lt;/span&gt;use &lt;span class="s2"&gt;&amp;quot;git add -f &amp;lt;file&amp;gt;...&amp;quot;&lt;/span&gt; to include in what will be committed&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;
&lt;span class="gp"&gt;#&lt;/span&gt;        a.dat
&lt;span class="gp"&gt;#&lt;/span&gt;        b.dat
&lt;span class="gp"&gt;#&lt;/span&gt;        c.dat
&lt;span class="gp"&gt;#&lt;/span&gt;        results/

&lt;span class="go"&gt;nothing to commit, working directory clean&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="claves"&gt;
&lt;h2&gt;Claves&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Usar &lt;strong&gt;git config&lt;/strong&gt; para configurar un usuario, dirección de email,
editor y otras preferencias (todas estas cosas son válidas para una&amp;nbsp;máquina)&lt;/p&gt;
&lt;p&gt;Con &lt;strong&gt;git init&lt;/strong&gt; se inicializa un&amp;nbsp;repositorio&lt;/p&gt;
&lt;p&gt;Con &lt;strong&gt;git status&lt;/strong&gt; se muestra la situación de un&amp;nbsp;repositorio&lt;/p&gt;
&lt;p&gt;Los archivos puedes almacenarse en el directorio de trabajo (que los
usuarios ven), la &lt;em&gt;zona de preparación&lt;/em&gt; o &lt;em&gt;staging area&lt;/em&gt; (desde donde
se realizará el próximo commit) y el repositorio local (donde las
instantáneas son almacenadas&amp;nbsp;permanentemente).&lt;/p&gt;
&lt;p&gt;Con &lt;strong&gt;git add&lt;/strong&gt; se agregan archivos a la &lt;em&gt;zona de preparación&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Con &lt;strong&gt;git commit&lt;/strong&gt; se crea una instantanea de la &lt;em&gt;zona de preparación&lt;/em&gt;
en el repositorio&amp;nbsp;local.&lt;/p&gt;
&lt;p&gt;Siempre escribir un mensaje al comitear cambios (con &lt;strong&gt;git commit -m
&amp;#8220;mensaje&amp;#8221;&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;Con &lt;strong&gt;git diff&lt;/strong&gt; se muestran las diferencias entre&amp;nbsp;versiones.&lt;/p&gt;
&lt;p&gt;Con &lt;strong&gt;git checkout&lt;/strong&gt; se recuperan viejas versiones de un&amp;nbsp;archivo.&lt;/p&gt;
&lt;p&gt;El archivo &lt;strong&gt;.gitignore&lt;/strong&gt; indica a Git los archivos a ser ignorados
por el sistema de control de&amp;nbsp;versiones.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="git"></category><category term="control de versiones"></category><category term="tutorial"></category></entry><entry><title>De jpg a pdf</title><link href="https://eldiegoefe.github.io/de-jpg-a-pdf.html" rel="alternate"></link><published>2014-09-24T10:00:00+02:00</published><updated>2014-09-24T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-09-24:/de-jpg-a-pdf.html</id><summary type="html">&lt;p&gt;Encontré una muy sencilla aplicación para convertir archivos de
imágenes. Si bien tiene mucha potencia, porque puede hacer mucho más,
yo la usé para convertir imágenes en páginas de un archivo&amp;nbsp;pdf.&lt;/p&gt;
&lt;p&gt;Se necesita tener instalado un paquete llamado &lt;strong&gt;imagemagick&lt;/strong&gt;. Para
instalarlo desde un terminal dependerá de la distribución, suele …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Encontré una muy sencilla aplicación para convertir archivos de
imágenes. Si bien tiene mucha potencia, porque puede hacer mucho más,
yo la usé para convertir imágenes en páginas de un archivo&amp;nbsp;pdf.&lt;/p&gt;
&lt;p&gt;Se necesita tener instalado un paquete llamado &lt;strong&gt;imagemagick&lt;/strong&gt;. Para
instalarlo desde un terminal dependerá de la distribución, suele ser&amp;nbsp;así:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo urpmi imagemagick             &lt;span class="c1"&gt;# desde mageia&lt;/span&gt;
$ sudo apt-get install imagemagick   &lt;span class="c1"&gt;# desde ubuntu, mint, etc&lt;/span&gt;
$ sudo yum install imagemagick       &lt;span class="c1"&gt;# desde fedora&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Luego, para usarlo, también desde un terminal y en el directorio donde
están guardadas las imágenes, se ejecuta &lt;strong&gt;convert&lt;/strong&gt; (parece que no es
lo único que instala &lt;strong&gt;imagemagick&lt;/strong&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ convert imagen.jpg archivo.pdf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Se pueden incluir varias imágenes en un mismo&amp;nbsp;archivo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ convert imagen1.jpg imagen2.jpg imagen3.jpg archivo.pdf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;E incluso generalizar con&amp;nbsp;asteriscos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ convert imagen*.jpg archivo.pdf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hay muchos ejemplos más en &lt;a class="reference external" href="http://blog.desdelinux.net/como-manipular-imagenes-desde-el-terminal/"&gt;Desde Linux&lt;/a&gt;. Y también más información
haciendo &lt;strong&gt;man convert&lt;/strong&gt; desde el&amp;nbsp;terminal.&lt;/p&gt;
</content><category term="tecnicismos"></category><category term="imagenes"></category><category term="pdf"></category></entry><entry><title>Grabacion de screencasts para tutoriales de YouTube</title><link href="https://eldiegoefe.github.io/grabacion-de-screencasts-para-tutoriales-de-youtube.html" rel="alternate"></link><published>2014-09-23T10:00:00+02:00</published><updated>2014-09-23T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-09-23:/grabacion-de-screencasts-para-tutoriales-de-youtube.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Actualización (Feb-2017)&lt;/strong&gt;: es muy facil usar el programa &lt;a class="reference external" href="https://obsproject.com"&gt;&lt;span class="caps"&gt;OBS&lt;/span&gt; Studio&lt;/a&gt; para
grabar en la computadora tanto la pantalla como la webcam, micrófono, etc.
Funciona en Linux, Window$ y&amp;nbsp;Mac.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Empecé a grabar tutoriales para usar IPython Notebook. Traté de
hacerlo con la aplicación recordMyDesktop, pero el modo de seleccionar
la …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Actualización (Feb-2017)&lt;/strong&gt;: es muy facil usar el programa &lt;a class="reference external" href="https://obsproject.com"&gt;&lt;span class="caps"&gt;OBS&lt;/span&gt; Studio&lt;/a&gt; para
grabar en la computadora tanto la pantalla como la webcam, micrófono, etc.
Funciona en Linux, Window$ y&amp;nbsp;Mac.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Empecé a grabar tutoriales para usar IPython Notebook. Traté de
hacerlo con la aplicación recordMyDesktop, pero el modo de seleccionar
la parte de la pantalla a grabar resulta muy imprecisa, es
practicamente imposible determinar la región con&amp;nbsp;precisión.&lt;/p&gt;
&lt;p&gt;Luego encontré este buen tutorial: &lt;a class="reference external" href="http://nienhueser.de/blog/?p=469"&gt;Creating Screencasts in
Linux&lt;/a&gt;. Ahí hay dos datos&amp;nbsp;importantes:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Conviene grabar una región cuyo razón de aspecto sea 16:9 (para que
salga bien en un monitor wide). De la tabla de posibles tamaños
aceptados por YouTube prefiero la de&amp;nbsp;1280x720.&lt;/li&gt;
&lt;li&gt;Se pueden usar las opciones de ventana de &lt;span class="caps"&gt;KDE&lt;/span&gt; (a las cuales se
accede con click derecho sobre el título de la ventana / Más
acciones / Preferencias especiales de la ventana) para darle al
navegador un tamaño de ventana (y un offset desde la esquina
superior izquierda) igual al tamaño deseado para la grabación. De
este modo se fuerza la ventana a un tamaño tal que ocupe todo el
area de grabación, de modo de evitar incluir en el video cosas&amp;nbsp;innecesarias.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Para la grabación empecé a usar la aplicación ffmpeg, en linea de
comando, tal como lo sugiere la página de Dennis Nienhüser que cité
más&amp;nbsp;arriba.&lt;/p&gt;
&lt;p&gt;Hice cambios en las opciones citadas por Dennis, para grabar también
el sonido&amp;nbsp;agregué:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;-f&amp;nbsp;alsa&lt;/p&gt;
&lt;p&gt;-ac 2: se usan 2 &amp;#8220;audiochannels&amp;#8221;&amp;nbsp;(ac)&lt;/p&gt;
&lt;p&gt;-ab 128k:&amp;nbsp;bitrate&lt;/p&gt;
&lt;p&gt;-acodec pcm_s16le: un codec de grabación de&amp;nbsp;audio&lt;/p&gt;
&lt;p&gt;-i hw:1 - para seleccionar &amp;#8220;input&amp;nbsp;device&amp;#8221;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para saber cuál es la tarjeta de sonido se utiliza el comando &lt;em&gt;arecord
-l&lt;/em&gt;, y dado que quiero grabar con la webcam &lt;span class="caps"&gt;USB&lt;/span&gt; uso hw:1 (porque es la
&amp;#8220;card 1&amp;#8221;). El resultado en mi &lt;span class="caps"&gt;PC&lt;/span&gt; es el&amp;nbsp;siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;**** List of CAPTURE Hardware Devices ****&lt;/span&gt;
&lt;span class="go"&gt;card 0: PCH [HDA Intel PCH], device 0: VT2020 Analog [VT2020 Analog]&lt;/span&gt;
&lt;span class="go"&gt;  Subdevices: 1/1&lt;/span&gt;
&lt;span class="go"&gt;  Subdevice #0: subdevice #0&lt;/span&gt;
&lt;span class="go"&gt;card 0: PCH [HDA Intel PCH], device 2: VT2020 Alt Analog [VT2020 Alt Analog]&lt;/span&gt;
&lt;span class="go"&gt;  Subdevices: 1/1&lt;/span&gt;
&lt;span class="go"&gt;  Subdevice #0: subdevice #0&lt;/span&gt;
&lt;span class="go"&gt;card 1: U0x46d0x825 [USB Device 0x46d:0x825], device 0: USB Audio [USB Audio]&lt;/span&gt;
&lt;span class="go"&gt;  Subdevices: 1/1&lt;/span&gt;
&lt;span class="go"&gt;  Subdevice #0: subdevice #0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Usé el programa &lt;a class="reference external" href="https://trac.ffmpeg.org/wiki/Capture/ALSA"&gt;alsamixer&lt;/a&gt; (ejecutado desde la línea de comando y
que funciona en modo texto) para seleccionar la placa de sonido,
aunque al final no se si tiene algo que ver el haber logrado grabar
video y sonido con lo hecho desde esta&amp;nbsp;aplicación.&lt;/p&gt;
&lt;p&gt;La orden que finalmente usé (va todo junto, es una sola&amp;nbsp;linea):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;ffmpeg -f alsa -ac 2 -ab 128k -acodec pcm_s16le -i hw:1 -f x11grab&lt;/span&gt;
&lt;span class="go"&gt;-show_region 1 -y -r 30 -s 1280x720 -i :0.0+0,0 -vcodec libx264&lt;/span&gt;
&lt;span class="go"&gt;screencast.avi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Tener cuidado con el nombre del archivo (en este ejemplo es
screencast.avi), porque sino se va cambiando entre grabaciones
sucesivas se va&amp;nbsp;sobreescribiendo.&lt;/p&gt;
&lt;p&gt;En la notebook con Linux Mint 17 tuve que instalar ffmpeg siguiendo
las instrucciones de &lt;a class="reference external" href="http://ask.fclose.com/1036/how-to-install-ffmpeg-on-linux-mint-17-qiana"&gt;esta página&lt;/a&gt;.&lt;/p&gt;
</content><category term="tecnicismos"></category><category term="youtube"></category><category term="video"></category><category term="tutorial"></category></entry><entry><title>Instalando IPython en Mageia</title><link href="https://eldiegoefe.github.io/instalando-ipython-en-mageia.html" rel="alternate"></link><published>2014-08-22T10:00:00+02:00</published><updated>2014-08-22T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-08-22:/instalando-ipython-en-mageia.html</id><summary type="html">&lt;p&gt;Para instalar IPython en Mageia, sin tener privilegios de root hay que
cumplir con los siguientes&amp;nbsp;pasos:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Contar con privilegios de root para poder correr el&amp;nbsp;instalador&lt;/li&gt;
&lt;li&gt;Hay que instalar &lt;span class="caps"&gt;PIP&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Con &lt;span class="caps"&gt;PIP&lt;/span&gt; instalar&amp;nbsp;IPython&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="trabajar-como-root"&gt;
&lt;h2&gt;Trabajar como&amp;nbsp;root:&lt;/h2&gt;
&lt;p&gt;Conviene agregar el usuario a la lista de usuarios con privilegios
para …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Para instalar IPython en Mageia, sin tener privilegios de root hay que
cumplir con los siguientes&amp;nbsp;pasos:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Contar con privilegios de root para poder correr el&amp;nbsp;instalador&lt;/li&gt;
&lt;li&gt;Hay que instalar &lt;span class="caps"&gt;PIP&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Con &lt;span class="caps"&gt;PIP&lt;/span&gt; instalar&amp;nbsp;IPython&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="trabajar-como-root"&gt;
&lt;h2&gt;Trabajar como&amp;nbsp;root:&lt;/h2&gt;
&lt;p&gt;Conviene agregar el usuario a la lista de usuarios con privilegios
para ejecutar &lt;em&gt;sudo&lt;/em&gt;. Las instrucciones están en &lt;a class="reference external" href="https://wiki.mageia.org/en/Configuring_sudo"&gt;Configuring sudo&lt;/a&gt;
de Mageia. Históricamente en &lt;span class="caps"&gt;UNIX&lt;/span&gt; este es el grupo&amp;nbsp;Wheels.&lt;/p&gt;
&lt;p&gt;Primero hay que crear el archivo &lt;em&gt;/etc/sudoers.d/01wheel&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Después ejecutar lo siguiente en un terminal como root (es decir,
luego de hacer&amp;nbsp;/usr/bin/su):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;%wheel ALL=(ALL)  ALL&amp;quot;&lt;/span&gt; &amp;gt; /etc/sudoers.d/01wheel
&lt;span class="gp"&gt;$&lt;/span&gt; chmod &lt;span class="m"&gt;440&lt;/span&gt; /etc/sudoers.d/01wheel
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Agregar el usuario al grupo &amp;#8220;Wheel&amp;#8221;. Para ello hay que editar el
usuario (desde Configure su computador / Administrar usuarios del
sistema). Click derecho para el menú contextual sobre el nombre del
usuario a agregar y &lt;em&gt;editar&lt;/em&gt;. En la pestaña de grupos agregar un tick
sobre el grupo &lt;strong&gt;wheel&lt;/strong&gt; y&amp;nbsp;aceptar.&lt;/p&gt;
&lt;p&gt;Desloguearse y volver a entrar (en caso que el usuario modificado sea
el usuario que hizo la&amp;nbsp;edición).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class="caps"&gt;IMPORTANTE&lt;/span&gt;&lt;/strong&gt;: para mejorar la seguridad del sistema conviene usar
sudo o su siempre precedidos de la ruta real al comando (la
explicación completa verla en el link original), es&amp;nbsp;decir:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; /usr/bin/sudo *comando*
&lt;span class="gp"&gt;$&lt;/span&gt; /usr/bin/su *comando*
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="instalacion-de-pip"&gt;
&lt;h2&gt;Instalación de &lt;span class="caps"&gt;PIP&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Esto es muy&amp;nbsp;fácil:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; /usr/bin/sudo urpmi python-setuptools
&lt;span class="gp"&gt;$&lt;/span&gt; /usr/bin/sudo easy_install pip
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="instalacion-de-ipython"&gt;
&lt;h2&gt;Instalación de&amp;nbsp;IPython&lt;/h2&gt;
&lt;p&gt;Igual de&amp;nbsp;fácil:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; /usr/bin/sudo pip install ipython
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="ipython"></category><category term="mageia"></category><category term="root"></category><category term="pip"></category><category term="instalacion"></category></entry><entry><title>Keybindings conflictivos en Emacs</title><link href="https://eldiegoefe.github.io/keybindings-conflictivos-en-emacs.html" rel="alternate"></link><published>2014-08-17T10:00:00+02:00</published><updated>2014-08-17T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-08-17:/keybindings-conflictivos-en-emacs.html</id><summary type="html">&lt;p&gt;Desde que empecé a usar Emacs probé dos grandes paquetes para
facilitar su uso. Uno ha sido &lt;strong&gt;Ergoemacs&lt;/strong&gt;, que es buenísimo porque
remapea todos los accesos rápidos de teclado para poder usarlos de
forma más simple e intuitiva (por ejemplo: C-x C-f, que &amp;#8220;visitaba&amp;#8221; un
archivo, pasa a ser C-o …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Desde que empecé a usar Emacs probé dos grandes paquetes para
facilitar su uso. Uno ha sido &lt;strong&gt;Ergoemacs&lt;/strong&gt;, que es buenísimo porque
remapea todos los accesos rápidos de teclado para poder usarlos de
forma más simple e intuitiva (por ejemplo: C-x C-f, que &amp;#8220;visitaba&amp;#8221; un
archivo, pasa a ser C-o, que es el comando stándard para &amp;#8220;abrir
archivo&amp;#8221; en casi todos los programas actuales). Sin embargo, luego
encontré buenas funcionalidades en otro llamado &lt;strong&gt;Prelude&lt;/strong&gt;. Estando
sólo activo este último (ya que hay conflictos con ergoemacs) tuve el
siguiente&amp;nbsp;problema:&lt;/p&gt;
&lt;p&gt;al editar una tabla dentro de &lt;em&gt;org-mode&lt;/em&gt;, el keybinding para eliminar
una fila debía ser M-S-&amp;lt;up&amp;gt; (es decir: alt-shift-flecha arriba) pero
en cambio al apretar esa secuencia de teclas lo que sucedía era que se
ejecutaba el comando &lt;em&gt;move-text-up&lt;/em&gt; que está definido en&amp;nbsp;prelude.&lt;/p&gt;
&lt;p&gt;Esta combinación de teclas resultó que estaba definida en el archivo
&lt;strong&gt;~/.emacs.d/core/prelude-mode.el&lt;/strong&gt;, en el cual se encuentra la
siguiente&amp;nbsp;linea:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;define-key&lt;/span&gt; &lt;span class="nb"&gt;map&lt;/span&gt; &lt;span class="nv"&gt;[&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;meta&lt;/span&gt; &lt;span class="nv"&gt;shift&lt;/span&gt; &lt;span class="nv"&gt;up&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;]&lt;/span&gt;  &lt;span class="ss"&gt;&amp;#39;move-text-up&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;para recuperar el keybinding y que vuelva a funcionar como se espera
en org-mode, lo primero que probé fue comentar esa linea agregándole
dos ; al inicio. Pero de este modo, cuando toque actualizar el paquete
Prelude, el archivo prelude-mode.el se sobreescribirá desde el
servidor y el problema volverá a&amp;nbsp;aparecer.&lt;/p&gt;
&lt;p&gt;Entonces me puse a buscar cómo resolverlo y encontré que se puede
anular el keybinding correspondiente a un modo de Emacs con el
siguiente comando (que debe incluirse en el archivo de inicialización
personal, generalmente &lt;strong&gt;~/.emacs&lt;/strong&gt; o en mi caso
&lt;strong&gt;~/.emacs.d/personal/custom.el&lt;/strong&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;define-key&lt;/span&gt; &lt;span class="nv"&gt;prelude-mode-map&lt;/span&gt; &lt;span class="nv"&gt;[&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;meta&lt;/span&gt; &lt;span class="nv"&gt;shift&lt;/span&gt; &lt;span class="nv"&gt;up&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;]&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lo mismo puede hacerse para&amp;nbsp;M-S-&amp;lt;down&amp;gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;define-key&lt;/span&gt; &lt;span class="nv"&gt;prelude-mode-map&lt;/span&gt; &lt;span class="nv"&gt;[&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;meta&lt;/span&gt; &lt;span class="nv"&gt;shift&lt;/span&gt; &lt;span class="nv"&gt;down&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;]&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Obviamente esta técnica es aplicable para anular el keybinding de
cualquier modo que se quiera&amp;nbsp;desactivar.&lt;/p&gt;
</content><category term="tecnicismos"></category><category term="emacs"></category><category term="keybindings"></category></entry><entry><title>A punto para Lisp</title><link href="https://eldiegoefe.github.io/a-punto-para-lisp.html" rel="alternate"></link><published>2014-08-13T10:00:00+02:00</published><updated>2014-08-13T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-08-13:/a-punto-para-lisp.html</id><summary type="html">&lt;p&gt;Cuando empecé a leer &lt;a class="reference external" href="http://www.gigamonkeys.com/book/"&gt;Practical Common Lisp&lt;/a&gt;, de Peter Seibel, tras
escuchar &lt;a class="reference external" href="https://www.youtube.com/watch?v=-8DO0_pqLNA"&gt;el reportaje de Sacha Chua a Bozhidar Batsov&lt;/a&gt;, tuve algunos
inconvenientes para poder instalar Lisp en mi compu, hasta que
encontré el tutorial &lt;a class="reference external" href="https://www.youtube.com/watch?v=VnWVu8VVDbI"&gt;Installing Common Lisp&amp;#8230;&lt;/a&gt;. Estas notas resumen
la información del video (sus instrucciones se muestran en …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cuando empecé a leer &lt;a class="reference external" href="http://www.gigamonkeys.com/book/"&gt;Practical Common Lisp&lt;/a&gt;, de Peter Seibel, tras
escuchar &lt;a class="reference external" href="https://www.youtube.com/watch?v=-8DO0_pqLNA"&gt;el reportaje de Sacha Chua a Bozhidar Batsov&lt;/a&gt;, tuve algunos
inconvenientes para poder instalar Lisp en mi compu, hasta que
encontré el tutorial &lt;a class="reference external" href="https://www.youtube.com/watch?v=VnWVu8VVDbI"&gt;Installing Common Lisp&amp;#8230;&lt;/a&gt;. Estas notas resumen
la información del video (sus instrucciones se muestran en un entorno
Windows mientras que mi transcripción es para Linux), para poder
instalar un Lisp en cualquier máquina con&amp;nbsp;Emacs:&lt;/p&gt;
&lt;p&gt;Allí dice que se puede &lt;a class="reference external" href="http://www.sbcl.org/platform-table.html"&gt;bajar sbcl&lt;/a&gt; (&lt;strong&gt;elegir el binario&lt;/strong&gt;, de la
tabla para las distintas plataformas, en mi caso Linux &lt;span class="caps"&gt;AMD64&lt;/span&gt;, &lt;em&gt;que no
implica que esa deba ser la marca de nuestro microprocesador&lt;/em&gt;) e
instalarlo. Prestar atención a que el archivo bajado sea efectivamente
un binario (posee la palabra &amp;#8220;binary&amp;#8221; en el nombre, antes de la
extensión) y descomprimirlo, lo cual se hace con la&amp;nbsp;orden:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt; sh install.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(&lt;strong&gt;necesita permisos de root&lt;/strong&gt;, así que hay que anteponer un sudo o
ejecutar el terminal como root). Al final aparecen algunos mensajes
diciendo que no se instalaron los manuales, pero más allá de eso todo
parece andar bien, puesto que en la ventana puede&amp;nbsp;leerse:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;SBCL has been installed:&lt;/span&gt;
&lt;span class="go"&gt; binary /usr/local/bin/sbcl&lt;/span&gt;
&lt;span class="go"&gt; core and contribs in /usr/local/lib/sbcl/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Luego hay que &lt;a class="reference external" href="http://www.quicklisp.org/beta/"&gt;bajar quicklisp&lt;/a&gt;, el hecho de que sea &amp;#8220;beta&amp;#8221; no
importa, porque anda bien así desde hace&amp;nbsp;años.&lt;/p&gt;
&lt;p&gt;Luego hay que ejecutar&amp;nbsp;esto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sbcl --load quicklisp.lisp
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Luego hay que seguir las instrucciones que aparecen, primeramente
teclear (el prompt dentro de Lisp en mi sistema es sólo un&amp;nbsp;asterisco):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;quicklisp-quickstart:install&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;El sistema se pone a bajar cosas, así que supongo que es necesaria la
conexión a internet. Finaliza con este&amp;nbsp;mensaje:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;==== quicklisp installed ====&lt;/span&gt;

&lt;span class="go"&gt;   To load a system, use: (ql:quickload &amp;quot;system-name&amp;quot;)&lt;/span&gt;

&lt;span class="go"&gt;   To find systems, use: (ql:system-apropos &amp;quot;term&amp;quot;)&lt;/span&gt;

&lt;span class="go"&gt;   To load Quicklisp every time you start Lisp, use: (ql:add-to-init-file)&lt;/span&gt;

&lt;span class="go"&gt;   For more information, see http://www.quicklisp.org/beta/&lt;/span&gt;

&lt;span class="go"&gt;NIL&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Seguimos ejecutando en el mismo terminal la siguiente&amp;nbsp;instrucción:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ql:add-to-init-file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Funciona independientemente del directorio desde el cual hayamos
ejecutado el terminal. Ofrece el siguiente mensaje como&amp;nbsp;resultado:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;I will append the following lines to #P&amp;quot;/home/diego/.sbclrc&amp;quot;:&lt;/span&gt;

&lt;span class="go"&gt;  ;;; The following lines added by ql:add-to-init-file:&lt;/span&gt;
&lt;span class="gp"&gt;  #&lt;/span&gt;-quicklisp
&lt;span class="go"&gt;  (let ((quicklisp-init (merge-pathnames &amp;quot;quicklisp/setup.lisp&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;                                         (user-homedir-pathname))))&lt;/span&gt;
&lt;span class="go"&gt;    (when (probe-file quicklisp-init)&lt;/span&gt;
&lt;span class="go"&gt;      (load quicklisp-init)))&lt;/span&gt;

&lt;span class="go"&gt;Press Enter to continue.&lt;/span&gt;

&lt;span class="gp"&gt;#&lt;/span&gt;P&lt;span class="s2"&gt;&amp;quot;/home/diego/.sbclrc&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Luego se instala slime, pero no como hacía yo desde adentro de emacs,
sino desde el mismo terminal en el que venimos&amp;nbsp;trabajando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;* (ql:quickload &amp;quot;quicklisp-slime-helper&amp;quot;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nuevamente se pone a bajar cosas de la red y termina con el siguiente
mensaje, así que sabemos que lo hizo&amp;nbsp;exitosamente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;slime-helper.el installed in &amp;quot;/home/diego/quicklisp/slime-helper.el&amp;quot;&lt;/span&gt;

&lt;span class="go"&gt;To use, add this to your ~/.emacs:&lt;/span&gt;

&lt;span class="go"&gt;  (load (expand-file-name &amp;quot;~/quicklisp/slime-helper.el&amp;quot;))&lt;/span&gt;
&lt;span class="go"&gt;  ;; Replace &amp;quot;sbcl&amp;quot; with the path to your implementation&lt;/span&gt;
&lt;span class="go"&gt;  (setq inferior-lisp-program &amp;quot;sbcl&amp;quot;)&lt;/span&gt;


&lt;span class="gp gp-VirtualEnv"&gt;(&amp;quot;quicklisp-slime-helper&amp;quot;)&lt;/span&gt;
&lt;span class="go"&gt;*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yo no tengo archivo ~/.emacs porque instalé Prelude, así que esas tres
lineas (desde &lt;strong&gt;(load&lt;/strong&gt; hasta &lt;strong&gt;&amp;#8220;sbcl&amp;#8221;)&lt;/strong&gt;) van en el archivo de
configuraciones personales &lt;em&gt;~/.emacs.d/personal/custom.el&lt;/em&gt;. No hace
falta cambiar nada, es un copy+paste, o mejor dicho un&amp;nbsp;kill+yank.&lt;/p&gt;
&lt;p&gt;Al ejecutar emacs correrá brevemente el script que acabamos de decirle
que&amp;nbsp;corra.&lt;/p&gt;
&lt;p&gt;Podemos abrir (visitar en la jerga de emacs) un nuevo archivo con
extensión .lisp usando C-x C-f. Luego, en otro buffer, puedo hacer M-x
slime. Da como resultado una máquina &lt;span class="caps"&gt;REPL&lt;/span&gt; como la que se espera en los
ejemplos del capítulo 2 de Practical Common&amp;nbsp;Lisp.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;; SLIME 2014-06-17&lt;/span&gt;
&lt;span class="nv"&gt;CL-USER&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Al principio había algo diferente en el video, porque cuando se pone a
teclear en el otro buffer, el que tiene el archivo de texto con
extensión .lisp no me aparecían en el minibuffer las ayudas (una
descripción de lo que se va tecleando, con la sintaxis sugerida), sin
embargo, luego empezó a funcionar igual, también con el coloreado de
las palabras&amp;nbsp;clave.&lt;/p&gt;
&lt;p&gt;Aca una versión del Hola, Mundo! para probar en el archivo .lisp (se
compila con C-c&amp;nbsp;C-c):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;hihi-world&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt; &lt;span class="no"&gt;t&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;hola mundo!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="lisp"></category><category term="programacion"></category><category term="common-lisp"></category></entry><entry><title>Primer snippet</title><link href="https://eldiegoefe.github.io/primer-snippet.html" rel="alternate"></link><published>2014-08-10T10:02:00+02:00</published><updated>2014-08-10T10:02:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-08-10:/primer-snippet.html</id><summary type="html">&lt;p&gt;Este es el primer snippet diseñado para automatizar el encabezado de
las paginas hechas en restructuredText, para facilitarme la escritura
de este blog. Hay mucha ayuda en la &lt;a class="reference external" href="http://capitaomorte.github.io/yasnippet/"&gt;página de Capitao Morte&lt;/a&gt;
(supongo que es su&amp;nbsp;autor).&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13 …&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary><content type="html">&lt;p&gt;Este es el primer snippet diseñado para automatizar el encabezado de
las paginas hechas en restructuredText, para facilitarme la escritura
de este blog. Hay mucha ayuda en la &lt;a class="reference external" href="http://capitaomorte.github.io/yasnippet/"&gt;página de Capitao Morte&lt;/a&gt;
(supongo que es su&amp;nbsp;autor).&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# -&lt;span class="ge"&gt;*- mode: snippet; require-final-newline: nil -*&lt;/span&gt;-
# name: encabezado
# key: enc
# expand-env: ((yas-indent-line &amp;#39;fixed))
# --

&lt;span class="nc"&gt;:title:&lt;/span&gt; ${1:titulo}
&lt;span class="nc"&gt;:date:&lt;/span&gt; ${2:2014}-{3:10}-{4:31} {5:10:00}
&lt;span class="nc"&gt;:category:&lt;/span&gt; ${6:$$(yas-choose-value &amp;#39;(&amp;quot;blog&amp;quot; &amp;quot;politica&amp;quot; &amp;quot;salud&amp;quot; &amp;quot;tecnicismos&amp;quot;))}
&lt;span class="nc"&gt;:tags:&lt;/span&gt; $7
&lt;span class="nc"&gt;:author:&lt;/span&gt; El Diego Efe
&lt;span class="nc"&gt;:excerpt:&lt;/span&gt; $1

$0
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;En la linea 14 la instrucción $0 se agregó porque en algún lado decía
que suele ponerse para indicar el lugar de salida cuando se termina de
ejecutar el&amp;nbsp;snippet.&lt;/p&gt;
&lt;p&gt;La linea 4 está para que la indentación aparezca correcta al
ejecutarse el snippet, ya que sin
esta linea aparecían unas tabulaciones&amp;nbsp;erróneas.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;¿Dónde guardar el&amp;nbsp;archivo?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;No conviene guardar el snippet nuevo en el directorio donde se
almacena automáticamente el paquete &lt;em&gt;yasnippets&lt;/em&gt; porque al actualizar
este paquete se perderá nuestra&amp;nbsp;creación.&lt;/p&gt;
&lt;p&gt;Hay que verificar el valor de la variable donde se almacenan los
directorios para los snippets personalizados (mediante &lt;strong&gt;M-x
customize-variable yas-snippet-dirs&lt;/strong&gt;). Al chequear veo que uno de los
directorios es &lt;em&gt;~/.emacs.d/snippets&lt;/em&gt; pero cuando me fijo con el
navegador encuentro que aún no existe, así que lo creo (desde &lt;strong&gt;M-x
dired&lt;/strong&gt;). Luego también creo un subdirectorio para mantener la lógica
de los nombres bajo
&lt;em&gt;~/.emacs.d/elpa/yasnippet-&lt;span class="caps"&gt;XXXXXXXX&lt;/span&gt;.&lt;span class="caps"&gt;XXXX&lt;/span&gt;/snippets&lt;/em&gt;, donde a cada modo
mayor se le asigna un subdirectorio. Por lo tanto, para mi ultra
magnífico snippet de restructuredText, corresponde guardarlo así (sin
ninguna&amp;nbsp;extensión):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~/.emacs.d/snippets/rst-mode/encabezado
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Otra cosa&lt;/strong&gt;: para poder colocar código con números
de línea en estas páginas (escritas con restructuredText) hay
que tener en cuenta lo&amp;nbsp;siguiente:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;debajo del &lt;strong&gt;.. code-block::&lt;/strong&gt; se debe incluir la directiva
&lt;strong&gt;:linenos:&lt;/strong&gt;. No se si es un bug, pero esa directiva debe estar
alineada con la palabra &lt;strong&gt;code&lt;/strong&gt; para que funcione, y todo el
bloque de código debe también respetar esta alineación. Para
tabular un bloque de texto manteniendo las indentaciones que ya
tiene se puede usar &lt;em&gt;M-x indent-rigidly&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;el nombre del lenguaje en &lt;strong&gt;.. code-block::&lt;/strong&gt; parece que debe ir en
minúsculas, para que sea reconocido y funcione el coloreado con
pygments. En el caso de restructuredText la palabra clave que
funcionó (por prueba y error) es rest. (Editado: luego encontré la
página con los &amp;#8220;lexers&amp;#8221; válidos: &lt;a class="reference external" href="http://pygments.org/docs/lexers/"&gt;Available lexers&lt;/a&gt;, y vi que
también eran válidos rst y&amp;nbsp;restructuredtext).&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</content><category term="tecnicismos"></category><category term="emacs"></category><category term="yasnippets"></category></entry><entry><title>Instalacion de Linux</title><link href="https://eldiegoefe.github.io/instalacion-de-linux.html" rel="alternate"></link><published>2014-08-06T11:00:00+02:00</published><updated>2014-08-06T11:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-08-06:/instalacion-de-linux.html</id><summary type="html">&lt;p&gt;No es difícil encontrar la información para la instalación de Linux,
pero hay distintas maneras y quiero dejar registrada la forma en que
lo estoy haciendo actualmente. Los pasos que sigo&amp;nbsp;son:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Bajar el &lt;span class="caps"&gt;ISO&lt;/span&gt; (el archivo imagen) de la distribución que quiero
instalar, en este caso es Linux Mint …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;No es difícil encontrar la información para la instalación de Linux,
pero hay distintas maneras y quiero dejar registrada la forma en que
lo estoy haciendo actualmente. Los pasos que sigo&amp;nbsp;son:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Bajar el &lt;span class="caps"&gt;ISO&lt;/span&gt; (el archivo imagen) de la distribución que quiero
instalar, en este caso es Linux Mint&amp;nbsp;17.&lt;/li&gt;
&lt;li&gt;Formatear en &lt;span class="caps"&gt;FAT32&lt;/span&gt; el pendrive mediante el programa&amp;nbsp;GParted.&lt;/li&gt;
&lt;li&gt;Con el programa &lt;span class="caps"&gt;UNETBOOTIN&lt;/span&gt; se pasa la imagen al pendrive (hay que
elegir el archivo &lt;span class="caps"&gt;ISO&lt;/span&gt; como&amp;nbsp;fuente).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Luego ya es cuestión de setear la &lt;span class="caps"&gt;PC&lt;/span&gt; para que arranque con el pendrive
y seguir las instrucciones que aparezcan en&amp;nbsp;pantalla.&lt;/p&gt;
&lt;div class="section" id="particiones"&gt;
&lt;h2&gt;Particiones&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://docs.fedoraproject.org/en-US/Fedora/21/html/Installation_Guide/sect-installation-gui-manual-partitioning-recommended.html"&gt;En el sitio de Fedora&lt;/a&gt; la recomendación es la&amp;nbsp;siguiente:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;/boot&lt;/strong&gt; de 500 &lt;span class="caps"&gt;MB&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/root&lt;/strong&gt; de 10 &lt;span class="caps"&gt;GB&lt;/span&gt; como mínimo, y 20 &lt;span class="caps"&gt;GB&lt;/span&gt; como estándar. Es la partición
donde se instalarán todos los softwares. Yo suelo dejarlas en 30 &lt;span class="caps"&gt;GB&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/home&lt;/strong&gt; de 10 &lt;span class="caps"&gt;GB&lt;/span&gt; como mínimo. Es la partición donde el usuario guarda
sus documentos, fotos, música, películas&amp;#8230; Debería ser la partición
más&amp;nbsp;grande.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;swap&lt;/strong&gt; depende de la memoria y si se usa hibernación o no. Para un
sistema de 8 &lt;span class="caps"&gt;GB&lt;/span&gt; está bien que sea de 8 a 12 &lt;span class="caps"&gt;GB&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;BIOS&lt;/span&gt; Boot (1 &lt;span class="caps"&gt;MB&lt;/span&gt;) o &lt;strong&gt;&lt;span class="caps"&gt;EFI&lt;/span&gt; System Partition&lt;/strong&gt; (200 &lt;span class="caps"&gt;MB&lt;/span&gt;). En mi caso voy
a estar instalando sistemas más modernos, así que la idea es que
sean &lt;span class="caps"&gt;EFI&lt;/span&gt;. El formato del volumen &lt;span class="caps"&gt;EFI&lt;/span&gt; debe ser &lt;span class="caps"&gt;FAT&lt;/span&gt; (así que lo elijo
como &lt;span class="caps"&gt;FAT32&lt;/span&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="post-instalacion"&gt;
&lt;h2&gt;Post-instalación&lt;/h2&gt;
&lt;p&gt;Una cosa recomendable es buscar en la web algún artículo como éste:
&lt;a class="reference external" href="http://www.binarytides.com/better-linux-mint-17-cinnamon/"&gt;20 things to do after installing Linux Mint 17 Qiana Cinnamon&lt;/a&gt;, que
indica pasos a seguir luego de la instalación. Por ejemplo, la
recomendación de instalar los drivers del fabricante de la placa de
video (los pasos detallados están &lt;a class="reference external" href="http://www.binarytides.com/install-nvidia-drivers-linux-mint-16/"&gt;aca&lt;/a&gt;) permitió mejorar el score que
da glmark2 de 599 a 1751. Hay que seguir los pasos con atención,
porque en este caso las instrucciones estaban para placas NVidia y yo
tengo una &lt;span class="caps"&gt;ATI&lt;/span&gt; Radeon &lt;span class="caps"&gt;HD&lt;/span&gt; 5570, así que los drivers hay que buscarlos en
la página que corresponda, lo cual no estaba aclarado en la página&amp;nbsp;mencionada.&lt;/p&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="linux"></category><category term="mint"></category></entry><entry><title>Generar pdf en español desde org-mode</title><link href="https://eldiegoefe.github.io/generar-pdf-en-espanol-desde-org-mode.html" rel="alternate"></link><published>2014-08-06T10:00:00+02:00</published><updated>2014-08-06T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-08-06:/generar-pdf-en-espanol-desde-org-mode.html</id><summary type="html">&lt;p&gt;Escribí un documento en org-mode (un modo mayor de emacs), porque
permite exportar en formato pdf y escribir todo en texto plano. Es
realmente una maravilla, se pueden escribir fórmulas en LaTeX, y
organizar la estructura del documento usando títulos precedidos de uno
o más asteriscos para indicar su nivel …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Escribí un documento en org-mode (un modo mayor de emacs), porque
permite exportar en formato pdf y escribir todo en texto plano. Es
realmente una maravilla, se pueden escribir fórmulas en LaTeX, y
organizar la estructura del documento usando títulos precedidos de uno
o más asteriscos para indicar su nivel (si es un título principal, un
subtitulo, un subsubtítulo, etc.). Hasta genera automáticamente una
tabla de contenidos con todos estos títulos al hacer la exportación
del documento (keybinding: C-c C-e l&amp;nbsp;o).&lt;/p&gt;
&lt;p&gt;Pero tenía el problema de que la fecha y la tabla de contenidos,
aparecían escritas en inglés. Estuve buscando un rato largo el modo de
pasarlo a castellano, y finalmente lo encontré en la página de
Nurullah Akkaya, &lt;a class="reference external" href="http://nakkaya.com/2010/09/07/writing-papers-using-org-mode/"&gt;Writing papers using&amp;nbsp;org-mode&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;En el encabezado hay que&amp;nbsp;agregar&lt;/p&gt;
&lt;pre class="literal-block"&gt;
#+LATEX_HEADER: \usepackage[spanish]{babel}
&lt;/pre&gt;
&lt;p&gt;Sin embargo esto tiene un comportamiento medio raro, ya que además
requiere esta linea&amp;nbsp;previa:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
#+LANGUAGE: es
&lt;/pre&gt;
&lt;p&gt;Es extraño porque esta última linea es una directiva para generar html
y no pdf. Además me dio siempre el resultado en castellano aunque
probé también con &lt;em&gt;fr&lt;/em&gt;, &lt;em&gt;pt&lt;/em&gt;, &lt;em&gt;de&lt;/em&gt;, &amp;#8230;; parecía que andaba siempre
igual, en español, pero al colocar &lt;em&gt;en&lt;/em&gt; volvió a salir el texto en&amp;nbsp;inglés.&lt;/p&gt;
</content><category term="tecnicismos"></category><category term="emacs"></category><category term="org-mode"></category><category term="pdf"></category></entry><entry><title>Compra de computadora de oficina</title><link href="https://eldiegoefe.github.io/compra-de-computadora-de-oficina.html" rel="alternate"></link><published>2014-08-03T10:30:00+02:00</published><updated>2014-08-03T10:30:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-08-03:/compra-de-computadora-de-oficina.html</id><summary type="html">&lt;p&gt;Compré una &lt;span class="caps"&gt;PC&lt;/span&gt; con estas características y precios, para uso liviano
(mayormente internet, multimedia, programas de oficina,&amp;nbsp;etc):&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="47%" /&gt;
&lt;col width="16%" /&gt;
&lt;col width="37%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Item&lt;/th&gt;
&lt;th class="head"&gt;Precio($)&lt;/th&gt;
&lt;th class="head"&gt;Detalles&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;mother Gygabyte &lt;span class="caps"&gt;GA&lt;/span&gt;-&lt;span class="caps"&gt;AM1M&lt;/span&gt;-&lt;span class="caps"&gt;S2H&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;534&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;micro Athlon 5150&lt;/td&gt;
&lt;td&gt;656&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span class="caps"&gt;HD&lt;/span&gt; &lt;span class="caps"&gt;1TB&lt;/span&gt; Seagate &lt;span class="caps"&gt;SATA&lt;/span&gt; 3&lt;/td&gt;
&lt;td&gt;882&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Memoria Kingston &lt;span class="caps"&gt;DDR3&lt;/span&gt; 4 Gb&lt;/td&gt;
&lt;td&gt;626&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Gabinete + fuente&lt;/td&gt;
&lt;td&gt;650&lt;/td&gt;
&lt;td&gt;Sharknet 600W&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Lector tarj …&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</summary><content type="html">&lt;p&gt;Compré una &lt;span class="caps"&gt;PC&lt;/span&gt; con estas características y precios, para uso liviano
(mayormente internet, multimedia, programas de oficina,&amp;nbsp;etc):&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="47%" /&gt;
&lt;col width="16%" /&gt;
&lt;col width="37%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Item&lt;/th&gt;
&lt;th class="head"&gt;Precio($)&lt;/th&gt;
&lt;th class="head"&gt;Detalles&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;mother Gygabyte &lt;span class="caps"&gt;GA&lt;/span&gt;-&lt;span class="caps"&gt;AM1M&lt;/span&gt;-&lt;span class="caps"&gt;S2H&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;534&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;micro Athlon 5150&lt;/td&gt;
&lt;td&gt;656&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span class="caps"&gt;HD&lt;/span&gt; &lt;span class="caps"&gt;1TB&lt;/span&gt; Seagate &lt;span class="caps"&gt;SATA&lt;/span&gt; 3&lt;/td&gt;
&lt;td&gt;882&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Memoria Kingston &lt;span class="caps"&gt;DDR3&lt;/span&gt; 4 Gb&lt;/td&gt;
&lt;td&gt;626&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Gabinete + fuente&lt;/td&gt;
&lt;td&gt;650&lt;/td&gt;
&lt;td&gt;Sharknet 600W&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Lector tarj. memoria y usb&lt;/td&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Teclado y mouse inalámbrico&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Genius Slimstar i820&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Tarjeta red wireless &lt;span class="caps"&gt;USB&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;112&lt;/td&gt;
&lt;td&gt;TPLink Nano &lt;span class="caps"&gt;TL&lt;/span&gt;-&lt;span class="caps"&gt;WN725N&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;3810&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Calculando el equivalente a 3810 pesos en agosto de&amp;nbsp;2014:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="34%" /&gt;
&lt;col width="24%" /&gt;
&lt;col width="42%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;tipo de dolar&lt;/th&gt;
&lt;th class="head"&gt;$/dolar&lt;/th&gt;
&lt;th class="head"&gt;total en dolares&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;oficial&lt;/td&gt;
&lt;td&gt;8,20&lt;/td&gt;
&lt;td&gt;465&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;turista&lt;/td&gt;
&lt;td&gt;11,10&lt;/td&gt;
&lt;td&gt;343&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;blue&lt;/td&gt;
&lt;td&gt;12,60&lt;/td&gt;
&lt;td&gt;302&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Y me pasaron también estos precios de&amp;nbsp;monitores:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Monitor &lt;span class="caps"&gt;LED&lt;/span&gt; &lt;span class="caps"&gt;LG&lt;/span&gt; 22&amp;#8221; &lt;span class="caps"&gt;22EA53T&lt;/span&gt;-P&amp;nbsp;1920$&lt;/li&gt;
&lt;li&gt;Monitor &lt;span class="caps"&gt;LED&lt;/span&gt; &lt;span class="caps"&gt;LG&lt;/span&gt; 23&amp;#8221; 23EA53v-P&amp;nbsp;2242$&lt;/li&gt;
&lt;/ul&gt;
</content><category term="tecnicismos"></category><category term="computadoras"></category><category term="compras"></category></entry><entry><title>Apuntes sobre matplotlib</title><link href="https://eldiegoefe.github.io/apuntes-sobre-matplotlib.html" rel="alternate"></link><published>2014-08-03T10:00:00+02:00</published><updated>2014-08-03T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-08-03:/apuntes-sobre-matplotlib.html</id><summary type="html">&lt;p&gt;Estos son algunos apuntes extraidos principalmente del tutorial de
Artist en la página &lt;a class="reference external" href="http://matplotlib.org/users/artists.html"&gt;http://matplotlib.org/users/artists.html&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="matplotlib"&gt;
&lt;h2&gt;&lt;strong&gt;matplotlib&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Matplotlib is the whole&amp;nbsp;package&lt;/p&gt;
&lt;div class="section" id="pylab"&gt;
&lt;h3&gt;&lt;strong&gt;pylab&lt;/strong&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a module in&amp;nbsp;matplotlib&lt;/li&gt;
&lt;li&gt;installed alongside&amp;nbsp;matplotlib&lt;/li&gt;
&lt;li&gt;preferred for interactive calculations and&amp;nbsp;plotting&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="matplotlib-pyplot"&gt;
&lt;h3&gt;&lt;strong&gt;matplotlib.pyplot&lt;/strong&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a module in matplotlib provides the state machine interface …&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Estos son algunos apuntes extraidos principalmente del tutorial de
Artist en la página &lt;a class="reference external" href="http://matplotlib.org/users/artists.html"&gt;http://matplotlib.org/users/artists.html&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="matplotlib"&gt;
&lt;h2&gt;&lt;strong&gt;matplotlib&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Matplotlib is the whole&amp;nbsp;package&lt;/p&gt;
&lt;div class="section" id="pylab"&gt;
&lt;h3&gt;&lt;strong&gt;pylab&lt;/strong&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a module in&amp;nbsp;matplotlib&lt;/li&gt;
&lt;li&gt;installed alongside&amp;nbsp;matplotlib&lt;/li&gt;
&lt;li&gt;preferred for interactive calculations and&amp;nbsp;plotting&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="matplotlib-pyplot"&gt;
&lt;h3&gt;&lt;strong&gt;matplotlib.pyplot&lt;/strong&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a module in matplotlib provides the state machine interface to the
underlying plotting library in&amp;nbsp;matplotlib&lt;/li&gt;
&lt;li&gt;combines the pyplot functionality (for plotting) with numpy
functionality in a single&amp;nbsp;namespace&lt;/li&gt;
&lt;li&gt;figures and axes are implicitly and automatically created to achieve
the desired&amp;nbsp;plot&lt;/li&gt;
&lt;li&gt;preferred for&amp;nbsp;scripting&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="artist"&gt;
&lt;h2&gt;Artist&lt;/h2&gt;
&lt;p&gt;Artist has three&amp;nbsp;layers:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;matplotlib.backend_bases.FigureCanvas: area onto which the figure
is&amp;nbsp;drawn&lt;/li&gt;
&lt;li&gt;matplotlib.backend_bases.Renderer: object which knows how to draw
on the&amp;nbsp;FigureCanvas&lt;/li&gt;
&lt;li&gt;matplotlib.artist.Artist: object that knows how to use a renderer
to paint onto the canvas (el usuario típico usa esto el 95% del&amp;nbsp;tiempo)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;1 and 2 handle all the details of talking to user interface toolkits&amp;nbsp;(Qt4)&lt;/p&gt;
&lt;p&gt;3 handles all the high level constructs like representing and laying
out the figure, text and&amp;nbsp;lines&lt;/p&gt;
&lt;div class="section" id="artist-types"&gt;
&lt;h3&gt;Artist&amp;nbsp;types&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;primitive: standard graphical objects we want to paint onto our
canvas (Line2D, Rectangle, Text, AxesImages,&amp;nbsp;etc)&lt;/li&gt;
&lt;li&gt;containers: places to put the primitives (Axis, Axes,&amp;nbsp;Figure)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="standard-use"&gt;
&lt;h3&gt;Standard&amp;nbsp;use&lt;/h3&gt;
&lt;p&gt;Create a Figure instance use the Figure to create one or more Axes or
Subplot instances use the &lt;strong&gt;Axes&lt;/strong&gt; (plotting area into which most of
the objects go) instance &lt;strong&gt;helper methods&lt;/strong&gt; (plot(), text(), hist(),
etc) to create the &lt;strong&gt;primitives&lt;/strong&gt; (Line2D, Text,&amp;nbsp;Rectangle).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Helper&amp;nbsp;methods&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
will take your data (numpy arrays, strings) and create primitive
Artists instances as needed (Line2D, etc), add them to the relevant
containers and draw them when requested&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Subplots&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
a special case of an Axes that lives in a regular rows by columns
grid of subplots instances.&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Axes&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
if you want to create an Axes at an arbitrary location, simply use
the add_axes() method which takes a list of [left, bottom, width,
height] values in 0-1 relative coordinates.&lt;/blockquote&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://farm8.staticflickr.com/7562/15668742154_478eb826ce_o.jpg"&gt;&lt;img alt="Dibujito contradictorio" src="https://farm8.staticflickr.com/7562/15668742154_5fa9d2804e_b.jpg" style="width: 100.0%;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Había hecho este dibujito cuando estaba viendo este tema, para
aplicarlo a un programa para linealizar termistores, pero veo que en
el dibujo la jerarquía de Figure y Canvas aparecen distinto en los dos
gráficos, no se si es un&amp;nbsp;error&amp;#8230;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="matplotlib"></category><category term="python"></category><category term="graficacion"></category></entry><entry><title>Comandos de Emacs y Spacemacs para recordar</title><link href="https://eldiegoefe.github.io/comandos-de-emacs-y-spacemacs-para-recordar.html" rel="alternate"></link><published>2014-07-31T10:00:00+02:00</published><updated>2014-07-31T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-07-31:/comandos-de-emacs-y-spacemacs-para-recordar.html</id><summary type="html">&lt;div class="section" id="yasnippets-company"&gt;
&lt;h2&gt;Yasnippets /&amp;nbsp;Company&lt;/h2&gt;
&lt;p&gt;En &lt;a class="reference external" href="https://github.com/syl20bnr/spacemacs/tree/master/layers/%2Bcompletion/auto-completion#key-bindings"&gt;la documentación de Spacemacs&lt;/a&gt; están los keybindings. No funciona más &lt;span class="caps"&gt;SPC&lt;/span&gt; i
s (que mostraba una lista de snippets habilitados para el modo&amp;nbsp;actual).&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;reemplaza la clave previa al punto por el contenido del snippet
correspondiente:&amp;nbsp;M-/&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="busqueda"&gt;
&lt;h2&gt;Búsqueda&lt;/h2&gt;
&lt;p&gt;La búsqueda habitual con i-search (C-s) se potencia al …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="yasnippets-company"&gt;
&lt;h2&gt;Yasnippets /&amp;nbsp;Company&lt;/h2&gt;
&lt;p&gt;En &lt;a class="reference external" href="https://github.com/syl20bnr/spacemacs/tree/master/layers/%2Bcompletion/auto-completion#key-bindings"&gt;la documentación de Spacemacs&lt;/a&gt; están los keybindings. No funciona más &lt;span class="caps"&gt;SPC&lt;/span&gt; i
s (que mostraba una lista de snippets habilitados para el modo&amp;nbsp;actual).&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;reemplaza la clave previa al punto por el contenido del snippet
correspondiente:&amp;nbsp;M-/&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="busqueda"&gt;
&lt;h2&gt;Búsqueda&lt;/h2&gt;
&lt;p&gt;La búsqueda habitual con i-search (C-s) se potencia al instalar &lt;a class="reference external" href="https://github.com/abo-abo/swiper"&gt;swiper&lt;/a&gt;, que
ofrece un listado de las lineas del documento donde se encuentran los resultados
de la&amp;nbsp;búsqueda.&lt;/p&gt;
&lt;p&gt;También se puede buscar con evil-search-forward (/) que es una variante de
i-search, pero sólo va a la próxima aparición de la búsqueda y hay que recordar
cómo ir a los resultados siguientes (C-s) y anteriores (C-r). Es menos&amp;nbsp;visual.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="movimiento"&gt;
&lt;h2&gt;Movimiento&lt;/h2&gt;
&lt;p&gt;Se puede saltar facilmente a letras o lineas que aparezcan en pantalla. Dentro
de Spacemacs las opciones para este tipo de salto están bajo el prefijo &lt;span class="caps"&gt;SPC&lt;/span&gt; j.
El sistema de búsqueda funciona así: primero se determina qué elemento se busca
(un caracter, una linea, etc). En caso de que sean letras se ingresa cuál es la
letra buscada. Como resultado el sistema resalta la ubicación de cada letra o
linea y muestra en cada lugar un código de dos letras, que se deben pulsar para
llegar hasta allí. Para ir&amp;nbsp;a:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;un caracter: &lt;span class="caps"&gt;SPC&lt;/span&gt; j j caracter. Por ejemplo, para mostrar las letras z: &lt;span class="caps"&gt;SPC&lt;/span&gt; j
j&amp;nbsp;z.&lt;/li&gt;
&lt;li&gt;una linea: &lt;span class="caps"&gt;SPC&lt;/span&gt; j l&amp;nbsp;linea.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Otros movimientos&amp;nbsp;habituales:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;gg: se mueve al principio del&amp;nbsp;documento&lt;/li&gt;
&lt;li&gt;15 gg: se mueve a la línea 15. Obviamente &amp;#8216;15&amp;#8217; es un&amp;nbsp;ejemplo.&lt;/li&gt;
&lt;li&gt;G: se mueve al final del&amp;nbsp;documento&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="ventanas"&gt;
&lt;h2&gt;Ventanas&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;dividir ventana verticalmente: &lt;span class="caps"&gt;SPC&lt;/span&gt; w&amp;nbsp;/&lt;/li&gt;
&lt;li&gt;dividir ventana horizontalmente: &lt;span class="caps"&gt;SPC&lt;/span&gt; w&amp;nbsp;-&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="dired"&gt;
&lt;h2&gt;Dired&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;convertir buffer en texto editable: C-x&amp;nbsp;C-q&lt;/li&gt;
&lt;li&gt;aceptar los cambios realizados y finalizar edición: C-c&amp;nbsp;C-c&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="enlaces"&gt;
&lt;h2&gt;Enlaces&lt;/h2&gt;
&lt;p&gt;Armé un snippet para colocar links más fácilmente (&lt;a class="reference external" href="https://eldiegoefe.github.io/emacs-y-restructuredtext.html"&gt;lo pueden ver aca&lt;/a&gt;), pero
igual dejo acá la sintaxis para poner hiperlinks en&amp;nbsp;restructuredText:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
External hyperlinks, like Python_.

.. _Python: http://www.python.org/

External hyperlinks, like `Python &amp;lt;http://www.python.org/&amp;gt;`_.

Wikipedia es `mi sitio favorito`_.

.. _mi sitio favorito: http://www.wikipedia.org/
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="indentacion"&gt;
&lt;h2&gt;Indentación&lt;/h2&gt;
&lt;p&gt;Primero se selecciona un bloque de texto y&amp;nbsp;luego:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;indent-region. Indenta todo, pero no resguarda las indentaciones que el bloque
pudo haber tenido, como es usual en los códigos de&amp;nbsp;programación.&lt;/li&gt;
&lt;li&gt;indent-rigidly (C-x &lt;span class="caps"&gt;TAB&lt;/span&gt;, &lt;span class="caps"&gt;SPC&lt;/span&gt; x &lt;span class="caps"&gt;TAB&lt;/span&gt;). Mueve todo el bloque manteniendo las
indentaciones que el bloque haya tenido antes. El movimiento se determina
presionando las flechas (o las teclas &amp;#8216;h&amp;#8217; y &amp;#8216;l&amp;#8217;) luego de invocar el&amp;nbsp;comando.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="ayuda"&gt;
&lt;h2&gt;Ayuda&lt;/h2&gt;
&lt;p&gt;Para pedir ayuda sobre una&amp;nbsp;función:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Si se sabe el nombre: C-h f&amp;nbsp;nombre-de-la-función&lt;/li&gt;
&lt;li&gt;Si se sabe el keybinding: C-h k&amp;nbsp;keybinding&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="caracteres"&gt;
&lt;h2&gt;Caracteres&lt;/h2&gt;
&lt;p&gt;Todo esto cambia de acuerdo al teclado (en el &lt;a class="reference external" href="http://deskthority.net/wiki/ErgoDox"&gt;Ergodox&lt;/a&gt; tengo teclas
programables) y con la distribución elegida. De todos modos, actualmente son las
siguientes: (uso la letra M para referirme más precisamente al Alt&amp;nbsp;Derecho)&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;lt; M . &amp;gt; M , ` M 0 \ M º
&lt;/pre&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://farm9.staticflickr.com/8577/16108048537_d0db2cc098_o.jpg"&gt;&lt;img alt="ergodox" src="https://farm9.staticflickr.com/8577/16108048537_1601cc1b60_b.jpg" style="width: 100.0%;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="blog"></category><category term="restructuredtext"></category><category term="cheat sheet"></category><category term="emacs"></category></entry><entry><title>Comunicacion USB con mbed</title><link href="https://eldiegoefe.github.io/comunicacion-usb-con-mbed.html" rel="alternate"></link><published>2014-07-31T10:00:00+02:00</published><updated>2014-07-31T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-07-31:/comunicacion-usb-con-mbed.html</id><summary type="html">&lt;p&gt;La comunicación mediante &lt;span class="caps"&gt;USB&lt;/span&gt; con microcontroladores me viene
resultando un escollo permanente. El protocolo en sí tiene una
complejidad que requiere más tiempo de estudio para comprenderlo que
el que estoy dispuesto a dedicarle, sobre todo porque empecé a leer
varias veces sobre el mismo y siempre me encuentro dando …&lt;/p&gt;</summary><content type="html">&lt;p&gt;La comunicación mediante &lt;span class="caps"&gt;USB&lt;/span&gt; con microcontroladores me viene
resultando un escollo permanente. El protocolo en sí tiene una
complejidad que requiere más tiempo de estudio para comprenderlo que
el que estoy dispuesto a dedicarle, sobre todo porque empecé a leer
varias veces sobre el mismo y siempre me encuentro dando vueltas
alrededor de detalles que parecen demasiado específicos y alejados de
lo que yo necesito lograr. Decidí hacer la prueba con mbed, ya que
tengo una placa kinetis frdm-kl25z de freescale, con la cual hay unos
ejemplos de comunicación que parecen muy&amp;nbsp;sencillos.&lt;/p&gt;
&lt;div class="section" id="microcontrolador"&gt;
&lt;h2&gt;Microcontrolador&lt;/h2&gt;
&lt;p&gt;Del lado del mbed el programa es el&amp;nbsp;siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;mbed.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;USBHID.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;//We declare a USBHID device. Input out output reports have a length of 8 bytes&lt;/span&gt;
&lt;span class="n"&gt;USBHID&lt;/span&gt; &lt;span class="nf"&gt;hid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//This report will contain data to be sent&lt;/span&gt;
&lt;span class="n"&gt;HID_REPORT&lt;/span&gt; &lt;span class="n"&gt;send_report&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;HID_REPORT&lt;/span&gt; &lt;span class="n"&gt;recv_report&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;Serial&lt;/span&gt; &lt;span class="nf"&gt;pc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;USBTX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;USBRX&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;send_report&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//Fill the report&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;send_report&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;send_report&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;//Send the report&lt;/span&gt;
        &lt;span class="n"&gt;hid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;send_report&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;//try to read a msg&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readNB&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;recv_report&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;pc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;recv: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;recv_report&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;pc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;recv_report&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;pc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;En el foro de mbed (&lt;a class="reference external" href="https://mbed.org/questions/1348/Whats-the-difference-between-read-and-re/"&gt;aca&lt;/a&gt;) preguntan cuál es la diferencia entre read y
readNB, y también entre send y&amp;nbsp;sendNB:&lt;/p&gt;
&lt;p&gt;If there is data to read, read and read_nb do the same, they return
that data. If not, readNB will return directly that there was no data
to read, while read blocks until there is&amp;nbsp;data.&lt;/p&gt;
&lt;p&gt;Send is pretty much the same, only then related to the output
buffer. If the output buffer is empty, both will simply put the data
in it and return. If it is full, non-blocking will tell there is no
space, while blocking will wait until there is&amp;nbsp;space.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="computadora"&gt;
&lt;h2&gt;Computadora&lt;/h2&gt;
&lt;p&gt;Del lado de la computadora, el programa en python&amp;nbsp;es:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;#Simple example on how to send and receive data to the Mbed over USB (on Linux) using pyUSB 1.0&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;usb.core&lt;/span&gt;    &lt;span class="c1"&gt;# the main USB module&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;usb.util&lt;/span&gt;    &lt;span class="c1"&gt;# utility functions&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sleep&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;

&lt;span class="c1"&gt;# handler called when a report is received&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;rx_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;recv: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tx_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;env: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;findHIDDevice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mbed_vendor_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mbed_product_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Find device&lt;/span&gt;
    &lt;span class="n"&gt;hid_device&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;idVendor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mbed_vendor_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;idProduct&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mbed_product_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;hid_device&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;No device connected&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mbed found&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;hid_device&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_kernel_driver_active&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;hid_device&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;detach_kernel_driver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;USBError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Could not detatch kernel driver: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# set the active configuration. With no arguments, the first&lt;/span&gt;
            &lt;span class="c1"&gt;# configuration will be the active one&lt;/span&gt;
            &lt;span class="n"&gt;hid_device&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_configuration&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;hid_device&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;USBError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Could not set configuration: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="n"&gt;endpoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hid_device&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mh"&gt;0x0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;

            &lt;span class="c1"&gt;#read the data&lt;/span&gt;
            &lt;span class="nb"&gt;bytes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hid_device&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;endpoint&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bEndpointAddress&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;rx_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="n"&gt;tx_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="n"&gt;hid_device&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="c1"&gt;# 1 es el endpoint&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# The vendor ID and product ID used in the Mbed program&lt;/span&gt;
    &lt;span class="n"&gt;mbed_vendor_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x1234&lt;/span&gt;
    &lt;span class="n"&gt;mbed_product_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x0006&lt;/span&gt;

    &lt;span class="c1"&gt;# Search the Mbed, attach rx handler and send data&lt;/span&gt;
    &lt;span class="n"&gt;findHIDDevice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mbed_vendor_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mbed_product_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="en-funcionamiento"&gt;
&lt;h2&gt;En&amp;nbsp;funcionamiento&lt;/h2&gt;
&lt;p&gt;En la imagen puede verse la pantalla de emacs donde se ve el envío y recepción de&amp;nbsp;datos.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://farm9.staticflickr.com/8635/16105028699_94525b70ba_o.jpg"&gt;&lt;img alt="Pantalla de emacs donde se ve el envío y recepción de datos." src="https://farm9.staticflickr.com/8635/16105028699_317b3557d9_b.jpg" style="width: 100.0%;" /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="problema-resuelto"&gt;
&lt;h2&gt;Problema&amp;nbsp;resuelto&lt;/h2&gt;
&lt;p&gt;Hay un problema al ejecutar el programa de la computadora (lo cual
hago usando ipython, tanto en modo terminal como en modo notebook) que
dispara el siguiente&amp;nbsp;error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;USBError: [Errno 13] Access denied (insufficient permissions)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Esto tiene que ver con los permisos para usar el &lt;span class="caps"&gt;USB&lt;/span&gt;. Una solución rápida es ejecutar el script de python con permisos de root, para lo cual alcanza con correr ipython anteponiendo&amp;nbsp;sudo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo ipython
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Recuerdo haber seguido unas instrucciones para habilitar el usuario a trabajar con el &lt;span class="caps"&gt;USB&lt;/span&gt;, pero no recuerdo dónde estaban y ahora no puedo encontrarlas (aunque salen muchas páginas si uno busca este&amp;nbsp;error).&lt;/p&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="mbed"></category><category term="usb"></category><category term="python"></category><category term="electronica"></category></entry><entry><title>Sincronizando con Git</title><link href="https://eldiegoefe.github.io/sincronizando-con-git.html" rel="alternate"></link><published>2014-07-31T10:00:00+02:00</published><updated>2014-07-31T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-07-31:/sincronizando-con-git.html</id><summary type="html">&lt;p&gt;Estuve tratando de escribir este blog desde dos computadoras
distintas. Armé el sitio desde una de ellas (una &lt;span class="caps"&gt;PC&lt;/span&gt; de escritorio)
siguiendo las instrucciones que puse en otro post y después subí el
sitio a github con un pull. Quedan armadas tres ramas (branches) en
los&amp;nbsp;repositorios:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;source&lt;/li&gt;
&lt;li&gt;master&lt;/li&gt;
&lt;li&gt;gh-pages …&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;Estuve tratando de escribir este blog desde dos computadoras
distintas. Armé el sitio desde una de ellas (una &lt;span class="caps"&gt;PC&lt;/span&gt; de escritorio)
siguiendo las instrucciones que puse en otro post y después subí el
sitio a github con un pull. Quedan armadas tres ramas (branches) en
los&amp;nbsp;repositorios:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;source&lt;/li&gt;
&lt;li&gt;master&lt;/li&gt;
&lt;li&gt;gh-pages&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Me cambié de máquina (a una laptop) e hice una copia de lo que había
subido clonando el supositorio, digo el repositorio remoto. Después me
puse a trabajar, armé nuevos post y corregí algunos otros. Hice el
agregado de los archivos al repositorio local y su correspondiente
&lt;em&gt;commit&lt;/em&gt;. Finalmente un &lt;em&gt;&amp;#8220;git push &amp;#8212;all&amp;#8221;&lt;/em&gt; y con eso creo que se actualizó
el repositorio&amp;nbsp;remoto.&lt;/p&gt;
&lt;p&gt;El problema se me presentó al querer sincronizar los archivos en la &lt;span class="caps"&gt;PC&lt;/span&gt;
de escritorio, para volver a editar desde allí al blog pero sin perder
la edición que había hecho desde la otra máquina. Tenía entonces que
actualizar los archivos locales con los que estaban en el repositorio
remoto. Mi confusión surgió porque aparecía un mensaje (que ya no
recuerdo y no puedo recuperar) en donde git me decía que había algún
problema con elegir la rama, o algo así. Yo lo que había intentado,
intuitivamente, era un &lt;em&gt;&amp;#8220;git pull &amp;#8212;all&amp;#8221;&lt;/em&gt; y también un &lt;em&gt;&amp;#8220;git pull&amp;#8221;&lt;/em&gt; y
&lt;em&gt;&amp;#8220;git pull source&amp;#8221;&lt;/em&gt; pero en todos los casos algún error aparecía. La
solución fue ejecutar, estando en la rama &lt;em&gt;source&lt;/em&gt; la siguiente
instrucción (sólo me había faltado agregar &lt;em&gt;origin&lt;/em&gt; en mis intentos),
que hace un fetch y un merge con la rama &lt;em&gt;source&lt;/em&gt; del repositorio
remoto (antes de ejecutarla, asegurarse de estar en la rama &lt;em&gt;source&lt;/em&gt;&amp;nbsp;local):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git pull origin &lt;span class="nb"&gt;source&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;¡Felicidad!&lt;/p&gt;
</content><category term="tecnicismos"></category><category term="git"></category><category term="blog"></category></entry><entry><title>Blog con Pelican y GitHub</title><link href="https://eldiegoefe.github.io/blog-con-pelican-y-github.html" rel="alternate"></link><published>2014-04-22T10:00:00+02:00</published><updated>2014-04-22T10:00:00+02:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-04-22:/blog-con-pelican-y-github.html</id><summary type="html">&lt;div class="section" id="actualizacion"&gt;
&lt;h2&gt;Actualización&lt;/h2&gt;
&lt;p&gt;Pueden ver una actualización de estas instrucciones en &lt;a class="reference external" href="https://eldiegoefe.github.io/actualizacion-de-las-instrucciones-para-armar-un-blog-con-pelican-y-github.html"&gt;en este nuevo&amp;nbsp;post&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="instrucciones"&gt;
&lt;h2&gt;Instrucciones&lt;/h2&gt;
&lt;p&gt;El sitio con las intrucciones sobre Pelican &lt;a class="reference external" href="http://pelican.readthedocs.org/en/3.3.0"&gt;es este&lt;/a&gt;. Casi todo el
contenido siguiente está basado en las instrucciones de &lt;a class="reference external" href="http://ntanjerome.org/blog/how-to-setup-github-user-page-with-pelican/"&gt;Nicholas Tan
Jerome&lt;/a&gt;. Para instalar Pelican se puede usar &amp;#8220;pip&amp;#8221;, más adelante hay
más detalles, pero …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="actualizacion"&gt;
&lt;h2&gt;Actualización&lt;/h2&gt;
&lt;p&gt;Pueden ver una actualización de estas instrucciones en &lt;a class="reference external" href="https://eldiegoefe.github.io/actualizacion-de-las-instrucciones-para-armar-un-blog-con-pelican-y-github.html"&gt;en este nuevo&amp;nbsp;post&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="instrucciones"&gt;
&lt;h2&gt;Instrucciones&lt;/h2&gt;
&lt;p&gt;El sitio con las intrucciones sobre Pelican &lt;a class="reference external" href="http://pelican.readthedocs.org/en/3.3.0"&gt;es este&lt;/a&gt;. Casi todo el
contenido siguiente está basado en las instrucciones de &lt;a class="reference external" href="http://ntanjerome.org/blog/how-to-setup-github-user-page-with-pelican/"&gt;Nicholas Tan
Jerome&lt;/a&gt;. Para instalar Pelican se puede usar &amp;#8220;pip&amp;#8221;, más adelante hay
más detalles, pero como referencia veloz basta decir que se puede
hacer sencillamente (en la rama &amp;#8220;source&amp;#8221; y desde el &lt;span class="caps"&gt;ENV&lt;/span&gt; que se creará
más&amp;nbsp;adelante):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt; &lt;span class="gp"&gt;$&lt;/span&gt; pip install pelican
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;La idea para trabajar Pelican con Git es tener un directorio para el
repositorio con el nombre de la página, y dentro de él un directorio
para el virtualenv donde va a correr el Pelican. Por ejemplo, algo así
(más adelante se explica en qué ramas del repositorio se almacenará el
código fuente del sitio, y las páginas del blog propiamente&amp;nbsp;dichas):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ~/documentos/nombreUsuario.github.io      &lt;span class="c1"&gt;# para el sitio&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; ~/documentos/nombreUsuario.github.io/ENV  &lt;span class="c1"&gt;# para el env&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Primero armo un repositorio (vacío) en GitHub para alojar mi blog
personal. GitHub ofrece la dirección nombreUsuario.github.io con este
propósito. Luego clono el sitio en un directorio local donde se desea
mantener el&amp;nbsp;blog:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; ~/documentos
&lt;span class="gp"&gt;$&lt;/span&gt; git clone https://github.com/nombreUsuario/nombreUsuario.github.io
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como el repositorio lo creé vacío, sin más que el &lt;span class="caps"&gt;README&lt;/span&gt;.md, entonces
éste es el único archivo que existe en el directorio&amp;nbsp;~/documentos/nombreUsuario.github.io&lt;/p&gt;
&lt;p&gt;Para instalar el virtualenv (medio ambiente virtual) en el directorio&amp;nbsp;deseado:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; virtualenv ~/documentos/nombreUsuario.github.io/ENV
&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; ~/documentos/nombreUsuario.github.io/ENV
&lt;span class="gp"&gt;$&lt;/span&gt; . bin/activate
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;La última instrucción puede reemplazarse por &amp;#8220;source &lt;span class="caps"&gt;ENV&lt;/span&gt;/bin/activate&amp;#8221;&lt;/p&gt;
&lt;p&gt;Esas instrucciones dejan el entorno listo con un Python funcional (y
sus librerías). Los directorios instalados dentro de &lt;span class="caps"&gt;ENV&lt;/span&gt;&amp;nbsp;son:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;bin&lt;/li&gt;
&lt;li&gt;include&lt;/li&gt;
&lt;li&gt;lib&lt;/li&gt;
&lt;li&gt;lib64&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La última orden (. bin/activate) activa este entorno y cambia el
prompt (que aparecerá precedido de &lt;span class="caps"&gt;ENV&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;El directorio &lt;span class="caps"&gt;ENV&lt;/span&gt; no necesita ser mantenido en el repositorio de
GitHub (eso sí, si se trabaja el blog desde distintas computadoras,
hay que tenerlo instalado en cada una), así que conviene agregarlo al
.gitignore con la siguiente linea en ese archivo (&lt;strong&gt;igual finalmente
lo saqué, así al clonar el repositorio del blog en una computadora
nueva no lo tengo que instalar&lt;/strong&gt;):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;span class="caps"&gt;ENV&lt;/span&gt;/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tampoco interesa mantener los archivos de backup así que también
se puede agregar este&amp;nbsp;renglón:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;*~&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Con git status veremos que estamos en la rama &amp;#8220;master&amp;#8221; y que falta el
commit para agregar el archivo .gitignore. Entonces&amp;nbsp;hacemos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt; &lt;span class="gp"&gt;$&lt;/span&gt; git add .
&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt; &lt;span class="gp"&gt;$&lt;/span&gt; git commit -m &lt;span class="s2"&gt;&amp;quot;Commit inicial&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nuestra rama local de master queda adelantada respecto de la rama
master en el repo externo. Esto lo avisa el sistema ante la última
orden&amp;nbsp;ingresada.&lt;/p&gt;
&lt;p&gt;Dado que al repositorio externo no vamos a necesitar subir los
archivos de Pelican y los que surjan de la configuración del sitio,
entonces instalamos este programa en una nueva rama que llamaré&amp;nbsp;&amp;#8220;source&amp;#8221;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt; &lt;span class="gp"&gt;$&lt;/span&gt; git branch &lt;span class="nb"&gt;source&lt;/span&gt;
&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt; &lt;span class="gp"&gt;$&lt;/span&gt; git checkout &lt;span class="nb"&gt;source&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(alternativamente estas dos instrucciones se pueden condensar en una
sola: git checkout -b&amp;nbsp;source)&lt;/p&gt;
&lt;p&gt;Para instalar Pelican hay 3 opciones (y no hay que olvidarse que se
instala en el &lt;span class="caps"&gt;ENV&lt;/span&gt;). Hay que estar atento a que no haya errores, porque
sino se instala mal y, por ejemplo, más tarde puede no funcionar &amp;#8220;make&amp;nbsp;serve&amp;#8221;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt; &lt;span class="gp"&gt;$&lt;/span&gt; pip install pelican     &lt;span class="c1"&gt;# opción 1&lt;/span&gt;
&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt; &lt;span class="gp"&gt;$&lt;/span&gt; easy_install pelican    &lt;span class="c1"&gt;# opción 2&lt;/span&gt;
&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt; &lt;span class="gp"&gt;$&lt;/span&gt; pip install -e git://github.com/getpelican/pelican#egg&lt;span class="o"&gt;=&lt;/span&gt;pelican
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;La primera vez tras la instalación se debe ejecutar la orden
&lt;strong&gt;pelican-quickstart&lt;/strong&gt; para configurarlo (va el guión entre las dos
palabras). Tras ese comando, y tras contestar todas las preguntas que
aparecen, no solamente se guarda la configuración deseada (en los
archivos pelicanconfig.py y publishconf.py), sino que se generan todos
los archivos que Pelican necesita (incluso dos directorios nuevos:
content y output). El site url que elijo es
&lt;a class="reference external" href="http://nombreUsuario.github.io"&gt;http://nombreUsuario.github.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;El contenido de pelicanconf.py tras responder a las preguntas de
pelican-quickstart y además editar manualmente el archivo para
completar los datos, queda&amp;nbsp;así:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;El Diego Efe&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Certezas Dudosas&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://nombreUsuario.github.io&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;America/Argentina/Buenos_Aires&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;es&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# Feed generation is usually not desired when developing&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;TRANSLATION_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;

&lt;span class="c1"&gt;# Blogroll&lt;/span&gt;
&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Pelican&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://getpelican.com/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Python.org&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://python.org/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Jinja2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://jinja.pocoo.org/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;You can modify those links in your config file&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c1"&gt;# Social widget&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Twitter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://twitter.com/nombreUsuario&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Github&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/nombreUsuario&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Facebook&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://www.facebook.com/nombreUsuario&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Google+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://plus.google.com/+DiegoEfe&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="c1"&gt;# Uncomment following line if you want document-relative URLs when developing&lt;/span&gt;
&lt;span class="c1"&gt;#RELATIVE_URLS = True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Y el contenido de publishconf.py queda&amp;nbsp;así:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="c1"&gt;# This file is only used if you use `make publish` or&lt;/span&gt;
&lt;span class="c1"&gt;# explicitly specify it as your config file.&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;curdir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pelicanconf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://nombreUsuario.github.io&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;RELATIVE_URLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;

&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;feeds/all.atom.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;feeds/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;.atom.xml&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DELETE_OUTPUT_DIRECTORY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;

&lt;span class="c1"&gt;# Following items are often useful when publishing&lt;/span&gt;

&lt;span class="c1"&gt;#DISQUS_SITENAME = &amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;#GOOGLE_ANALYTICS = &amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Guardo un post armado en Markdown o restructuredText dentro del
directorio content, así cuando vaya a generar el sitio voy a tener un
contenido (para que ver algo cuando cargue el&amp;nbsp;blog).&lt;/p&gt;
&lt;p&gt;Genero el sitio con make html (procesa todos los archivos del
directorio content y aloja el sitio resultante en el directorio
output) y ejecuto el servidor local con make&amp;nbsp;serve:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt; &lt;span class="gp"&gt;$&lt;/span&gt; make html
&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt; &lt;span class="gp"&gt;$&lt;/span&gt; make serve
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;El sitio lo puedo visitar en &lt;a class="reference external" href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;. Veo que tiene un
problema para encontrar el &lt;span class="caps"&gt;CSS&lt;/span&gt;, no sale bien formateado. Sin embargo,
luego cuando subo el sitio al repositorio externo, corroboro que la
página carga&amp;nbsp;bien.&lt;/p&gt;
&lt;p&gt;Una alternativa, que permite que la edición se refleje inmediatamente
en el sitio, es usar la siguientes dos instrucciones, la primera
combina &lt;em&gt;make html&lt;/em&gt; junto con &lt;em&gt;make serve&lt;/em&gt; (el sitio se regenera ante
cualquier edición de su contenido, y permanece accesible en el
localhost) y la segunda es para detener el&amp;nbsp;servicio.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt; &lt;span class="gp"&gt;$&lt;/span&gt; make devserver
&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt; &lt;span class="gp"&gt;$&lt;/span&gt; ./develop_server.sh stop
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Voy a agregar todo al branch&amp;nbsp;source:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt; &lt;span class="gp"&gt;$&lt;/span&gt; git add .
&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt; &lt;span class="gp"&gt;$&lt;/span&gt; git commit -m &lt;span class="s2"&gt;&amp;quot;Commit inicial de la rama source&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lo que sigue es casi textual de la página de &lt;a class="reference external" href="http://ntanjerome.org/blog/how-to-setup-github-user-page-with-pelican/"&gt;la página de Nicholas&lt;/a&gt;,
se explica como hacer push del sitio al repositorio&amp;nbsp;externo:&lt;/p&gt;
&lt;p&gt;Supongamos estar en la rama &amp;#8220;source&amp;#8221;. Lo que se verá al acceder al
blog, es lo que esté en la rama &amp;#8220;master&amp;#8221;, así que hay que copiar allí
las páginas html de la carpeta output. Nicholas propone usar un script
llamado ghp-import para facilitar esa tarea. Este script exporta el
contenido de la carpeta que se menciona en la linea de comandos (al
ejecutarlo) hacia la rama &amp;#8220;gh-pages&amp;#8221;. Por eso es necesario durante la
puesta a punto inicial, crear una rama con ese nombre antes de correr
el script, y luego hacer un merge desde la rama &amp;#8220;master&amp;#8221; con la rama&amp;nbsp;&amp;#8220;gh-pages&amp;#8221;&lt;/p&gt;
&lt;p&gt;Si no está instalado ghp-import, se puede instalar&amp;nbsp;con:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt; &lt;span class="gp"&gt;$&lt;/span&gt; pip install ghp-import
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finalmente, eston son los pasos&amp;nbsp;restantes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git branch gh-pages   &lt;span class="c1"&gt;# crea la rama gh-branches&lt;/span&gt;
&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ghp-import output     &lt;span class="c1"&gt;# exporta la carpeta output desde la rama actual (source) hacia la rama gh-pages&lt;/span&gt;
&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git checkout master   &lt;span class="c1"&gt;# cambia el head a la rama master&lt;/span&gt;
&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git merge gh-pages    &lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git push --all        &lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Cuando hice el merge creo que no estaba más .gitignore en la rama
master. Así que lo creé de vuelta, tuve que agregarlo y&amp;nbsp;comitearlo.&lt;/p&gt;
&lt;p&gt;Hay que esperar un rato hasta que el sitio esté accesible (sólo la
primera vez, las siguientes actualizaciones que se hagan permiten
acceder al nuevo contenido&amp;nbsp;inmediatamente).&lt;/p&gt;
&lt;p&gt;Se podría hacer un push que incluya sólo el contenido de la rama
&amp;#8220;master&amp;#8221;, pero hacer un push de todas las ramas no molesta a&amp;nbsp;nadie.&lt;/p&gt;
&lt;p&gt;GitHub pregunta el nombre de usuario y la contraseña al hacer el push
al repositorio&amp;nbsp;online.&lt;/p&gt;
&lt;p&gt;La página para acceder al blog es&amp;nbsp;nombreUsuario.github.io&lt;/p&gt;
&lt;div class="section" id="agregado-de-posts"&gt;
&lt;h3&gt;Agregado de&amp;nbsp;posts&lt;/h3&gt;
&lt;p&gt;Al agregar nuevos posts (hechos con restructuredText o Markup, que
deben ser guardados en el directorio &amp;#8220;content&amp;#8221;) es necesario efectuar
los siguientes pasos (suponiendo que uno está actualmente en la rama&amp;nbsp;&amp;#8220;source&amp;#8221;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; /path/to/blog/ENV
&lt;span class="gp"&gt;$&lt;/span&gt; . bin/activate    &lt;span class="c1"&gt;# activa el entorno para que funcionen los progs de python (make serve, ghp-import, etc)&lt;/span&gt;
&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; make html             &lt;span class="c1"&gt;# genera los archivos html que van a la carpeta &amp;quot;output&amp;quot;&lt;/span&gt;
&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ghp-import output     &lt;span class="c1"&gt;# exporta la carpeta output desde la rama actual (source) hacia la rama gh-pages&lt;/span&gt;
&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git add .             &lt;span class="c1"&gt;# sin add y commit no podremos cambiar a otra rama&lt;/span&gt;
&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git commit -m &lt;span class="s2"&gt;&amp;quot;mensaje del commit&amp;quot;&lt;/span&gt;
&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git checkout master   &lt;span class="c1"&gt;# cambia el head a la rama master&lt;/span&gt;
&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git merge gh-pages    &lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git push --all        &lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ultimos-detalles"&gt;
&lt;h3&gt;Ultimos&amp;nbsp;detalles&lt;/h3&gt;
&lt;p&gt;Para usar el tema Elegant hay que instalar Beautiful Soup y para usar
el plugin que permite &lt;a class="reference external" href="https://pypi.python.org/pypi/pelican_youtube"&gt;embeber videos de youtube&lt;/a&gt;  hay que&amp;nbsp;instalarlo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt; &lt;span class="gp"&gt;$&lt;/span&gt; pip install beautifulsoup4
&lt;span class="gp gp-VirtualEnv"&gt;(ENV)&lt;/span&gt; &lt;span class="gp"&gt;$&lt;/span&gt; pip install pelican-youtube
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="problemas-con-github"&gt;
&lt;h3&gt;Problemas con&amp;nbsp;GitHub&lt;/h3&gt;
&lt;p&gt;Puede suceder que tras esperar media hora, luego de subir el sitio,
siga dando un mensaje de error (404) al intentar visitarlo en su
dirección final. Aparentemente esto puede evitarse si la subida se
realiza mediante &lt;span class="caps"&gt;SSH&lt;/span&gt; en vez de hacerlo mediante &lt;span class="caps"&gt;HTTP&lt;/span&gt;. Esto lo advertí
en las instrucciones de &lt;a class="reference external" href="http://xlson.com/2010/11/09/getting-started-with-github-pages.html"&gt;Leonard Axelsson&lt;/a&gt;. Las instrucciones para
generar las llaves &lt;span class="caps"&gt;SSH&lt;/span&gt; (&lt;span class="caps"&gt;SSH&lt;/span&gt; keys) están en &lt;a class="reference external" href="https://help.github.com/articles/generating-ssh-keys/"&gt;esta ayuda de GitHub&lt;/a&gt;,
mientras que el cambio propiamente dicho se explica en &lt;a class="reference external" href="https://help.github.com/articles/changing-a-remote-s-url/"&gt;Changing a
remote&amp;#8217;s &lt;span class="caps"&gt;URL&lt;/span&gt;&lt;/a&gt;, también en&amp;nbsp;GitHub.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="tutorial"></category><category term="blog"></category><category term="git"></category><category term="pelican"></category></entry><entry><title>Cuando uno quiere A y termina haciendo B</title><link href="https://eldiegoefe.github.io/cuando-uno-quiere-a-y-termina-haciendo-b.html" rel="alternate"></link><published>2014-02-11T10:30:00+01:00</published><updated>2014-02-11T10:30:00+01:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-02-11:/cuando-uno-quiere-a-y-termina-haciendo-b.html</id><summary type="html">&lt;p&gt;Estoy leyendo sobre &lt;a class="reference external" href="http://ipython.org/"&gt;IPython&lt;/a&gt;, que instalé en
Windows a través de
&lt;a class="reference external" href="https://store.continuum.io/cshop/anaconda/"&gt;Anaconda&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Durante ese viajo me enteré de que Windows tiene dos shells, el más
viejo y limitado es &amp;#8216;cmd.exe&amp;#8217; mientras que el recomendado es &amp;#8216;Windows
PowerShell&amp;#8217;, ya que tiene los mismos comandos que Unix. En cualquiera
de los …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Estoy leyendo sobre &lt;a class="reference external" href="http://ipython.org/"&gt;IPython&lt;/a&gt;, que instalé en
Windows a través de
&lt;a class="reference external" href="https://store.continuum.io/cshop/anaconda/"&gt;Anaconda&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Durante ese viajo me enteré de que Windows tiene dos shells, el más
viejo y limitado es &amp;#8216;cmd.exe&amp;#8217; mientras que el recomendado es &amp;#8216;Windows
PowerShell&amp;#8217;, ya que tiene los mismos comandos que Unix. En cualquiera
de los dos, IPython se corre con la orden &lt;em&gt;ipython&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Hay ayudas de IPython&amp;nbsp;en:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ipython.org/documentation.html"&gt;Documentación&amp;nbsp;Oficial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/tagged/ipython"&gt;StackOverflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://mail.scipy.org/mailman/listinfo/ipython-user"&gt;Lista de&amp;nbsp;correos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;¡Debe haber muchas&amp;nbsp;más!&lt;/p&gt;
&lt;div class="section" id="sos-un-nabo-cronica-de-una-batalla-menor"&gt;
&lt;h2&gt;Sos un nabo. Crónica de una batalla&amp;nbsp;menor.&lt;/h2&gt;
&lt;p&gt;Mientras leía sobre Python un pájaro carpintero taladraba mi cabeza
repitiéndome: &lt;em&gt;sos un nabo, todavía no pudiste reinstalar Linux&lt;/em&gt;. Por
lo cual debí poner manos a la obra para brindarle un hogar al
Pingüino. Tras infructuosos intentos de instalación de &lt;a class="reference external" href="http://www.linuxmint.com/"&gt;Linux Mint&lt;/a&gt; en sus versiones Mate y Cinnamon usando
&lt;a class="reference external" href="http://www.pendrivelinux.com/yumi-multiboot-usb-creator/"&gt;&lt;span class="caps"&gt;YUMI&lt;/span&gt; – Multiboot &lt;span class="caps"&gt;USB&lt;/span&gt; Creator&lt;/a&gt; como
instalador de LiveUSB, cosa que muchas veces me había funcionado
perfecto en el pasado, terminé absorto en la lectura de sitios sobre
el nuevo estándar de booteo &lt;span class="caps"&gt;UEFI&lt;/span&gt;, instrucciones sobre habilitaciones y
deshabilitaciones de &lt;span class="caps"&gt;CSM&lt;/span&gt; (Compatibility Support Module) y otras
términos de Magia Oscura. Finalmente terminé optando por instalar
&lt;a class="reference external" href="https://fedoraproject.org/"&gt;Fedora&lt;/a&gt; en su versión 20 y leyendo
sobre las recomendaciones de particionado que son distintas a las de
Linux Mint. No fue sencillo, finalmente decidí dejar el disco de
estado sólido de 128 &lt;span class="caps"&gt;GB&lt;/span&gt; exclusivamente destinado a Windows, y permitir
que el instalador de Fedora organice las particiones que se le ocurra
armar por defecto en el disco de 500 &lt;span class="caps"&gt;GB&lt;/span&gt;, por lo cual todo ese disco
recibió un backup ya que todos los archivos se iban a perder con el
formateo. &lt;em&gt;Lo bueno es que tras raspar y raspar las superficies de las
paredes con las que nos golpeamos la cabeza siempre algo se termina
aprendiendo&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Ahí descubrí que no todas las distribuciones requieren la misma
organización en el disco rígido. Linux Mint arma dos particiones para
funcionar: la partición &lt;cite&gt;root&lt;/cite&gt; (punto de montaje básico de todo el
sistema de archivos &amp;#8220;/&amp;#8221;) y la partición &lt;cite&gt;swap&lt;/cite&gt;. A esto Fedora le
agrega una partición &lt;cite&gt;boot&lt;/cite&gt; (/boot) de 500 &lt;span class="caps"&gt;MB&lt;/span&gt;, y una partición &lt;cite&gt;efi&lt;/cite&gt;
(/boot/efi) de 200 &lt;span class="caps"&gt;MB&lt;/span&gt; &amp;#8212;ambas obviamente para el arranque del
sistema&amp;#8212; y esto es lo interesante, también una &amp;#8216;partición del
usuario&amp;#8217; (/home) donde se guardaran todos los datos (música,
documentos, etc), de modo tal que cuando se necesite reinstalar el
sistema no se pierdan. Esto es lo mismo que conviene hacer con
Windows, instalar una partición &amp;#8220;del sistema&amp;#8221; (Disco C) y armar otra
para los datos (Disco&amp;nbsp;D).&lt;/p&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="boot"></category><category term="instalacion"></category><category term="windows"></category><category term="grub"></category></entry><entry><title>Descubriendo Gnome</title><link href="https://eldiegoefe.github.io/descubriendo-gnome.html" rel="alternate"></link><published>2014-02-09T11:00:00+01:00</published><updated>2014-02-09T11:00:00+01:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-02-09:/descubriendo-gnome.html</id><summary type="html">&lt;p&gt;Empecé a tomarle el gustito a Fedora y Gnome. Al principio (24 horas
atrás) el mouse parecía haber alcanzado un inoportuno grado de
independencia porque se tendía a ir a la esquina superior izquierda
(la &amp;#8220;hot corner&amp;#8221;) y se habilitaba el menú de Actividades. Para
solucionarlo encontré &lt;a class="reference external" href="https://extensions.gnome.org"&gt;un sitio&lt;/a&gt; desde …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Empecé a tomarle el gustito a Fedora y Gnome. Al principio (24 horas
atrás) el mouse parecía haber alcanzado un inoportuno grado de
independencia porque se tendía a ir a la esquina superior izquierda
(la &amp;#8220;hot corner&amp;#8221;) y se habilitaba el menú de Actividades. Para
solucionarlo encontré &lt;a class="reference external" href="https://extensions.gnome.org"&gt;un sitio&lt;/a&gt; desde
el cual se instalan las extensiones de &lt;span class="caps"&gt;GNOME&lt;/span&gt;, que es un gran
descubrimiento en sí&amp;nbsp;mismo.&lt;/p&gt;
&lt;p&gt;Primero lo primero: instale &amp;#8216;No Topleft Hot Corner&amp;#8217;. Me resulto
llamativo que la instalación se realiza moviendo un switch que aparece
junto al nombre de la extensión desde la propia página web (y que
tiene también el texto &lt;span class="caps"&gt;ON&lt;/span&gt; u &lt;span class="caps"&gt;OFF&lt;/span&gt; de acuerdo a si ya esta instalado o
no). Un detalle es que me anduvo bien desde Firefox, pero no desde
Chrome (me doy bronca, porque todavía no instalé Opera, y es mi
navegador de&amp;nbsp;cabecera).&lt;/p&gt;
&lt;p&gt;La segunda extensión que instale fue &amp;#8216;ShellTile&amp;#8217; que permite apilar o
hacer tile (¿cuadricular? ¿como se dice esto en castellano?) de las
ventanas abiertas en un escritorio. Funciona apretando &lt;span class="caps"&gt;CTRL&lt;/span&gt; y moviendo
una ventana encima de otra. Es buenísimo para tener el libro-tutorial
de IPython abierto en el costado izquierdo y el browser con IPython
corriendo en el costado derecho. ¡Da gusto trabajar con el espacio
visual bien&amp;nbsp;organizado!&lt;/p&gt;
&lt;p&gt;De paso quiero agradecer a la gente de
&lt;a class="reference external" href="mailto:argentina&amp;#64;lists.fedoraproject.org"&gt;argentina&amp;#64;lists.fedoraproject.org&lt;/a&gt; por darme unas indicaciones
buenísimas para usar linux y por recomendarme &lt;a class="reference external" href="http://ask.fedoraproject.org"&gt;Ask Fedora&lt;/a&gt; para consultar dudas con la comunidad
que también tiene una sección en&amp;nbsp;español.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actualización&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tras un corto período de uso, y por recomendación de mi amigo Jimi
Medus tras una consulta mía con el tema del &amp;#8220;tiling&amp;#8221;, migré desde
Gnome a &lt;span class="caps"&gt;KDE&lt;/span&gt;. &lt;span class="caps"&gt;KDE&lt;/span&gt; es mucho más configurable, tiene un modo que me
encanta de adaptar el tamaño de las ventanas de programas a un cuarto
o un medio del monitor, y además tiene un sistema de &amp;#8220;actividades&amp;#8221; que
permite setear varios escritorios distintos cada uno con sus
aplicaciones y fondo de pantalla, útil para adaptarlos a distintas
tareas (un escritorio para multimedia, otro para programación, otro
para navegación y torrents, etc). Estas actividades permanecen luego
de reiniciar el sistema, así que alcanza con configurarlos una sola
vez. Incluso al arrancarse, el sistema carga los programas que estaban
en memoria al momento de&amp;nbsp;apagar.&lt;/p&gt;
</content><category term="tecnicismos"></category><category term="linux"></category><category term="fedora"></category><category term="gnome"></category><category term="kde"></category></entry><entry><title>Dónde están los programas en Linux</title><link href="https://eldiegoefe.github.io/donde-estan-los-programas-en-linux.html" rel="alternate"></link><published>2014-02-09T10:30:00+01:00</published><updated>2014-02-09T10:30:00+01:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-02-09:/donde-estan-los-programas-en-linux.html</id><summary type="html">&lt;p&gt;Los directorios típicos&amp;nbsp;son:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;cite&gt;/bin&lt;/cite&gt; ejecutables (Essential commands that everyone needs to use at
any&amp;nbsp;time)&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;/usr&lt;/cite&gt; A complex hierarchy of additional programs and&amp;nbsp;files.&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;/usr/bin&lt;/cite&gt; normal user executables. The commands that aren’t
essential for users but are&amp;nbsp;useful&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;/sbin&lt;/cite&gt; (superuser core executables) The commands the system
Administrator …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Los directorios típicos&amp;nbsp;son:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;cite&gt;/bin&lt;/cite&gt; ejecutables (Essential commands that everyone needs to use at
any&amp;nbsp;time)&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;/usr&lt;/cite&gt; A complex hierarchy of additional programs and&amp;nbsp;files.&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;/usr/bin&lt;/cite&gt; normal user executables. The commands that aren’t
essential for users but are&amp;nbsp;useful&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;/sbin&lt;/cite&gt; (superuser core executables) The commands the system
Administrator needs access&amp;nbsp;to.&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;/usr/sbin&lt;/cite&gt; (superuser executables). The commands that aren’t
essential for Administrators but are&amp;nbsp;useful.&lt;/li&gt;
&lt;li&gt;Library files: (semi-equivalent to windows dll&amp;#8217;s) &lt;cite&gt;/lib&lt;/cite&gt;,
&lt;cite&gt;/usr/lib&lt;/cite&gt;,&amp;nbsp;etc.&lt;/li&gt;
&lt;li&gt;Configuration files: &lt;cite&gt;/etc/&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;/run/media&lt;/cite&gt; es en donde se montan las unidades portátiles, como el
rígido externo y el&amp;nbsp;pendrive&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;También se le puede preguntar al sistema dónde está instalado un&amp;nbsp;paquete:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; whereis jekyll
&lt;span class="go"&gt;jekyll: /home/diego/.rvm/gems/ruby-2.0.0-p353/bin/jekyll&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="linux"></category><category term="fedora"></category></entry><entry><title>Instrucciones para armar un blog geek</title><link href="https://eldiegoefe.github.io/instrucciones-para-armar-un-blog-geek.html" rel="alternate"></link><published>2014-02-09T10:30:00+01:00</published><updated>2014-02-09T10:30:00+01:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-02-09:/instrucciones-para-armar-un-blog-geek.html</id><summary type="html">&lt;p&gt;En mi caso, alcanzar un estado zen requiere atravesar travesías
barrocas. Mientras miraba cosas de IPython llegué a &lt;a class="reference external" href="http://jakevdp.github.io/"&gt;Pythonic
Perambulations&lt;/a&gt;. Me gustó el contenido
(muestra cómo armar ventanas de browsers con matplotlib interactivo),
me gustó el diseño y me llamó la atención el dominio &lt;em&gt;github.io&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Blogs como el de …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En mi caso, alcanzar un estado zen requiere atravesar travesías
barrocas. Mientras miraba cosas de IPython llegué a &lt;a class="reference external" href="http://jakevdp.github.io/"&gt;Pythonic
Perambulations&lt;/a&gt;. Me gustó el contenido
(muestra cómo armar ventanas de browsers con matplotlib interactivo),
me gustó el diseño y me llamó la atención el dominio &lt;em&gt;github.io&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Blogs como el de &lt;a class="reference external" href="http://jakevdp.github.io"&gt;Jake Vanderplas&lt;/a&gt; se
arman con un motor llamado&amp;nbsp;Jekyll.&lt;/p&gt;
&lt;p&gt;(&lt;em&gt;editado: Jake migró su sitio a Pelican, que está escrito en
Python. Armé un post para explicar cómo instalarlo y usarlo en
conjunción con las páginas personales de GitHub, ver `Blog con Pelican
y GitHub
&amp;lt;http://eldiegoefe.github.io/blog-con-pelican-y-github.html&amp;gt;`_.&lt;/em&gt; &lt;strong&gt;Por
ende este post queda desactualizado, además de haber quedado
incompleto o quizás con errores&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;Jekyll está escrito en Ruby, que permite desentendernos de los
sistemas de publicación de contenidos (como Wordpress, con el que armé
sitios como &lt;a class="reference external" href="http://policiclos.com.ar"&gt;Policiclos&lt;/a&gt; y a los cuales
terminé perdiendo acceso por culpa de un hacker indonesio que me
cambió la página de acceso al panel de control del blog por un texto
burlón en un ingles todo despatarrado, por lo cual el sitio está sin
actualizar desde hace un par de años (igual ahora en el año 2014 el
servicio de nombres en Argentina empieza a ser pago, con lo cual
hubiese sido bastante posible que este -y otros blogs- fuesen dados de
baja). Con Jekyll la idea es que uno escribe texto plano (no hace
falta escribir en html), se desentiende de la tarea de actualizar con
cierta frecuencia el manejador de contenidos (actualizar wordpress),
crea sitios estáticos que se cargan muy rápido (y pueden lucir muy
lindos) y obtiene más flexibilidad que las propuestas de blogging
populares: &lt;a class="reference external" href="http://www.blogger.com"&gt;Blogger&lt;/a&gt;, &lt;a class="reference external" href="http://www.wordpress.com"&gt;Wordpress&lt;/a&gt;, &lt;a class="reference external" href="http://www.tumblr.com"&gt;Tumblr&lt;/a&gt;,&amp;nbsp;etc.&lt;/p&gt;
&lt;p&gt;Pero nunca nada es tan fácil como dicen por ahí. Quizás con las
instrucciones siguientes puedan replicar una versión corta de lo que
ha sido mi experiencia. Se ahorrarían así varias horas de intentos&amp;nbsp;fallidos:&lt;/p&gt;
&lt;p&gt;Toda la información está en &lt;a class="reference external" href="http://jekyllrb.com"&gt;la web de Jekyll&lt;/a&gt;
(sin embargo, continúo con la síntesis de lo que yo hice). Hay un gran
tutorial escrito por Andrew Munsell: &lt;a class="reference external" href="https://learn.andrewmunsell.com/learn/jekyll-by-example"&gt;Jekyll by example&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="instalacion-de-software-requerido"&gt;
&lt;h2&gt;Instalación de Software&amp;nbsp;Requerido&lt;/h2&gt;
&lt;p&gt;Para instalar Jekyll se necesita Ruby y RubyGems. Bajé los últimos
paquetes de ambos, los descomprimí y compilé pero, seguramente por mi
falta de experiencia en Linux, la cosa no marchaba. Terminé instalando
&lt;a class="reference external" href="https://rvm.io"&gt;&lt;span class="caps"&gt;RVM&lt;/span&gt; (Ruby Version Manager&lt;/a&gt;. Para usarlo abren un
terminal de Linux y piden una lista de todos los interpretes de Ruby
que &lt;span class="caps"&gt;RVM&lt;/span&gt; es capaz de instalar en su&amp;nbsp;sistema.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; rvm list known
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A mi me dio un listado que incluía (pero no se limitaba)&amp;nbsp;a:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;#&lt;/span&gt; MRI Rubies
&lt;span class="go"&gt;[ruby-]1.8.6[-p420]&lt;/span&gt;
&lt;span class="go"&gt;[ruby-]1.8.7[-p374]&lt;/span&gt;
&lt;span class="go"&gt;[ruby-]1.9.1[-p431]&lt;/span&gt;
&lt;span class="go"&gt;[ruby-]1.9.2[-p320]&lt;/span&gt;
&lt;span class="go"&gt;[ruby-]1.9.3[-p484]&lt;/span&gt;
&lt;span class="go"&gt;[ruby-]2.0.0-p195&lt;/span&gt;
&lt;span class="go"&gt;[ruby-]2.0.0[-p353]&lt;/span&gt;
&lt;span class="go"&gt;[ruby-]2.1.0&lt;/span&gt;
&lt;span class="go"&gt;[ruby-]2.1-head&lt;/span&gt;
&lt;span class="go"&gt;ruby-head&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Elegí instalar la versión 2.1.0 con la siguiente&amp;nbsp;instrucción:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; rvm install &lt;span class="m"&gt;2&lt;/span&gt;.1.0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para ver que versión de Ruby tienen efectivamente instalada&amp;nbsp;teclean:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ruby -v
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="instalacion-de-jekyll"&gt;
&lt;h2&gt;Instalación de&amp;nbsp;Jekyll&lt;/h2&gt;
&lt;p&gt;Ahora sí van a poder instalar&amp;nbsp;Jekyll:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; gem install jekyll
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="generacion-del-nuevo-blog"&gt;
&lt;h2&gt;Generación del nuevo&amp;nbsp;blog&lt;/h2&gt;
&lt;p&gt;El sitio se inicializa generándose los primeros archivos&amp;nbsp;imprescindibles:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; jekyll new el-nombre-de-mi-blog
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Después hay que hacer un&amp;nbsp;build:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; jekyll build
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="blog-local"&gt;
&lt;h2&gt;Blog&amp;nbsp;local&lt;/h2&gt;
&lt;p&gt;Se puede acceder a la versión local del sitio web (para corroborar que
todo se vea tal como se desea, antes de subirlo al&amp;nbsp;hosting):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; jekyll serve --watch
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;La dirección para ver el sitio generado será &lt;a class="reference external" href="http://localhost:4000"&gt;http://localhost:4000&lt;/a&gt; o
sino también &lt;a class="reference external" href="http://0.0.0.0:4000"&gt;http://0.0.0.0:4000&lt;/a&gt;. El agregado de &lt;strong&gt;&amp;#8212;watch&lt;/strong&gt; permite
que si se realizan cambios en los archivos, éstos se puedan ver
inmediatamente recargando la página del&amp;nbsp;navegador.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="subiendo-el-sitio-a-un-hosting"&gt;
&lt;h2&gt;Subiendo el sitio a un&amp;nbsp;hosting&lt;/h2&gt;
&lt;p&gt;Para actualizar el sitio en el hosting sólo hará falta subir al mismo
el contenido de la carpeta &lt;strong&gt;_site&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-end"&gt;
&lt;h2&gt;The&amp;nbsp;End&lt;/h2&gt;
&lt;p&gt;La ventaja de Jekyll es que finalmente se termina escribiendo en texto
plano (con la ayuda de &lt;a class="reference external" href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt; se generan páginas
estáticas (que funcionan muy rápido) y se logra inmunidad frente a los
ataques de hackers de&amp;nbsp;Indonesia.&lt;/p&gt;
&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="jekyll"></category><category term="blog"></category><category term="octopress"></category><category term="tutorial"></category></entry><entry><title>Aprender a lo Hansel y Gretel</title><link href="https://eldiegoefe.github.io/aprender-a-lo-hansel-y-gretel.html" rel="alternate"></link><published>2014-02-09T10:00:00+01:00</published><updated>2014-02-09T10:00:00+01:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-02-09:/aprender-a-lo-hansel-y-gretel.html</id><summary type="html">&lt;p&gt;Aprender programación mediante un libro, sobre todo si uno le cree a
la contra-tapa, requiere seguir capítulo a capítulo, sección a sección,
todas las instrucciones. Es como que nos programamos para
programar. Pero al copiar los ejemplos, incluso chequeando que no haya
errores de tipeo, suelen aparecer problemas. Los resultados …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Aprender programación mediante un libro, sobre todo si uno le cree a
la contra-tapa, requiere seguir capítulo a capítulo, sección a sección,
todas las instrucciones. Es como que nos programamos para
programar. Pero al copiar los ejemplos, incluso chequeando que no haya
errores de tipeo, suelen aparecer problemas. Los resultados no son los
esperados, aparecen errores, excepciones, relámpagos y&amp;nbsp;huracanes.&lt;/p&gt;
&lt;p&gt;Mientras sigo con las lecturas sobre IPython nos dicen que importemos
el paquete NetworkX. Sin embargo, es desconocido para mi
sistema. Busco ayuda y llego a la pagina de NetworkX donde están &lt;a class="reference external" href="http://networkx.github.io/documentation/latest/install.html"&gt;las
instrucciones de instalación&lt;/a&gt;. Dice
que se instala fácilmente con &lt;cite&gt;pip install networkx&lt;/cite&gt; pero resulta que
pip tampoco es un comando conocido. A buscar pip. Recién ahí se
completa el rompecabezas. Se instala en Fedora con un &lt;cite&gt;sudo yum
install python-pip&lt;/cite&gt; y luego a recorrer el caminito de mendrugos de
pan, rogando reencontrarnos con la posibilidad de seguir linealmente
la secuencia de instrucciones del libro, que no me engaña, ha sido
escrito por la bruja de Hansel y&amp;nbsp;Gretel.&lt;/p&gt;
</content><category term="tecnicismos"></category><category term="relatos"></category><category term="programacion"></category></entry><entry><title>Usando control de versiones</title><link href="https://eldiegoefe.github.io/usando-control-de-versiones.html" rel="alternate"></link><published>2014-02-09T10:00:00+01:00</published><updated>2014-02-09T10:00:00+01:00</updated><author><name>El Diego Efe</name></author><id>tag:eldiegoefe.github.io,2014-02-09:/usando-control-de-versiones.html</id><summary type="html">&lt;p&gt;(editado: empecé a traducir un buen tutorial de Git y lo pueden ver en
&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-1.html"&gt;este post&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;El año pasado conocí algo que ya se había cruzado en mi camino y no me
había dado cuenta. Una necesidad lo requería: miles de versiones del
mismo archivo con el nombre evolucionando con …&lt;/p&gt;</summary><content type="html">&lt;p&gt;(editado: empecé a traducir un buen tutorial de Git y lo pueden ver en
&lt;a class="reference external" href="https://eldiegoefe.github.io/tutorial-sobre-control-de-versiones-parte-1.html"&gt;este post&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;El año pasado conocí algo que ya se había cruzado en mi camino y no me
había dado cuenta. Una necesidad lo requería: miles de versiones del
mismo archivo con el nombre evolucionando con rastros de racionalidad
pero en definitiva impidiendo saber si, tras dos o tres días de
ausencia, me encontraba trabajando sobre la última versión o si la que
decía &amp;#8220;ultima final para imprimir final b&amp;#8221; era realmente la que debía
utilizar. Tanto sea un documento de texto como un programa es
imprescindible tener algún método, y el método manual que utilizo
desde que tengo uso de memoria ya ven lo deficiente que&amp;nbsp;es.&lt;/p&gt;
&lt;p&gt;Por el lado ya no de la necesidad sino del efectivo uso del control de
versiones, encontré interesante la funcionalidad de las wikis, que van
almacenando todas las versiones previas y no tan solamente la última,
que es la que muestran; pudiéndose recuperar una versión más antigua e
incluso comparar la versión del texto actual con cualquier versión&amp;nbsp;previa.&lt;/p&gt;
&lt;p&gt;Así fue como el año pasado me entusiasmé leyendo sobre mercurial, git,
commits, branches, bitbuckets, githubs y palabrerío
relacionado. Advertí que incluso está presente todo eso en software
ampliamente diverso que yo había usado en el pasado (como labview o
lyx), pero no le había dado la menor&amp;nbsp;bola.&lt;/p&gt;
&lt;p&gt;Github es un sitio web que ofrece el sistema de control de versiones,
un servicio de alojar archivos con la funcionalidad asociada de
recuperar versiones anteriores y todo lo relacionado con ello. Es
ampliamente mencionado y usado por los desarrolladores y comunidades
de software libre (creo que es el sitio elegido para alojar las
distintas versiones del kernel de linux). Es sumamente interesante que
estén a disposición de los navegantes todos los códigos fuentes allí
alojados, de manera tal que uno puede &amp;#8220;clonar&amp;#8221; todos esos archivos
(escritos en el idioma que sea) y trabajar con ellos en la computadora
personal. La idea es que cualquiera puede realizarle mejoras al
programa y pedir, mediante el propio sistema que ofrece el motor del
sitio, la inclusión de sus aportes al código fuente del&amp;nbsp;programa.&lt;/p&gt;
&lt;p&gt;Copio acá algunos apuntes mios del uso de &lt;span class="caps"&gt;GIT&lt;/span&gt;, no es un tutorial (ya
hay muchos en la web, como el de &lt;a class="reference external" href="http://www.vogella.com/tutorials/Git/article.html"&gt;Lars Vogel&lt;/a&gt;, sino más bien
un ayuda-memoria para mi mismo, que estoy permanentemente buscando los
comandos. Espero poder recordarlos a medida que los&amp;nbsp;use:&lt;/p&gt;
&lt;p&gt;Un repositorio es un conjunto de archivos correspondientes a un mismo
proyecto, y con la misma palabra se designa al espacio donde estos se
alojan. En general un desarrollador conserva un repositorio local (un
directorio con todos los archivos en su propia computadora) y un
repositorio remoto (en un sitio como github, bitbucket,&amp;nbsp;etc).&lt;/p&gt;
&lt;p&gt;Un mismo repositorio tiene una o varias ramas (branches). Solamente
puede estar habilitada una rama en cada momento, la cual muestra un
conjunto de archivos y directorios relativos a esa rama (o los mismos
archivos pero quizás con otro&amp;nbsp;contenido).&lt;/p&gt;
&lt;p&gt;En el archivo &lt;cite&gt;.gitignore&lt;/cite&gt; (que puede estar en cualquier subdirectorio
del repositorio) se listan los archivos que deben ignorarse. Por
ejemplo &lt;cite&gt;*.pyc&lt;/cite&gt; (los archivos de python compilados) o los &lt;cite&gt;*.exe&lt;/cite&gt; (lo
que se controla con este sistema son las versiones del código fuente,
no los&amp;nbsp;binarios).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;.git&lt;/strong&gt; (es un directorio) contiene la historia completa del
repositorio. El contenido sólo lo manipula el motor del sistema y no
el&amp;nbsp;usuario.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;.git/config&lt;/strong&gt; contiene la configuración local del&amp;nbsp;repositorio&lt;/p&gt;
&lt;p&gt;Los comandos más usados pueden estar entre los&amp;nbsp;siguientes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;git init # Inicializamos el repositorio local Git&lt;/span&gt;
&lt;span class="go"&gt;git add . # Agregamos todo (archivos y directorios) al repositorio&lt;/span&gt;
&lt;span class="go"&gt;git commit -m &amp;quot;Initial commit&amp;quot; # Hacemos un commit al repositorio&lt;/span&gt;
&lt;span class="go"&gt;git log # Muestra el log (un historial)&lt;/span&gt;
&lt;span class="go"&gt;git add # Para agregar cosas al index stage (indice).&lt;/span&gt;
&lt;span class="go"&gt;git a # Idéntico al anterior&lt;/span&gt;
&lt;span class="go"&gt;git remote -v # Para ver a donde apunta el origin&lt;/span&gt;
&lt;span class="go"&gt;git remote add origin git@github.com:usuario/repo.git # Para cambiar el origin&lt;/span&gt;
&lt;span class="go"&gt;git remote rm origin # Para elimiar el origin&lt;/span&gt;
&lt;span class="go"&gt;git push # Para enviar los cambios al repositorio&lt;/span&gt;
&lt;span class="go"&gt;git pull # Para traer los cambios desde el repositorio&lt;/span&gt;
&lt;span class="go"&gt;git branch # Para ver las distintas ramas existentes&lt;/span&gt;
&lt;span class="go"&gt;git branch nombre-de-la-nueva-rama # Para crear una rama&lt;/span&gt;
&lt;span class="go"&gt;git checkout nombre-de-la-otra-rama # Para cambiar a otra rama&lt;/span&gt;
&lt;span class="go"&gt;git commit -a -m &amp;quot;Mensaje de commit&amp;quot; # Para comitear&lt;/span&gt;
&lt;span class="go"&gt;git branch -d nombre-del-branch-a-borrar # Para borrar un branch&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="tecnicismos"></category><category term="git"></category><category term="control de versiones"></category><category term="cheat sheet"></category></entry></feed>